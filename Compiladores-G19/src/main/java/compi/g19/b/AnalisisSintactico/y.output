   0  $accept : programa $end

   1  programa : ID BEGIN list_sentencias END
   2           | BEGIN list_sentencias END
   3           | ID BEGIN list_sentencias
   4           | ID list_sentencias END
   5           | ID list_sentencias

   6  list_sentencias : list_sentencias sentencia
   7                  | sentencia

   8  sentencia : sentencia_declarativa ';'
   9            | sentencia_ejecutable ';'
  10            | sentencia_ejecutable
  11            | sentencia_declarativa

  12  sentencia_declarativa : tipo list_variables
  13                        | declaracion_funcion
  14                        | declaracion_tipo

  15  sentencia_ejecutable : asignacion
  16                       | invocacion_funcion
  17                       | bloque_if
  18                       | salida_mensaje
  19                       | sentencia_control

  20  sentencia_control : FOR '(' encabezado_for ')' bloque_sentencias_ejecutables
  21                    | FOR '(' encabezado_for ')' error
  22                    | FOR encabezado_for ')' bloque_sentencias_ejecutables
  23                    | FOR '(' encabezado_for bloque_sentencias_ejecutables

  24  encabezado_for : encabezado_for1
  25                 | encabezado_for2

  26  encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE
  27                  | ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE
  28                  | ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE
  29                  | ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE

  30  encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE ';' '(' condicion ')'
  31                  | ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE ';' '(' condicion ')'
  32                  | ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE ';' '(' condicion ')'
  33                  | ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE ';' '(' condicion ')'
  34                  | ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE '(' condicion ')'

  35  up_down : UP
  36          | DOWN

  37  asignacion : ID ASIGNACION expresion
  38             | ID '[' CONSTANTE ']' ASIGNACION expresion
  39             | ID ASIGNACION error

  40  tipo : tipo_base
  41       | ID

  42  tipo_base : ULONGINT
  43            | SINGLE

  44  list_variables : list_variables ',' ID
  45                 | ID

  46  $$1 :

  47  $$2 :

  48  declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN $$1 cuerpo_funcion $$2 END
  49                      | tipo FUN ID '(' bloque_list_parametro ')' BEGIN cuerpo_funcion END
  50                      | tipo FUN '(' parametro ')' BEGIN cuerpo_funcion END
  51                      | tipo FUN ID '(' ')' BEGIN cuerpo_funcion END

  52  parametro : tipo ID
  53            | ID

  54  bloque_list_parametro : list_parametro ',' parametro

  55  list_parametro : parametro
  56                 | list_parametro ',' parametro

  57  cuerpo_funcion : list_sentencias_funcion sentencia_return ';'
  58                 | list_sentencias_funcion
  59                 | sentencia_return ';'

  60  list_sentencias_funcion : list_sentencias_funcion sentencia
  61                          | sentencia

  62  sentencia_return : RET '(' expresion ')'

  63  expresion : expresion '+' termino
  64            | expresion '-' termino
  65            | termino
  66            | expresion '+' error
  67            | expresion '-' error

  68  termino : termino '*' factor
  69          | termino '/' factor
  70          | factor
  71          | termino '*' error
  72          | termino '/' error

  73  factor : ID
  74         | CONSTANTE
  75         | invocacion_funcion
  76         | ID '[' CONSTANTE ']'
  77         | '-' ID
  78         | '-' CONSTANTE
  79         | '-' ID '[' CONSTANTE ']'

  80  declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' ID
  81                   | TYPEDEF TRIPLE '<' tipo_base '>' error
  82                   | TYPEDEF TRIPLE tipo_base '>' ID
  83                   | TYPEDEF TRIPLE '<' tipo_base ID

  84  invocacion_funcion : ID '(' expresion ')'
  85                     | ID '(' bloque_list_expresiones ')'
  86                     | ID '(' ')'
  87                     | ID '(' tipo_base '(' expresion ')' ')'

  88  fin_if : END_IF
  89         | error

  90  bloque_sentencias_ejecutables : sentencia_ejecutable ';'
  91                                | sentencia_ejecutable error
  92                                | BEGIN list_sentencias_ejecutables END

  93  bloque_if : IF '(' condicion ')' THEN cuerpo_if ELSE cuerpo_if fin_if
  94            | IF '(' condicion ')' THEN cuerpo_if fin_if
  95            | IF '(' condicion ')' THEN cuerpo_if ELSE error fin_if
  96            | IF '(' condicion ')' THEN error fin_if
  97            | IF condicion ')' THEN cuerpo_if fin_if
  98            | IF '(' condicion THEN cuerpo_if fin_if
  99            | IF condicion ')' THEN cuerpo_if ELSE cuerpo_if fin_if
 100            | IF '(' condicion THEN cuerpo_if ELSE cuerpo_if fin_if

 101  cuerpo_if : bloque_sentencias_ejecutables
 102            | BEGIN list_sentencias_ejecutables sentencia_return ';' END
 103            | sentencia_return ';'

 104  list_sentencias_ejecutables : list_sentencias_ejecutables sentencia_ejecutable ';'
 105                              | sentencia_ejecutable ';'

 106  comparacion : MAYORIGUAL
 107              | MENORIGUAL
 108              | DISTINTO
 109              | '='
 110              | '>'
 111              | '<'

 112  condicion : expresion comparacion expresion
 113            | '(' bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones ')'
 114            | error

 115  bloque_list_expresiones : list_expresiones ',' expresion

 116  list_expresiones : list_expresiones ',' expresion
 117                   | expresion
 118                   | error

 119  salida_mensaje : OUTF '(' CADENA ')'
 120                 | OUTF '(' expresion ')'
 121                 | OUTF '(' ')'

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	BEGIN  shift 2
	.  error

	programa  goto 3


state 1
	programa : ID . BEGIN list_sentencias END  (1)
	programa : ID . BEGIN list_sentencias  (3)
	programa : ID . list_sentencias END  (4)
	programa : ID . list_sentencias  (5)

	ID  shift 4
	IF  shift 5
	BEGIN  shift 6
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	.  error

	list_sentencias  goto 12
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24


state 2
	programa : BEGIN . list_sentencias END  (2)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	.  error

	list_sentencias  goto 25
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24


state 3
	$accept : programa . $end  (0)

	$end  accept


state 4
	asignacion : ID . ASIGNACION expresion  (37)
	asignacion : ID . '[' CONSTANTE ']' ASIGNACION expresion  (38)
	asignacion : ID . ASIGNACION error  (39)
	tipo : ID .  (41)
	invocacion_funcion : ID . '(' expresion ')'  (84)
	invocacion_funcion : ID . '(' bloque_list_expresiones ')'  (85)
	invocacion_funcion : ID . '(' ')'  (86)
	invocacion_funcion : ID . '(' tipo_base '(' expresion ')' ')'  (87)

	ASIGNACION  shift 26
	'('  shift 27
	'['  shift 28
	ID  reduce 41
	FUN  reduce 41


state 5
	bloque_if : IF . '(' condicion ')' THEN cuerpo_if ELSE cuerpo_if fin_if  (93)
	bloque_if : IF . '(' condicion ')' THEN cuerpo_if fin_if  (94)
	bloque_if : IF . '(' condicion ')' THEN cuerpo_if ELSE error fin_if  (95)
	bloque_if : IF . '(' condicion ')' THEN error fin_if  (96)
	bloque_if : IF . condicion ')' THEN cuerpo_if fin_if  (97)
	bloque_if : IF . '(' condicion THEN cuerpo_if fin_if  (98)
	bloque_if : IF . condicion ')' THEN cuerpo_if ELSE cuerpo_if fin_if  (99)
	bloque_if : IF . '(' condicion THEN cuerpo_if ELSE cuerpo_if fin_if  (100)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'('  shift 32
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	condicion  goto 35
	expresion  goto 36
	termino  goto 37
	factor  goto 38


state 6
	programa : ID BEGIN . list_sentencias END  (1)
	programa : ID BEGIN . list_sentencias  (3)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	.  error

	list_sentencias  goto 39
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24


state 7
	salida_mensaje : OUTF . '(' CADENA ')'  (119)
	salida_mensaje : OUTF . '(' expresion ')'  (120)
	salida_mensaje : OUTF . '(' ')'  (121)

	'('  shift 40
	.  error


state 8
	declaracion_tipo : TYPEDEF . TRIPLE '<' tipo_base '>' ID  (80)
	declaracion_tipo : TYPEDEF . TRIPLE '<' tipo_base '>' error  (81)
	declaracion_tipo : TYPEDEF . TRIPLE tipo_base '>' ID  (82)
	declaracion_tipo : TYPEDEF . TRIPLE '<' tipo_base ID  (83)

	TRIPLE  shift 41
	.  error


state 9
	tipo_base : ULONGINT .  (42)

	.  reduce 42


state 10
	tipo_base : SINGLE .  (43)

	.  reduce 43


state 11
	sentencia_control : FOR . '(' encabezado_for ')' bloque_sentencias_ejecutables  (20)
	sentencia_control : FOR . '(' encabezado_for ')' error  (21)
	sentencia_control : FOR . encabezado_for ')' bloque_sentencias_ejecutables  (22)
	sentencia_control : FOR . '(' encabezado_for bloque_sentencias_ejecutables  (23)

	ID  shift 42
	'('  shift 43
	.  error

	encabezado_for  goto 44
	encabezado_for1  goto 45
	encabezado_for2  goto 46


state 12
	programa : ID list_sentencias . END  (4)
	programa : ID list_sentencias .  (5)
	list_sentencias : list_sentencias . sentencia  (6)

	ID  shift 4
	IF  shift 5
	END  shift 47
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	$end  reduce 5

	sentencia  goto 48
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24


state 13
	list_sentencias : sentencia .  (7)

	.  reduce 7


state 14
	sentencia : sentencia_declarativa . ';'  (8)
	sentencia : sentencia_declarativa .  (11)

	';'  shift 49
	$end  reduce 11
	ID  reduce 11
	IF  reduce 11
	END  reduce 11
	OUTF  reduce 11
	TYPEDEF  reduce 11
	RET  reduce 11
	ULONGINT  reduce 11
	SINGLE  reduce 11
	FOR  reduce 11


state 15
	sentencia : sentencia_ejecutable . ';'  (9)
	sentencia : sentencia_ejecutable .  (10)

	';'  shift 50
	$end  reduce 10
	ID  reduce 10
	IF  reduce 10
	END  reduce 10
	OUTF  reduce 10
	TYPEDEF  reduce 10
	RET  reduce 10
	ULONGINT  reduce 10
	SINGLE  reduce 10
	FOR  reduce 10


state 16
	sentencia_declarativa : tipo . list_variables  (12)
	declaracion_funcion : tipo . FUN ID '(' parametro ')' BEGIN $$1 cuerpo_funcion $$2 END  (48)
	declaracion_funcion : tipo . FUN ID '(' bloque_list_parametro ')' BEGIN cuerpo_funcion END  (49)
	declaracion_funcion : tipo . FUN '(' parametro ')' BEGIN cuerpo_funcion END  (50)
	declaracion_funcion : tipo . FUN ID '(' ')' BEGIN cuerpo_funcion END  (51)

	ID  shift 51
	FUN  shift 52
	.  error

	list_variables  goto 53


state 17
	sentencia_declarativa : declaracion_funcion .  (13)

	.  reduce 13


state 18
	sentencia_declarativa : declaracion_tipo .  (14)

	.  reduce 14


state 19
	sentencia_ejecutable : asignacion .  (15)

	.  reduce 15


state 20
	sentencia_ejecutable : invocacion_funcion .  (16)

	.  reduce 16


state 21
	sentencia_ejecutable : bloque_if .  (17)

	.  reduce 17


state 22
	sentencia_ejecutable : salida_mensaje .  (18)

	.  reduce 18


state 23
	sentencia_ejecutable : sentencia_control .  (19)

	.  reduce 19


state 24
	tipo : tipo_base .  (40)

	.  reduce 40


state 25
	programa : BEGIN list_sentencias . END  (2)
	list_sentencias : list_sentencias . sentencia  (6)

	ID  shift 4
	IF  shift 5
	END  shift 54
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	.  error

	sentencia  goto 48
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24


state 26
	asignacion : ID ASIGNACION . expresion  (37)
	asignacion : ID ASIGNACION . error  (39)

	error  shift 55
	ID  shift 30
	CONSTANTE  shift 31
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	expresion  goto 56
	termino  goto 37
	factor  goto 38


state 27
	invocacion_funcion : ID '(' . expresion ')'  (84)
	invocacion_funcion : ID '(' . bloque_list_expresiones ')'  (85)
	invocacion_funcion : ID '(' . ')'  (86)
	invocacion_funcion : ID '(' . tipo_base '(' expresion ')' ')'  (87)

	error  shift 57
	ID  shift 30
	CONSTANTE  shift 31
	ULONGINT  shift 9
	SINGLE  shift 10
	')'  shift 58
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	expresion  goto 59
	tipo_base  goto 60
	termino  goto 37
	factor  goto 38
	bloque_list_expresiones  goto 61
	list_expresiones  goto 62


state 28
	asignacion : ID '[' . CONSTANTE ']' ASIGNACION expresion  (38)

	CONSTANTE  shift 63
	.  error


state 29
	condicion : error .  (114)

	.  reduce 114


state 30
	factor : ID .  (73)
	factor : ID . '[' CONSTANTE ']'  (76)
	invocacion_funcion : ID . '(' expresion ')'  (84)
	invocacion_funcion : ID . '(' bloque_list_expresiones ')'  (85)
	invocacion_funcion : ID . '(' ')'  (86)
	invocacion_funcion : ID . '(' tipo_base '(' expresion ')' ')'  (87)

	'('  shift 27
	'['  shift 64
	$end  reduce 73
	error  reduce 73
	ID  reduce 73
	MAYORIGUAL  reduce 73
	MENORIGUAL  reduce 73
	DISTINTO  reduce 73
	IF  reduce 73
	THEN  reduce 73
	END  reduce 73
	OUTF  reduce 73
	TYPEDEF  reduce 73
	RET  reduce 73
	ULONGINT  reduce 73
	SINGLE  reduce 73
	FOR  reduce 73
	UP  reduce 73
	DOWN  reduce 73
	';'  reduce 73
	')'  reduce 73
	','  reduce 73
	'+'  reduce 73
	'-'  reduce 73
	'*'  reduce 73
	'/'  reduce 73
	'<'  reduce 73
	'>'  reduce 73
	'='  reduce 73


state 31
	factor : CONSTANTE .  (74)

	.  reduce 74


state 32
	bloque_if : IF '(' . condicion ')' THEN cuerpo_if ELSE cuerpo_if fin_if  (93)
	bloque_if : IF '(' . condicion ')' THEN cuerpo_if fin_if  (94)
	bloque_if : IF '(' . condicion ')' THEN cuerpo_if ELSE error fin_if  (95)
	bloque_if : IF '(' . condicion ')' THEN error fin_if  (96)
	bloque_if : IF '(' . condicion THEN cuerpo_if fin_if  (98)
	bloque_if : IF '(' . condicion THEN cuerpo_if ELSE cuerpo_if fin_if  (100)
	condicion : '(' . bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones ')'  (113)

	error  shift 65
	ID  shift 30
	CONSTANTE  shift 31
	'('  shift 66
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	condicion  goto 67
	expresion  goto 68
	termino  goto 37
	factor  goto 38
	bloque_list_expresiones  goto 69
	list_expresiones  goto 62


state 33
	factor : '-' . ID  (77)
	factor : '-' . CONSTANTE  (78)
	factor : '-' . ID '[' CONSTANTE ']'  (79)

	ID  shift 70
	CONSTANTE  shift 71
	.  error


state 34
	factor : invocacion_funcion .  (75)

	.  reduce 75


state 35
	bloque_if : IF condicion . ')' THEN cuerpo_if fin_if  (97)
	bloque_if : IF condicion . ')' THEN cuerpo_if ELSE cuerpo_if fin_if  (99)

	')'  shift 72
	.  error


state 36
	expresion : expresion . '+' termino  (63)
	expresion : expresion . '-' termino  (64)
	expresion : expresion . '+' error  (66)
	expresion : expresion . '-' error  (67)
	condicion : expresion . comparacion expresion  (112)

	MAYORIGUAL  shift 73
	MENORIGUAL  shift 74
	DISTINTO  shift 75
	'+'  shift 76
	'-'  shift 77
	'<'  shift 78
	'>'  shift 79
	'='  shift 80
	.  error

	comparacion  goto 81


state 37
	expresion : termino .  (65)
	termino : termino . '*' factor  (68)
	termino : termino . '/' factor  (69)
	termino : termino . '*' error  (71)
	termino : termino . '/' error  (72)

	'*'  shift 82
	'/'  shift 83
	$end  reduce 65
	error  reduce 65
	ID  reduce 65
	MAYORIGUAL  reduce 65
	MENORIGUAL  reduce 65
	DISTINTO  reduce 65
	IF  reduce 65
	THEN  reduce 65
	END  reduce 65
	OUTF  reduce 65
	TYPEDEF  reduce 65
	RET  reduce 65
	ULONGINT  reduce 65
	SINGLE  reduce 65
	FOR  reduce 65
	UP  reduce 65
	DOWN  reduce 65
	';'  reduce 65
	')'  reduce 65
	','  reduce 65
	'+'  reduce 65
	'-'  reduce 65
	'<'  reduce 65
	'>'  reduce 65
	'='  reduce 65


state 38
	termino : factor .  (70)

	.  reduce 70


state 39
	programa : ID BEGIN list_sentencias . END  (1)
	programa : ID BEGIN list_sentencias .  (3)
	list_sentencias : list_sentencias . sentencia  (6)

	ID  shift 4
	IF  shift 5
	END  shift 84
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	$end  reduce 3

	sentencia  goto 48
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24


state 40
	salida_mensaje : OUTF '(' . CADENA ')'  (119)
	salida_mensaje : OUTF '(' . expresion ')'  (120)
	salida_mensaje : OUTF '(' . ')'  (121)

	ID  shift 30
	CONSTANTE  shift 31
	CADENA  shift 85
	')'  shift 86
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	expresion  goto 87
	termino  goto 37
	factor  goto 38


state 41
	declaracion_tipo : TYPEDEF TRIPLE . '<' tipo_base '>' ID  (80)
	declaracion_tipo : TYPEDEF TRIPLE . '<' tipo_base '>' error  (81)
	declaracion_tipo : TYPEDEF TRIPLE . tipo_base '>' ID  (82)
	declaracion_tipo : TYPEDEF TRIPLE . '<' tipo_base ID  (83)

	ULONGINT  shift 9
	SINGLE  shift 10
	'<'  shift 88
	.  error

	tipo_base  goto 89


state 42
	encabezado_for1 : ID . ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE  (26)
	encabezado_for1 : ID . ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE  (27)
	encabezado_for1 : ID . ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE  (28)
	encabezado_for1 : ID . ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE  (29)
	encabezado_for2 : ID . ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (30)
	encabezado_for2 : ID . ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE ';' '(' condicion ')'  (31)
	encabezado_for2 : ID . ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (32)
	encabezado_for2 : ID . ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE ';' '(' condicion ')'  (33)
	encabezado_for2 : ID . ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE '(' condicion ')'  (34)

	ASIGNACION  shift 90
	.  error


state 43
	sentencia_control : FOR '(' . encabezado_for ')' bloque_sentencias_ejecutables  (20)
	sentencia_control : FOR '(' . encabezado_for ')' error  (21)
	sentencia_control : FOR '(' . encabezado_for bloque_sentencias_ejecutables  (23)

	ID  shift 42
	.  error

	encabezado_for  goto 91
	encabezado_for1  goto 45
	encabezado_for2  goto 46


state 44
	sentencia_control : FOR encabezado_for . ')' bloque_sentencias_ejecutables  (22)

	')'  shift 92
	.  error


state 45
	encabezado_for : encabezado_for1 .  (24)

	.  reduce 24


state 46
	encabezado_for : encabezado_for2 .  (25)

	.  reduce 25


state 47
	programa : ID list_sentencias END .  (4)

	.  reduce 4


state 48
	list_sentencias : list_sentencias sentencia .  (6)

	.  reduce 6


state 49
	sentencia : sentencia_declarativa ';' .  (8)

	.  reduce 8


state 50
	sentencia : sentencia_ejecutable ';' .  (9)

	.  reduce 9


state 51
	list_variables : ID .  (45)

	.  reduce 45


state 52
	declaracion_funcion : tipo FUN . ID '(' parametro ')' BEGIN $$1 cuerpo_funcion $$2 END  (48)
	declaracion_funcion : tipo FUN . ID '(' bloque_list_parametro ')' BEGIN cuerpo_funcion END  (49)
	declaracion_funcion : tipo FUN . '(' parametro ')' BEGIN cuerpo_funcion END  (50)
	declaracion_funcion : tipo FUN . ID '(' ')' BEGIN cuerpo_funcion END  (51)

	ID  shift 93
	'('  shift 94
	.  error


state 53
	sentencia_declarativa : tipo list_variables .  (12)
	list_variables : list_variables . ',' ID  (44)

	','  shift 95
	$end  reduce 12
	ID  reduce 12
	IF  reduce 12
	END  reduce 12
	OUTF  reduce 12
	TYPEDEF  reduce 12
	RET  reduce 12
	ULONGINT  reduce 12
	SINGLE  reduce 12
	FOR  reduce 12
	';'  reduce 12


state 54
	programa : BEGIN list_sentencias END .  (2)

	.  reduce 2


state 55
	asignacion : ID ASIGNACION error .  (39)

	.  reduce 39


state 56
	asignacion : ID ASIGNACION expresion .  (37)
	expresion : expresion . '+' termino  (63)
	expresion : expresion . '-' termino  (64)
	expresion : expresion . '+' error  (66)
	expresion : expresion . '-' error  (67)

	'+'  shift 76
	'-'  shift 77
	$end  reduce 37
	error  reduce 37
	ID  reduce 37
	IF  reduce 37
	END  reduce 37
	OUTF  reduce 37
	TYPEDEF  reduce 37
	RET  reduce 37
	ULONGINT  reduce 37
	SINGLE  reduce 37
	FOR  reduce 37
	';'  reduce 37


state 57
	list_expresiones : error .  (118)

	.  reduce 118


state 58
	invocacion_funcion : ID '(' ')' .  (86)

	.  reduce 86


state 59
	expresion : expresion . '+' termino  (63)
	expresion : expresion . '-' termino  (64)
	expresion : expresion . '+' error  (66)
	expresion : expresion . '-' error  (67)
	invocacion_funcion : ID '(' expresion . ')'  (84)
	list_expresiones : expresion .  (117)

	')'  shift 96
	'+'  shift 76
	'-'  shift 77
	','  reduce 117


state 60
	invocacion_funcion : ID '(' tipo_base . '(' expresion ')' ')'  (87)

	'('  shift 97
	.  error


state 61
	invocacion_funcion : ID '(' bloque_list_expresiones . ')'  (85)

	')'  shift 98
	.  error


state 62
	bloque_list_expresiones : list_expresiones . ',' expresion  (115)
	list_expresiones : list_expresiones . ',' expresion  (116)

	','  shift 99
	.  error


state 63
	asignacion : ID '[' CONSTANTE . ']' ASIGNACION expresion  (38)

	']'  shift 100
	.  error


state 64
	factor : ID '[' . CONSTANTE ']'  (76)

	CONSTANTE  shift 101
	.  error


state 65
	condicion : error .  (114)
	list_expresiones : error .  (118)

	THEN  reduce 114
	')'  reduce 114
	','  reduce 118


state 66
	condicion : '(' . bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones ')'  (113)

	error  shift 57
	ID  shift 30
	CONSTANTE  shift 31
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	expresion  goto 102
	termino  goto 37
	factor  goto 38
	bloque_list_expresiones  goto 69
	list_expresiones  goto 62


state 67
	bloque_if : IF '(' condicion . ')' THEN cuerpo_if ELSE cuerpo_if fin_if  (93)
	bloque_if : IF '(' condicion . ')' THEN cuerpo_if fin_if  (94)
	bloque_if : IF '(' condicion . ')' THEN cuerpo_if ELSE error fin_if  (95)
	bloque_if : IF '(' condicion . ')' THEN error fin_if  (96)
	bloque_if : IF '(' condicion . THEN cuerpo_if fin_if  (98)
	bloque_if : IF '(' condicion . THEN cuerpo_if ELSE cuerpo_if fin_if  (100)

	THEN  shift 103
	')'  shift 104
	.  error


state 68
	expresion : expresion . '+' termino  (63)
	expresion : expresion . '-' termino  (64)
	expresion : expresion . '+' error  (66)
	expresion : expresion . '-' error  (67)
	condicion : expresion . comparacion expresion  (112)
	list_expresiones : expresion .  (117)

	MAYORIGUAL  shift 73
	MENORIGUAL  shift 74
	DISTINTO  shift 75
	'+'  shift 76
	'-'  shift 77
	'<'  shift 78
	'>'  shift 79
	'='  shift 80
	','  reduce 117

	comparacion  goto 81


state 69
	condicion : '(' bloque_list_expresiones . ')' comparacion '(' bloque_list_expresiones ')'  (113)

	')'  shift 105
	.  error


state 70
	factor : '-' ID .  (77)
	factor : '-' ID . '[' CONSTANTE ']'  (79)

	'['  shift 106
	$end  reduce 77
	error  reduce 77
	ID  reduce 77
	MAYORIGUAL  reduce 77
	MENORIGUAL  reduce 77
	DISTINTO  reduce 77
	IF  reduce 77
	THEN  reduce 77
	END  reduce 77
	OUTF  reduce 77
	TYPEDEF  reduce 77
	RET  reduce 77
	ULONGINT  reduce 77
	SINGLE  reduce 77
	FOR  reduce 77
	UP  reduce 77
	DOWN  reduce 77
	';'  reduce 77
	')'  reduce 77
	','  reduce 77
	'+'  reduce 77
	'-'  reduce 77
	'*'  reduce 77
	'/'  reduce 77
	'<'  reduce 77
	'>'  reduce 77
	'='  reduce 77


state 71
	factor : '-' CONSTANTE .  (78)

	.  reduce 78


state 72
	bloque_if : IF condicion ')' . THEN cuerpo_if fin_if  (97)
	bloque_if : IF condicion ')' . THEN cuerpo_if ELSE cuerpo_if fin_if  (99)

	THEN  shift 107
	.  error


state 73
	comparacion : MAYORIGUAL .  (106)

	.  reduce 106


state 74
	comparacion : MENORIGUAL .  (107)

	.  reduce 107


state 75
	comparacion : DISTINTO .  (108)

	.  reduce 108


state 76
	expresion : expresion '+' . termino  (63)
	expresion : expresion '+' . error  (66)

	error  shift 108
	ID  shift 30
	CONSTANTE  shift 31
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	termino  goto 109
	factor  goto 38


state 77
	expresion : expresion '-' . termino  (64)
	expresion : expresion '-' . error  (67)

	error  shift 110
	ID  shift 30
	CONSTANTE  shift 31
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	termino  goto 111
	factor  goto 38


state 78
	comparacion : '<' .  (111)

	.  reduce 111


state 79
	comparacion : '>' .  (110)

	.  reduce 110


state 80
	comparacion : '=' .  (109)

	.  reduce 109


state 81
	condicion : expresion comparacion . expresion  (112)

	ID  shift 30
	CONSTANTE  shift 31
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	expresion  goto 112
	termino  goto 37
	factor  goto 38


state 82
	termino : termino '*' . factor  (68)
	termino : termino '*' . error  (71)

	error  shift 113
	ID  shift 30
	CONSTANTE  shift 31
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	factor  goto 114


state 83
	termino : termino '/' . factor  (69)
	termino : termino '/' . error  (72)

	error  shift 115
	ID  shift 30
	CONSTANTE  shift 31
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	factor  goto 116


state 84
	programa : ID BEGIN list_sentencias END .  (1)

	.  reduce 1


state 85
	salida_mensaje : OUTF '(' CADENA . ')'  (119)

	')'  shift 117
	.  error


state 86
	salida_mensaje : OUTF '(' ')' .  (121)

	.  reduce 121


state 87
	expresion : expresion . '+' termino  (63)
	expresion : expresion . '-' termino  (64)
	expresion : expresion . '+' error  (66)
	expresion : expresion . '-' error  (67)
	salida_mensaje : OUTF '(' expresion . ')'  (120)

	')'  shift 118
	'+'  shift 76
	'-'  shift 77
	.  error


state 88
	declaracion_tipo : TYPEDEF TRIPLE '<' . tipo_base '>' ID  (80)
	declaracion_tipo : TYPEDEF TRIPLE '<' . tipo_base '>' error  (81)
	declaracion_tipo : TYPEDEF TRIPLE '<' . tipo_base ID  (83)

	ULONGINT  shift 9
	SINGLE  shift 10
	.  error

	tipo_base  goto 119


state 89
	declaracion_tipo : TYPEDEF TRIPLE tipo_base . '>' ID  (82)

	'>'  shift 120
	.  error


state 90
	encabezado_for1 : ID ASIGNACION . CONSTANTE ';' condicion ';' up_down CONSTANTE  (26)
	encabezado_for1 : ID ASIGNACION . CONSTANTE ';' condicion ';' CONSTANTE  (27)
	encabezado_for1 : ID ASIGNACION . CONSTANTE condicion ';' up_down CONSTANTE  (28)
	encabezado_for1 : ID ASIGNACION . CONSTANTE ';' condicion up_down CONSTANTE  (29)
	encabezado_for2 : ID ASIGNACION . CONSTANTE ';' condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (30)
	encabezado_for2 : ID ASIGNACION . CONSTANTE ';' condicion ';' CONSTANTE ';' '(' condicion ')'  (31)
	encabezado_for2 : ID ASIGNACION . CONSTANTE condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (32)
	encabezado_for2 : ID ASIGNACION . CONSTANTE ';' condicion up_down CONSTANTE ';' '(' condicion ')'  (33)
	encabezado_for2 : ID ASIGNACION . CONSTANTE ';' condicion ';' up_down CONSTANTE '(' condicion ')'  (34)

	CONSTANTE  shift 121
	.  error


state 91
	sentencia_control : FOR '(' encabezado_for . ')' bloque_sentencias_ejecutables  (20)
	sentencia_control : FOR '(' encabezado_for . ')' error  (21)
	sentencia_control : FOR '(' encabezado_for . bloque_sentencias_ejecutables  (23)

	ID  shift 122
	IF  shift 5
	BEGIN  shift 123
	OUTF  shift 7
	FOR  shift 11
	')'  shift 124
	.  error

	sentencia_ejecutable  goto 125
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 126


state 92
	sentencia_control : FOR encabezado_for ')' . bloque_sentencias_ejecutables  (22)

	ID  shift 122
	IF  shift 5
	BEGIN  shift 123
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 125
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 127


state 93
	declaracion_funcion : tipo FUN ID . '(' parametro ')' BEGIN $$1 cuerpo_funcion $$2 END  (48)
	declaracion_funcion : tipo FUN ID . '(' bloque_list_parametro ')' BEGIN cuerpo_funcion END  (49)
	declaracion_funcion : tipo FUN ID . '(' ')' BEGIN cuerpo_funcion END  (51)

	'('  shift 128
	.  error


state 94
	declaracion_funcion : tipo FUN '(' . parametro ')' BEGIN cuerpo_funcion END  (50)

	ID  shift 129
	ULONGINT  shift 9
	SINGLE  shift 10
	.  error

	tipo  goto 130
	tipo_base  goto 24
	parametro  goto 131


state 95
	list_variables : list_variables ',' . ID  (44)

	ID  shift 132
	.  error


state 96
	invocacion_funcion : ID '(' expresion ')' .  (84)

	.  reduce 84


state 97
	invocacion_funcion : ID '(' tipo_base '(' . expresion ')' ')'  (87)

	ID  shift 30
	CONSTANTE  shift 31
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	expresion  goto 133
	termino  goto 37
	factor  goto 38


state 98
	invocacion_funcion : ID '(' bloque_list_expresiones ')' .  (85)

	.  reduce 85


state 99
	bloque_list_expresiones : list_expresiones ',' . expresion  (115)
	list_expresiones : list_expresiones ',' . expresion  (116)

	ID  shift 30
	CONSTANTE  shift 31
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	expresion  goto 134
	termino  goto 37
	factor  goto 38


state 100
	asignacion : ID '[' CONSTANTE ']' . ASIGNACION expresion  (38)

	ASIGNACION  shift 135
	.  error


state 101
	factor : ID '[' CONSTANTE . ']'  (76)

	']'  shift 136
	.  error


state 102
	expresion : expresion . '+' termino  (63)
	expresion : expresion . '-' termino  (64)
	expresion : expresion . '+' error  (66)
	expresion : expresion . '-' error  (67)
	list_expresiones : expresion .  (117)

	'+'  shift 76
	'-'  shift 77
	','  reduce 117


state 103
	bloque_if : IF '(' condicion THEN . cuerpo_if fin_if  (98)
	bloque_if : IF '(' condicion THEN . cuerpo_if ELSE cuerpo_if fin_if  (100)

	ID  shift 122
	IF  shift 5
	BEGIN  shift 137
	OUTF  shift 7
	RET  shift 138
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 125
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 139
	sentencia_return  goto 140
	cuerpo_if  goto 141


state 104
	bloque_if : IF '(' condicion ')' . THEN cuerpo_if ELSE cuerpo_if fin_if  (93)
	bloque_if : IF '(' condicion ')' . THEN cuerpo_if fin_if  (94)
	bloque_if : IF '(' condicion ')' . THEN cuerpo_if ELSE error fin_if  (95)
	bloque_if : IF '(' condicion ')' . THEN error fin_if  (96)

	THEN  shift 142
	.  error


state 105
	condicion : '(' bloque_list_expresiones ')' . comparacion '(' bloque_list_expresiones ')'  (113)

	MAYORIGUAL  shift 73
	MENORIGUAL  shift 74
	DISTINTO  shift 75
	'<'  shift 78
	'>'  shift 79
	'='  shift 80
	.  error

	comparacion  goto 143


state 106
	factor : '-' ID '[' . CONSTANTE ']'  (79)

	CONSTANTE  shift 144
	.  error


state 107
	bloque_if : IF condicion ')' THEN . cuerpo_if fin_if  (97)
	bloque_if : IF condicion ')' THEN . cuerpo_if ELSE cuerpo_if fin_if  (99)

	ID  shift 122
	IF  shift 5
	BEGIN  shift 137
	OUTF  shift 7
	RET  shift 138
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 125
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 139
	sentencia_return  goto 140
	cuerpo_if  goto 145


state 108
	expresion : expresion '+' error .  (66)

	.  reduce 66


state 109
	expresion : expresion '+' termino .  (63)
	termino : termino . '*' factor  (68)
	termino : termino . '/' factor  (69)
	termino : termino . '*' error  (71)
	termino : termino . '/' error  (72)

	'*'  shift 82
	'/'  shift 83
	$end  reduce 63
	error  reduce 63
	ID  reduce 63
	MAYORIGUAL  reduce 63
	MENORIGUAL  reduce 63
	DISTINTO  reduce 63
	IF  reduce 63
	THEN  reduce 63
	END  reduce 63
	OUTF  reduce 63
	TYPEDEF  reduce 63
	RET  reduce 63
	ULONGINT  reduce 63
	SINGLE  reduce 63
	FOR  reduce 63
	UP  reduce 63
	DOWN  reduce 63
	';'  reduce 63
	')'  reduce 63
	','  reduce 63
	'+'  reduce 63
	'-'  reduce 63
	'<'  reduce 63
	'>'  reduce 63
	'='  reduce 63


state 110
	expresion : expresion '-' error .  (67)

	.  reduce 67


state 111
	expresion : expresion '-' termino .  (64)
	termino : termino . '*' factor  (68)
	termino : termino . '/' factor  (69)
	termino : termino . '*' error  (71)
	termino : termino . '/' error  (72)

	'*'  shift 82
	'/'  shift 83
	$end  reduce 64
	error  reduce 64
	ID  reduce 64
	MAYORIGUAL  reduce 64
	MENORIGUAL  reduce 64
	DISTINTO  reduce 64
	IF  reduce 64
	THEN  reduce 64
	END  reduce 64
	OUTF  reduce 64
	TYPEDEF  reduce 64
	RET  reduce 64
	ULONGINT  reduce 64
	SINGLE  reduce 64
	FOR  reduce 64
	UP  reduce 64
	DOWN  reduce 64
	';'  reduce 64
	')'  reduce 64
	','  reduce 64
	'+'  reduce 64
	'-'  reduce 64
	'<'  reduce 64
	'>'  reduce 64
	'='  reduce 64


state 112
	expresion : expresion . '+' termino  (63)
	expresion : expresion . '-' termino  (64)
	expresion : expresion . '+' error  (66)
	expresion : expresion . '-' error  (67)
	condicion : expresion comparacion expresion .  (112)

	'+'  shift 76
	'-'  shift 77
	THEN  reduce 112
	UP  reduce 112
	DOWN  reduce 112
	';'  reduce 112
	')'  reduce 112


state 113
	termino : termino '*' error .  (71)

	.  reduce 71


state 114
	termino : termino '*' factor .  (68)

	.  reduce 68


state 115
	termino : termino '/' error .  (72)

	.  reduce 72


state 116
	termino : termino '/' factor .  (69)

	.  reduce 69


state 117
	salida_mensaje : OUTF '(' CADENA ')' .  (119)

	.  reduce 119


state 118
	salida_mensaje : OUTF '(' expresion ')' .  (120)

	.  reduce 120


state 119
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base . '>' ID  (80)
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base . '>' error  (81)
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base . ID  (83)

	ID  shift 146
	'>'  shift 147
	.  error


state 120
	declaracion_tipo : TYPEDEF TRIPLE tipo_base '>' . ID  (82)

	ID  shift 148
	.  error


state 121
	encabezado_for1 : ID ASIGNACION CONSTANTE . ';' condicion ';' up_down CONSTANTE  (26)
	encabezado_for1 : ID ASIGNACION CONSTANTE . ';' condicion ';' CONSTANTE  (27)
	encabezado_for1 : ID ASIGNACION CONSTANTE . condicion ';' up_down CONSTANTE  (28)
	encabezado_for1 : ID ASIGNACION CONSTANTE . ';' condicion up_down CONSTANTE  (29)
	encabezado_for2 : ID ASIGNACION CONSTANTE . ';' condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (30)
	encabezado_for2 : ID ASIGNACION CONSTANTE . ';' condicion ';' CONSTANTE ';' '(' condicion ')'  (31)
	encabezado_for2 : ID ASIGNACION CONSTANTE . condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (32)
	encabezado_for2 : ID ASIGNACION CONSTANTE . ';' condicion up_down CONSTANTE ';' '(' condicion ')'  (33)
	encabezado_for2 : ID ASIGNACION CONSTANTE . ';' condicion ';' up_down CONSTANTE '(' condicion ')'  (34)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	';'  shift 149
	'('  shift 66
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	condicion  goto 150
	expresion  goto 36
	termino  goto 37
	factor  goto 38


state 122
	asignacion : ID . ASIGNACION expresion  (37)
	asignacion : ID . '[' CONSTANTE ']' ASIGNACION expresion  (38)
	asignacion : ID . ASIGNACION error  (39)
	invocacion_funcion : ID . '(' expresion ')'  (84)
	invocacion_funcion : ID . '(' bloque_list_expresiones ')'  (85)
	invocacion_funcion : ID . '(' ')'  (86)
	invocacion_funcion : ID . '(' tipo_base '(' expresion ')' ')'  (87)

	ASIGNACION  shift 26
	'('  shift 27
	'['  shift 28
	.  error


state 123
	bloque_sentencias_ejecutables : BEGIN . list_sentencias_ejecutables END  (92)

	ID  shift 122
	IF  shift 5
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 151
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	list_sentencias_ejecutables  goto 152


state 124
	sentencia_control : FOR '(' encabezado_for ')' . bloque_sentencias_ejecutables  (20)
	sentencia_control : FOR '(' encabezado_for ')' . error  (21)

	error  shift 153
	ID  shift 122
	IF  shift 5
	BEGIN  shift 123
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 125
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 154


state 125
	bloque_sentencias_ejecutables : sentencia_ejecutable . ';'  (90)
	bloque_sentencias_ejecutables : sentencia_ejecutable . error  (91)

	error  shift 155
	';'  shift 156
	.  error


state 126
	sentencia_control : FOR '(' encabezado_for bloque_sentencias_ejecutables .  (23)

	.  reduce 23


state 127
	sentencia_control : FOR encabezado_for ')' bloque_sentencias_ejecutables .  (22)

	.  reduce 22


state 128
	declaracion_funcion : tipo FUN ID '(' . parametro ')' BEGIN $$1 cuerpo_funcion $$2 END  (48)
	declaracion_funcion : tipo FUN ID '(' . bloque_list_parametro ')' BEGIN cuerpo_funcion END  (49)
	declaracion_funcion : tipo FUN ID '(' . ')' BEGIN cuerpo_funcion END  (51)

	ID  shift 129
	ULONGINT  shift 9
	SINGLE  shift 10
	')'  shift 157
	.  error

	tipo  goto 130
	tipo_base  goto 24
	parametro  goto 158
	bloque_list_parametro  goto 159
	list_parametro  goto 160


state 129
	tipo : ID .  (41)
	parametro : ID .  (53)

	ID  reduce 41
	')'  reduce 53
	','  reduce 53


state 130
	parametro : tipo . ID  (52)

	ID  shift 161
	.  error


state 131
	declaracion_funcion : tipo FUN '(' parametro . ')' BEGIN cuerpo_funcion END  (50)

	')'  shift 162
	.  error


state 132
	list_variables : list_variables ',' ID .  (44)

	.  reduce 44


state 133
	expresion : expresion . '+' termino  (63)
	expresion : expresion . '-' termino  (64)
	expresion : expresion . '+' error  (66)
	expresion : expresion . '-' error  (67)
	invocacion_funcion : ID '(' tipo_base '(' expresion . ')' ')'  (87)

	')'  shift 163
	'+'  shift 76
	'-'  shift 77
	.  error


state 134
	expresion : expresion . '+' termino  (63)
	expresion : expresion . '-' termino  (64)
	expresion : expresion . '+' error  (66)
	expresion : expresion . '-' error  (67)
	bloque_list_expresiones : list_expresiones ',' expresion .  (115)
	list_expresiones : list_expresiones ',' expresion .  (116)

	'+'  shift 76
	'-'  shift 77
	')'  reduce 115
	','  reduce 116


state 135
	asignacion : ID '[' CONSTANTE ']' ASIGNACION . expresion  (38)

	ID  shift 30
	CONSTANTE  shift 31
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	expresion  goto 164
	termino  goto 37
	factor  goto 38


state 136
	factor : ID '[' CONSTANTE ']' .  (76)

	.  reduce 76


state 137
	bloque_sentencias_ejecutables : BEGIN . list_sentencias_ejecutables END  (92)
	cuerpo_if : BEGIN . list_sentencias_ejecutables sentencia_return ';' END  (102)

	ID  shift 122
	IF  shift 5
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 151
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	list_sentencias_ejecutables  goto 165


state 138
	sentencia_return : RET . '(' expresion ')'  (62)

	'('  shift 166
	.  error


state 139
	cuerpo_if : bloque_sentencias_ejecutables .  (101)

	.  reduce 101


state 140
	cuerpo_if : sentencia_return . ';'  (103)

	';'  shift 167
	.  error


state 141
	bloque_if : IF '(' condicion THEN cuerpo_if . fin_if  (98)
	bloque_if : IF '(' condicion THEN cuerpo_if . ELSE cuerpo_if fin_if  (100)

	error  shift 168
	ELSE  shift 169
	END_IF  shift 170
	.  error

	fin_if  goto 171


state 142
	bloque_if : IF '(' condicion ')' THEN . cuerpo_if ELSE cuerpo_if fin_if  (93)
	bloque_if : IF '(' condicion ')' THEN . cuerpo_if fin_if  (94)
	bloque_if : IF '(' condicion ')' THEN . cuerpo_if ELSE error fin_if  (95)
	bloque_if : IF '(' condicion ')' THEN . error fin_if  (96)

	error  shift 172
	ID  shift 122
	IF  shift 5
	BEGIN  shift 137
	OUTF  shift 7
	RET  shift 138
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 125
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 139
	sentencia_return  goto 140
	cuerpo_if  goto 173


state 143
	condicion : '(' bloque_list_expresiones ')' comparacion . '(' bloque_list_expresiones ')'  (113)

	'('  shift 174
	.  error


state 144
	factor : '-' ID '[' CONSTANTE . ']'  (79)

	']'  shift 175
	.  error


state 145
	bloque_if : IF condicion ')' THEN cuerpo_if . fin_if  (97)
	bloque_if : IF condicion ')' THEN cuerpo_if . ELSE cuerpo_if fin_if  (99)

	error  shift 168
	ELSE  shift 176
	END_IF  shift 170
	.  error

	fin_if  goto 177


state 146
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base ID .  (83)

	.  reduce 83


state 147
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' . ID  (80)
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' . error  (81)

	error  shift 178
	ID  shift 179
	.  error


state 148
	declaracion_tipo : TYPEDEF TRIPLE tipo_base '>' ID .  (82)

	.  reduce 82


state 149
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' . condicion ';' up_down CONSTANTE  (26)
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' . condicion ';' CONSTANTE  (27)
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' . condicion up_down CONSTANTE  (29)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' . condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (30)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' . condicion ';' CONSTANTE ';' '(' condicion ')'  (31)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' . condicion up_down CONSTANTE ';' '(' condicion ')'  (33)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' . condicion ';' up_down CONSTANTE '(' condicion ')'  (34)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'('  shift 66
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	condicion  goto 180
	expresion  goto 36
	termino  goto 37
	factor  goto 38


state 150
	encabezado_for1 : ID ASIGNACION CONSTANTE condicion . ';' up_down CONSTANTE  (28)
	encabezado_for2 : ID ASIGNACION CONSTANTE condicion . ';' up_down CONSTANTE ';' '(' condicion ')'  (32)

	';'  shift 181
	.  error


state 151
	list_sentencias_ejecutables : sentencia_ejecutable . ';'  (105)

	';'  shift 182
	.  error


state 152
	bloque_sentencias_ejecutables : BEGIN list_sentencias_ejecutables . END  (92)
	list_sentencias_ejecutables : list_sentencias_ejecutables . sentencia_ejecutable ';'  (104)

	ID  shift 122
	IF  shift 5
	END  shift 183
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 184
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23


state 153
	sentencia_control : FOR '(' encabezado_for ')' error .  (21)

	.  reduce 21


state 154
	sentencia_control : FOR '(' encabezado_for ')' bloque_sentencias_ejecutables .  (20)

	.  reduce 20


state 155
	bloque_sentencias_ejecutables : sentencia_ejecutable error .  (91)

	.  reduce 91


state 156
	bloque_sentencias_ejecutables : sentencia_ejecutable ';' .  (90)

	.  reduce 90


state 157
	declaracion_funcion : tipo FUN ID '(' ')' . BEGIN cuerpo_funcion END  (51)

	BEGIN  shift 185
	.  error


state 158
	declaracion_funcion : tipo FUN ID '(' parametro . ')' BEGIN $$1 cuerpo_funcion $$2 END  (48)
	list_parametro : parametro .  (55)

	')'  shift 186
	','  reduce 55


state 159
	declaracion_funcion : tipo FUN ID '(' bloque_list_parametro . ')' BEGIN cuerpo_funcion END  (49)

	')'  shift 187
	.  error


state 160
	bloque_list_parametro : list_parametro . ',' parametro  (54)
	list_parametro : list_parametro . ',' parametro  (56)

	','  shift 188
	.  error


state 161
	parametro : tipo ID .  (52)

	.  reduce 52


state 162
	declaracion_funcion : tipo FUN '(' parametro ')' . BEGIN cuerpo_funcion END  (50)

	BEGIN  shift 189
	.  error


state 163
	invocacion_funcion : ID '(' tipo_base '(' expresion ')' . ')'  (87)

	')'  shift 190
	.  error


state 164
	asignacion : ID '[' CONSTANTE ']' ASIGNACION expresion .  (38)
	expresion : expresion . '+' termino  (63)
	expresion : expresion . '-' termino  (64)
	expresion : expresion . '+' error  (66)
	expresion : expresion . '-' error  (67)

	'+'  shift 76
	'-'  shift 77
	$end  reduce 38
	error  reduce 38
	ID  reduce 38
	IF  reduce 38
	END  reduce 38
	OUTF  reduce 38
	TYPEDEF  reduce 38
	RET  reduce 38
	ULONGINT  reduce 38
	SINGLE  reduce 38
	FOR  reduce 38
	';'  reduce 38


state 165
	bloque_sentencias_ejecutables : BEGIN list_sentencias_ejecutables . END  (92)
	cuerpo_if : BEGIN list_sentencias_ejecutables . sentencia_return ';' END  (102)
	list_sentencias_ejecutables : list_sentencias_ejecutables . sentencia_ejecutable ';'  (104)

	ID  shift 122
	IF  shift 5
	END  shift 183
	OUTF  shift 7
	RET  shift 138
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 184
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	sentencia_return  goto 191


state 166
	sentencia_return : RET '(' . expresion ')'  (62)

	ID  shift 30
	CONSTANTE  shift 31
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	expresion  goto 192
	termino  goto 37
	factor  goto 38


state 167
	cuerpo_if : sentencia_return ';' .  (103)

	.  reduce 103


state 168
	fin_if : error .  (89)

	.  reduce 89


state 169
	bloque_if : IF '(' condicion THEN cuerpo_if ELSE . cuerpo_if fin_if  (100)

	ID  shift 122
	IF  shift 5
	BEGIN  shift 137
	OUTF  shift 7
	RET  shift 138
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 125
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 139
	sentencia_return  goto 140
	cuerpo_if  goto 193


state 170
	fin_if : END_IF .  (88)

	.  reduce 88


state 171
	bloque_if : IF '(' condicion THEN cuerpo_if fin_if .  (98)

	.  reduce 98


state 172
	bloque_if : IF '(' condicion ')' THEN error . fin_if  (96)

	error  shift 168
	END_IF  shift 170
	.  error

	fin_if  goto 194


state 173
	bloque_if : IF '(' condicion ')' THEN cuerpo_if . ELSE cuerpo_if fin_if  (93)
	bloque_if : IF '(' condicion ')' THEN cuerpo_if . fin_if  (94)
	bloque_if : IF '(' condicion ')' THEN cuerpo_if . ELSE error fin_if  (95)

	error  shift 168
	ELSE  shift 195
	END_IF  shift 170
	.  error

	fin_if  goto 196


state 174
	condicion : '(' bloque_list_expresiones ')' comparacion '(' . bloque_list_expresiones ')'  (113)

	error  shift 57
	ID  shift 30
	CONSTANTE  shift 31
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	expresion  goto 102
	termino  goto 37
	factor  goto 38
	bloque_list_expresiones  goto 197
	list_expresiones  goto 62


state 175
	factor : '-' ID '[' CONSTANTE ']' .  (79)

	.  reduce 79


state 176
	bloque_if : IF condicion ')' THEN cuerpo_if ELSE . cuerpo_if fin_if  (99)

	ID  shift 122
	IF  shift 5
	BEGIN  shift 137
	OUTF  shift 7
	RET  shift 138
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 125
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 139
	sentencia_return  goto 140
	cuerpo_if  goto 198


state 177
	bloque_if : IF condicion ')' THEN cuerpo_if fin_if .  (97)

	.  reduce 97


state 178
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' error .  (81)

	.  reduce 81


state 179
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' ID .  (80)

	.  reduce 80


state 180
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion . ';' up_down CONSTANTE  (26)
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion . ';' CONSTANTE  (27)
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion . up_down CONSTANTE  (29)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion . ';' up_down CONSTANTE ';' '(' condicion ')'  (30)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion . ';' CONSTANTE ';' '(' condicion ')'  (31)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion . up_down CONSTANTE ';' '(' condicion ')'  (33)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion . ';' up_down CONSTANTE '(' condicion ')'  (34)

	UP  shift 199
	DOWN  shift 200
	';'  shift 201
	.  error

	up_down  goto 202


state 181
	encabezado_for1 : ID ASIGNACION CONSTANTE condicion ';' . up_down CONSTANTE  (28)
	encabezado_for2 : ID ASIGNACION CONSTANTE condicion ';' . up_down CONSTANTE ';' '(' condicion ')'  (32)

	UP  shift 199
	DOWN  shift 200
	.  error

	up_down  goto 203


state 182
	list_sentencias_ejecutables : sentencia_ejecutable ';' .  (105)

	.  reduce 105


state 183
	bloque_sentencias_ejecutables : BEGIN list_sentencias_ejecutables END .  (92)

	.  reduce 92


state 184
	list_sentencias_ejecutables : list_sentencias_ejecutables sentencia_ejecutable . ';'  (104)

	';'  shift 204
	.  error


state 185
	declaracion_funcion : tipo FUN ID '(' ')' BEGIN . cuerpo_funcion END  (51)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 138
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	.  error

	sentencia  goto 205
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	cuerpo_funcion  goto 206
	list_sentencias_funcion  goto 207
	sentencia_return  goto 208


state 186
	declaracion_funcion : tipo FUN ID '(' parametro ')' . BEGIN $$1 cuerpo_funcion $$2 END  (48)

	BEGIN  shift 209
	.  error


state 187
	declaracion_funcion : tipo FUN ID '(' bloque_list_parametro ')' . BEGIN cuerpo_funcion END  (49)

	BEGIN  shift 210
	.  error


state 188
	bloque_list_parametro : list_parametro ',' . parametro  (54)
	list_parametro : list_parametro ',' . parametro  (56)

	ID  shift 129
	ULONGINT  shift 9
	SINGLE  shift 10
	.  error

	tipo  goto 130
	tipo_base  goto 24
	parametro  goto 211


state 189
	declaracion_funcion : tipo FUN '(' parametro ')' BEGIN . cuerpo_funcion END  (50)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 138
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	.  error

	sentencia  goto 205
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	cuerpo_funcion  goto 212
	list_sentencias_funcion  goto 207
	sentencia_return  goto 208


state 190
	invocacion_funcion : ID '(' tipo_base '(' expresion ')' ')' .  (87)

	.  reduce 87


state 191
	cuerpo_if : BEGIN list_sentencias_ejecutables sentencia_return . ';' END  (102)

	';'  shift 213
	.  error


state 192
	sentencia_return : RET '(' expresion . ')'  (62)
	expresion : expresion . '+' termino  (63)
	expresion : expresion . '-' termino  (64)
	expresion : expresion . '+' error  (66)
	expresion : expresion . '-' error  (67)

	')'  shift 214
	'+'  shift 76
	'-'  shift 77
	.  error


state 193
	bloque_if : IF '(' condicion THEN cuerpo_if ELSE cuerpo_if . fin_if  (100)

	error  shift 168
	END_IF  shift 170
	.  error

	fin_if  goto 215


state 194
	bloque_if : IF '(' condicion ')' THEN error fin_if .  (96)

	.  reduce 96


state 195
	bloque_if : IF '(' condicion ')' THEN cuerpo_if ELSE . cuerpo_if fin_if  (93)
	bloque_if : IF '(' condicion ')' THEN cuerpo_if ELSE . error fin_if  (95)

	error  shift 216
	ID  shift 122
	IF  shift 5
	BEGIN  shift 137
	OUTF  shift 7
	RET  shift 138
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 125
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 139
	sentencia_return  goto 140
	cuerpo_if  goto 217


state 196
	bloque_if : IF '(' condicion ')' THEN cuerpo_if fin_if .  (94)

	.  reduce 94


state 197
	condicion : '(' bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones . ')'  (113)

	')'  shift 218
	.  error


state 198
	bloque_if : IF condicion ')' THEN cuerpo_if ELSE cuerpo_if . fin_if  (99)

	error  shift 168
	END_IF  shift 170
	.  error

	fin_if  goto 219


state 199
	up_down : UP .  (35)

	.  reduce 35


state 200
	up_down : DOWN .  (36)

	.  reduce 36


state 201
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion ';' . up_down CONSTANTE  (26)
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion ';' . CONSTANTE  (27)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' . up_down CONSTANTE ';' '(' condicion ')'  (30)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' . CONSTANTE ';' '(' condicion ')'  (31)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' . up_down CONSTANTE '(' condicion ')'  (34)

	CONSTANTE  shift 220
	UP  shift 199
	DOWN  shift 200
	.  error

	up_down  goto 221


state 202
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion up_down . CONSTANTE  (29)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion up_down . CONSTANTE ';' '(' condicion ')'  (33)

	CONSTANTE  shift 222
	.  error


state 203
	encabezado_for1 : ID ASIGNACION CONSTANTE condicion ';' up_down . CONSTANTE  (28)
	encabezado_for2 : ID ASIGNACION CONSTANTE condicion ';' up_down . CONSTANTE ';' '(' condicion ')'  (32)

	CONSTANTE  shift 223
	.  error


state 204
	list_sentencias_ejecutables : list_sentencias_ejecutables sentencia_ejecutable ';' .  (104)

	.  reduce 104


state 205
	list_sentencias_funcion : sentencia .  (61)

	.  reduce 61


state 206
	declaracion_funcion : tipo FUN ID '(' ')' BEGIN cuerpo_funcion . END  (51)

	END  shift 224
	.  error


state 207
	cuerpo_funcion : list_sentencias_funcion . sentencia_return ';'  (57)
	cuerpo_funcion : list_sentencias_funcion .  (58)
	list_sentencias_funcion : list_sentencias_funcion . sentencia  (60)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 138
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	END  reduce 58

	sentencia  goto 225
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	sentencia_return  goto 226


state 208
	cuerpo_funcion : sentencia_return . ';'  (59)

	';'  shift 227
	.  error


state 209
	declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN . $$1 cuerpo_funcion $$2 END  (48)
	$$1 : .  (46)

	.  reduce 46

	$$1  goto 228


state 210
	declaracion_funcion : tipo FUN ID '(' bloque_list_parametro ')' BEGIN . cuerpo_funcion END  (49)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 138
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	.  error

	sentencia  goto 205
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	cuerpo_funcion  goto 229
	list_sentencias_funcion  goto 207
	sentencia_return  goto 208


state 211
	bloque_list_parametro : list_parametro ',' parametro .  (54)
	list_parametro : list_parametro ',' parametro .  (56)

	')'  reduce 54
	','  reduce 56


state 212
	declaracion_funcion : tipo FUN '(' parametro ')' BEGIN cuerpo_funcion . END  (50)

	END  shift 230
	.  error


state 213
	cuerpo_if : BEGIN list_sentencias_ejecutables sentencia_return ';' . END  (102)

	END  shift 231
	.  error


state 214
	sentencia_return : RET '(' expresion ')' .  (62)

	.  reduce 62


state 215
	bloque_if : IF '(' condicion THEN cuerpo_if ELSE cuerpo_if fin_if .  (100)

	.  reduce 100


state 216
	bloque_if : IF '(' condicion ')' THEN cuerpo_if ELSE error . fin_if  (95)

	error  shift 168
	END_IF  shift 170
	.  error

	fin_if  goto 232


state 217
	bloque_if : IF '(' condicion ')' THEN cuerpo_if ELSE cuerpo_if . fin_if  (93)

	error  shift 168
	END_IF  shift 170
	.  error

	fin_if  goto 233


state 218
	condicion : '(' bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones ')' .  (113)

	.  reduce 113


state 219
	bloque_if : IF condicion ')' THEN cuerpo_if ELSE cuerpo_if fin_if .  (99)

	.  reduce 99


state 220
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE .  (27)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE . ';' '(' condicion ')'  (31)

	';'  shift 234
	ID  reduce 27
	IF  reduce 27
	BEGIN  reduce 27
	OUTF  reduce 27
	FOR  reduce 27
	')'  reduce 27


state 221
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down . CONSTANTE  (26)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down . CONSTANTE ';' '(' condicion ')'  (30)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down . CONSTANTE '(' condicion ')'  (34)

	CONSTANTE  shift 235
	.  error


state 222
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE .  (29)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE . ';' '(' condicion ')'  (33)

	';'  shift 236
	ID  reduce 29
	IF  reduce 29
	BEGIN  reduce 29
	OUTF  reduce 29
	FOR  reduce 29
	')'  reduce 29


state 223
	encabezado_for1 : ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE .  (28)
	encabezado_for2 : ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE . ';' '(' condicion ')'  (32)

	';'  shift 237
	ID  reduce 28
	IF  reduce 28
	BEGIN  reduce 28
	OUTF  reduce 28
	FOR  reduce 28
	')'  reduce 28


state 224
	declaracion_funcion : tipo FUN ID '(' ')' BEGIN cuerpo_funcion END .  (51)

	.  reduce 51


state 225
	list_sentencias_funcion : list_sentencias_funcion sentencia .  (60)

	.  reduce 60


state 226
	cuerpo_funcion : list_sentencias_funcion sentencia_return . ';'  (57)

	';'  shift 238
	.  error


state 227
	cuerpo_funcion : sentencia_return ';' .  (59)

	.  reduce 59


state 228
	declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN $$1 . cuerpo_funcion $$2 END  (48)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 138
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	.  error

	sentencia  goto 205
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	cuerpo_funcion  goto 239
	list_sentencias_funcion  goto 207
	sentencia_return  goto 208


state 229
	declaracion_funcion : tipo FUN ID '(' bloque_list_parametro ')' BEGIN cuerpo_funcion . END  (49)

	END  shift 240
	.  error


state 230
	declaracion_funcion : tipo FUN '(' parametro ')' BEGIN cuerpo_funcion END .  (50)

	.  reduce 50


state 231
	cuerpo_if : BEGIN list_sentencias_ejecutables sentencia_return ';' END .  (102)

	.  reduce 102


state 232
	bloque_if : IF '(' condicion ')' THEN cuerpo_if ELSE error fin_if .  (95)

	.  reduce 95


state 233
	bloque_if : IF '(' condicion ')' THEN cuerpo_if ELSE cuerpo_if fin_if .  (93)

	.  reduce 93


state 234
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE ';' . '(' condicion ')'  (31)

	'('  shift 241
	.  error


state 235
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE .  (26)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE . ';' '(' condicion ')'  (30)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE . '(' condicion ')'  (34)

	';'  shift 242
	'('  shift 243
	ID  reduce 26
	IF  reduce 26
	BEGIN  reduce 26
	OUTF  reduce 26
	FOR  reduce 26
	')'  reduce 26


state 236
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE ';' . '(' condicion ')'  (33)

	'('  shift 244
	.  error


state 237
	encabezado_for2 : ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE ';' . '(' condicion ')'  (32)

	'('  shift 245
	.  error


state 238
	cuerpo_funcion : list_sentencias_funcion sentencia_return ';' .  (57)

	.  reduce 57


state 239
	declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN $$1 cuerpo_funcion . $$2 END  (48)
	$$2 : .  (47)

	.  reduce 47

	$$2  goto 246


state 240
	declaracion_funcion : tipo FUN ID '(' bloque_list_parametro ')' BEGIN cuerpo_funcion END .  (49)

	.  reduce 49


state 241
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE ';' '(' . condicion ')'  (31)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'('  shift 66
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	condicion  goto 247
	expresion  goto 36
	termino  goto 37
	factor  goto 38


state 242
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE ';' . '(' condicion ')'  (30)

	'('  shift 248
	.  error


state 243
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE '(' . condicion ')'  (34)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'('  shift 66
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	condicion  goto 249
	expresion  goto 36
	termino  goto 37
	factor  goto 38


state 244
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE ';' '(' . condicion ')'  (33)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'('  shift 66
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	condicion  goto 250
	expresion  goto 36
	termino  goto 37
	factor  goto 38


state 245
	encabezado_for2 : ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE ';' '(' . condicion ')'  (32)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'('  shift 66
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	condicion  goto 251
	expresion  goto 36
	termino  goto 37
	factor  goto 38


state 246
	declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN $$1 cuerpo_funcion $$2 . END  (48)

	END  shift 252
	.  error


state 247
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE ';' '(' condicion . ')'  (31)

	')'  shift 253
	.  error


state 248
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE ';' '(' . condicion ')'  (30)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'('  shift 66
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	condicion  goto 254
	expresion  goto 36
	termino  goto 37
	factor  goto 38


state 249
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE '(' condicion . ')'  (34)

	')'  shift 255
	.  error


state 250
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE ';' '(' condicion . ')'  (33)

	')'  shift 256
	.  error


state 251
	encabezado_for2 : ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE ';' '(' condicion . ')'  (32)

	')'  shift 257
	.  error


state 252
	declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN $$1 cuerpo_funcion $$2 END .  (48)

	.  reduce 48


state 253
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE ';' '(' condicion ')' .  (31)

	.  reduce 31


state 254
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE ';' '(' condicion . ')'  (30)

	')'  shift 258
	.  error


state 255
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE '(' condicion ')' .  (34)

	.  reduce 34


state 256
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE ';' '(' condicion ')' .  (33)

	.  reduce 33


state 257
	encabezado_for2 : ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE ';' '(' condicion ')' .  (32)

	.  reduce 32


state 258
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE ';' '(' condicion ')' .  (30)

	.  reduce 30


39 terminals, 39 nonterminals
122 grammar rules, 259 states
