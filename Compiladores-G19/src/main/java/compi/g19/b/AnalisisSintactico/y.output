   0  $accept : programa $end

   1  programa : ID BEGIN list_sentencias END
   2           | BEGIN list_sentencias END
   3           | ID BEGIN list_sentencias
   4           | ID list_sentencias END
   5           | ID BEGIN END

   6  list_sentencias : list_sentencias sentencia ';'
   7                  | sentencia ';'
   8                  | sentencia error

   9  sentencia : sentencia_declarativa
  10            | sentencia_ejecutable

  11  sentencia_declarativa : tipo list_variables
  12                        | declaracion_funcion
  13                        | declaracion_tipo

  14  sentencia_ejecutable : asignacion
  15                       | invocacion_funcion
  16                       | bloque_if
  17                       | salida_mensaje
  18                       | sentencia_control

  19  sentencia_control : FOR '(' encabezado_for ')' bloque_sentencias_ejecutables
  20                    | FOR '(' encabezado_for ')' error
  21                    | FOR error encabezado_for ')' bloque_sentencias_ejecutables
  22                    | FOR '(' encabezado_for bloque_sentencias_ejecutables

  23  encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE
  24                 | ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE ';' '(' condicion ')'
  25                 | ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE ';' '(' condicion ')'
  26                 | ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE ';' '(' condicion ')'
  27                 | ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE ';' '(' condicion ')'
  28                 | ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE '(' condicion ')'

  29  up_down : UP
  30          | DOWN

  31  asignacion : ID ASIGNACION expresion
  32             | ID '[' CONSTANTE ']' ASIGNACION expresion

  33  tipo : tipo_base
  34       | ID

  35  tipo_base : ULONGINT
  36            | SINGLE

  37  list_variables : list_variables ',' ID
  38                 | list_variables ID
  39                 | ID

  40  $$1 :

  41  $$2 :

  42  declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN $$1 cuerpo_funcion $$2 END
  43                      | tipo FUN ID '(' bloque_list_parametro ')' BEGIN cuerpo_funcion END
  44                      | tipo FUN '(' parametro ')' BEGIN cuerpo_funcion END
  45                      | tipo FUN ID '(' ')' BEGIN cuerpo_funcion END

  46  parametro : tipo ID
  47            | ID

  48  bloque_list_parametro : list_parametro ',' parametro

  49  list_parametro : parametro
  50                 | list_parametro ',' parametro

  51  cuerpo_funcion : list_sentencias sentencia_return ';'
  52                 | list_sentencias
  53                 | sentencia_return ';'

  54  sentencia_return : RET '(' expresion ')'

  55  expresion : expresion '+' termino
  56            | expresion '-' termino
  57            | termino
  58            | expresion '+' error
  59            | expresion '-' error

  60  termino : termino '*' factor
  61          | termino '/' factor
  62          | factor
  63          | termino '*' error
  64          | termino '/' error

  65  factor : ID
  66         | CONSTANTE
  67         | invocacion_funcion
  68         | ID '[' CONSTANTE ']'
  69         | '-' ID
  70         | '-' CONSTANTE
  71         | '-' ID '[' CONSTANTE ']'

  72  declaracion_tipo :
  73                   | TYPEDEF TRIPLE '<' tipo_base '>' ID
  74                   | TYPEDEF TRIPLE '<' tipo_base '>' error
  75                   | TYPEDEF TRIPLE error
  76                   | TYPEDEF TRIPLE '<' tipo_base error

  77  invocacion_funcion : ID '(' expresion ')'
  78                     | ID '(' bloque_list_expresiones ')'
  79                     | ID '(' ')'
  80                     | ID '(' tipo_base '(' expresion ')' ')'

  81  fin_if : END_IF
  82         | error

  83  bloque_sentencias_ejecutables : sentencia_ejecutable ';'
  84                                | sentencia_ejecutable error
  85                                | BEGIN list_sentencias_ejecutables END

  86  bloque_if : IF '(' condicion ')' THEN cuerpo_if ELSE cuerpo_if fin_if
  87            | IF '(' condicion ')' THEN cuerpo_if fin_if
  88            | IF '(' condicion ')' THEN cuerpo_if ELSE error fin_if
  89            | IF '(' condicion ')' THEN error fin_if
  90            | IF condicion ')' THEN cuerpo_if fin_if
  91            | IF '(' condicion THEN cuerpo_if fin_if
  92            | IF condicion ')' THEN cuerpo_if ELSE cuerpo_if fin_if
  93            | IF '(' condicion THEN cuerpo_if ELSE cuerpo_if fin_if

  94  cuerpo_if : bloque_sentencias_ejecutables
  95            | BEGIN list_sentencias_ejecutables sentencia_return ';' END
  96            | sentencia_return ';'

  97  list_sentencias_ejecutables : list_sentencias_ejecutables sentencia_ejecutable ';'
  98                              | sentencia_ejecutable ';'
  99                              | sentencia_ejecutable error
 100                              | list_sentencias_ejecutables sentencia_ejecutable error

 101  comparacion : MAYORIGUAL
 102              | MENORIGUAL
 103              | DISTINTO
 104              | '='
 105              | '>'
 106              | '<'
 107              | error

 108  condicion : expresion comparacion expresion
 109            | '(' bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones ')'

 110  bloque_list_expresiones : list_expresiones ',' expresion

 111  list_expresiones : list_expresiones ',' expresion
 112                   | expresion

 113  salida_mensaje : OUTF '(' CADENA ')'
 114                 | OUTF '(' expresion ')'
 115                 | OUTF '(' ')'

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	BEGIN  shift 2
	.  error

	programa  goto 3


state 1
	programa : ID . BEGIN list_sentencias END  (1)
	programa : ID . BEGIN list_sentencias  (3)
	programa : ID . list_sentencias END  (4)
	programa : ID . BEGIN END  (5)
	declaracion_tipo : .  (72)

	ID  shift 4
	IF  shift 5
	BEGIN  shift 6
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	error  reduce 72
	';'  reduce 72

	list_sentencias  goto 12
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24


state 2
	programa : BEGIN . list_sentencias END  (2)
	declaracion_tipo : .  (72)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	error  reduce 72
	';'  reduce 72

	list_sentencias  goto 25
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24


state 3
	$accept : programa . $end  (0)

	$end  accept


state 4
	asignacion : ID . ASIGNACION expresion  (31)
	asignacion : ID . '[' CONSTANTE ']' ASIGNACION expresion  (32)
	tipo : ID .  (34)
	invocacion_funcion : ID . '(' expresion ')'  (77)
	invocacion_funcion : ID . '(' bloque_list_expresiones ')'  (78)
	invocacion_funcion : ID . '(' ')'  (79)
	invocacion_funcion : ID . '(' tipo_base '(' expresion ')' ')'  (80)

	ASIGNACION  shift 26
	'('  shift 27
	'['  shift 28
	ID  reduce 34
	FUN  reduce 34


state 5
	bloque_if : IF . '(' condicion ')' THEN cuerpo_if ELSE cuerpo_if fin_if  (86)
	bloque_if : IF . '(' condicion ')' THEN cuerpo_if fin_if  (87)
	bloque_if : IF . '(' condicion ')' THEN cuerpo_if ELSE error fin_if  (88)
	bloque_if : IF . '(' condicion ')' THEN error fin_if  (89)
	bloque_if : IF . condicion ')' THEN cuerpo_if fin_if  (90)
	bloque_if : IF . '(' condicion THEN cuerpo_if fin_if  (91)
	bloque_if : IF . condicion ')' THEN cuerpo_if ELSE cuerpo_if fin_if  (92)
	bloque_if : IF . '(' condicion THEN cuerpo_if ELSE cuerpo_if fin_if  (93)

	ID  shift 29
	CONSTANTE  shift 30
	'('  shift 31
	'-'  shift 32
	.  error

	invocacion_funcion  goto 33
	condicion  goto 34
	expresion  goto 35
	termino  goto 36
	factor  goto 37


state 6
	programa : ID BEGIN . list_sentencias END  (1)
	programa : ID BEGIN . list_sentencias  (3)
	programa : ID BEGIN . END  (5)
	declaracion_tipo : .  (72)

	ID  shift 4
	IF  shift 5
	END  shift 38
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	error  reduce 72
	';'  reduce 72

	list_sentencias  goto 39
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24


state 7
	salida_mensaje : OUTF . '(' CADENA ')'  (113)
	salida_mensaje : OUTF . '(' expresion ')'  (114)
	salida_mensaje : OUTF . '(' ')'  (115)

	'('  shift 40
	.  error


state 8
	declaracion_tipo : TYPEDEF . TRIPLE '<' tipo_base '>' ID  (73)
	declaracion_tipo : TYPEDEF . TRIPLE '<' tipo_base '>' error  (74)
	declaracion_tipo : TYPEDEF . TRIPLE error  (75)
	declaracion_tipo : TYPEDEF . TRIPLE '<' tipo_base error  (76)

	TRIPLE  shift 41
	.  error


state 9
	tipo_base : ULONGINT .  (35)

	.  reduce 35


state 10
	tipo_base : SINGLE .  (36)

	.  reduce 36


state 11
	sentencia_control : FOR . '(' encabezado_for ')' bloque_sentencias_ejecutables  (19)
	sentencia_control : FOR . '(' encabezado_for ')' error  (20)
	sentencia_control : FOR . error encabezado_for ')' bloque_sentencias_ejecutables  (21)
	sentencia_control : FOR . '(' encabezado_for bloque_sentencias_ejecutables  (22)

	error  shift 42
	'('  shift 43
	.  error


state 12
	programa : ID list_sentencias . END  (4)
	list_sentencias : list_sentencias . sentencia ';'  (6)
	declaracion_tipo : .  (72)

	ID  shift 4
	IF  shift 5
	END  shift 44
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	';'  reduce 72

	sentencia  goto 45
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24


state 13
	list_sentencias : sentencia . ';'  (7)
	list_sentencias : sentencia . error  (8)

	error  shift 46
	';'  shift 47
	.  error


state 14
	sentencia : sentencia_declarativa .  (9)

	.  reduce 9


state 15
	sentencia : sentencia_ejecutable .  (10)

	.  reduce 10


state 16
	sentencia_declarativa : tipo . list_variables  (11)
	declaracion_funcion : tipo . FUN ID '(' parametro ')' BEGIN $$1 cuerpo_funcion $$2 END  (42)
	declaracion_funcion : tipo . FUN ID '(' bloque_list_parametro ')' BEGIN cuerpo_funcion END  (43)
	declaracion_funcion : tipo . FUN '(' parametro ')' BEGIN cuerpo_funcion END  (44)
	declaracion_funcion : tipo . FUN ID '(' ')' BEGIN cuerpo_funcion END  (45)

	ID  shift 48
	FUN  shift 49
	.  error

	list_variables  goto 50


state 17
	sentencia_declarativa : declaracion_funcion .  (12)

	.  reduce 12


state 18
	sentencia_declarativa : declaracion_tipo .  (13)

	.  reduce 13


state 19
	sentencia_ejecutable : asignacion .  (14)

	.  reduce 14


state 20
	sentencia_ejecutable : invocacion_funcion .  (15)

	.  reduce 15


state 21
	sentencia_ejecutable : bloque_if .  (16)

	.  reduce 16


state 22
	sentencia_ejecutable : salida_mensaje .  (17)

	.  reduce 17


state 23
	sentencia_ejecutable : sentencia_control .  (18)

	.  reduce 18


state 24
	tipo : tipo_base .  (33)

	.  reduce 33


state 25
	programa : BEGIN list_sentencias . END  (2)
	list_sentencias : list_sentencias . sentencia ';'  (6)
	declaracion_tipo : .  (72)

	ID  shift 4
	IF  shift 5
	END  shift 51
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	';'  reduce 72

	sentencia  goto 45
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24


state 26
	asignacion : ID ASIGNACION . expresion  (31)

	ID  shift 29
	CONSTANTE  shift 30
	'-'  shift 32
	.  error

	invocacion_funcion  goto 33
	expresion  goto 52
	termino  goto 36
	factor  goto 37


state 27
	invocacion_funcion : ID '(' . expresion ')'  (77)
	invocacion_funcion : ID '(' . bloque_list_expresiones ')'  (78)
	invocacion_funcion : ID '(' . ')'  (79)
	invocacion_funcion : ID '(' . tipo_base '(' expresion ')' ')'  (80)

	ID  shift 29
	CONSTANTE  shift 30
	ULONGINT  shift 9
	SINGLE  shift 10
	')'  shift 53
	'-'  shift 32
	.  error

	invocacion_funcion  goto 33
	expresion  goto 54
	tipo_base  goto 55
	termino  goto 36
	factor  goto 37
	bloque_list_expresiones  goto 56
	list_expresiones  goto 57


state 28
	asignacion : ID '[' . CONSTANTE ']' ASIGNACION expresion  (32)

	CONSTANTE  shift 58
	.  error


state 29
	factor : ID .  (65)
	factor : ID . '[' CONSTANTE ']'  (68)
	invocacion_funcion : ID . '(' expresion ')'  (77)
	invocacion_funcion : ID . '(' bloque_list_expresiones ')'  (78)
	invocacion_funcion : ID . '(' ')'  (79)
	invocacion_funcion : ID . '(' tipo_base '(' expresion ')' ')'  (80)

	'('  shift 27
	'['  shift 59
	error  reduce 65
	MAYORIGUAL  reduce 65
	MENORIGUAL  reduce 65
	DISTINTO  reduce 65
	THEN  reduce 65
	UP  reduce 65
	DOWN  reduce 65
	';'  reduce 65
	')'  reduce 65
	','  reduce 65
	'+'  reduce 65
	'-'  reduce 65
	'*'  reduce 65
	'/'  reduce 65
	'<'  reduce 65
	'>'  reduce 65
	'='  reduce 65


state 30
	factor : CONSTANTE .  (66)

	.  reduce 66


state 31
	bloque_if : IF '(' . condicion ')' THEN cuerpo_if ELSE cuerpo_if fin_if  (86)
	bloque_if : IF '(' . condicion ')' THEN cuerpo_if fin_if  (87)
	bloque_if : IF '(' . condicion ')' THEN cuerpo_if ELSE error fin_if  (88)
	bloque_if : IF '(' . condicion ')' THEN error fin_if  (89)
	bloque_if : IF '(' . condicion THEN cuerpo_if fin_if  (91)
	bloque_if : IF '(' . condicion THEN cuerpo_if ELSE cuerpo_if fin_if  (93)
	condicion : '(' . bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones ')'  (109)

	ID  shift 29
	CONSTANTE  shift 30
	'('  shift 60
	'-'  shift 32
	.  error

	invocacion_funcion  goto 33
	condicion  goto 61
	expresion  goto 62
	termino  goto 36
	factor  goto 37
	bloque_list_expresiones  goto 63
	list_expresiones  goto 57


state 32
	factor : '-' . ID  (69)
	factor : '-' . CONSTANTE  (70)
	factor : '-' . ID '[' CONSTANTE ']'  (71)

	ID  shift 64
	CONSTANTE  shift 65
	.  error


state 33
	factor : invocacion_funcion .  (67)

	.  reduce 67


state 34
	bloque_if : IF condicion . ')' THEN cuerpo_if fin_if  (90)
	bloque_if : IF condicion . ')' THEN cuerpo_if ELSE cuerpo_if fin_if  (92)

	')'  shift 66
	.  error


state 35
	expresion : expresion . '+' termino  (55)
	expresion : expresion . '-' termino  (56)
	expresion : expresion . '+' error  (58)
	expresion : expresion . '-' error  (59)
	condicion : expresion . comparacion expresion  (108)

	error  shift 67
	MAYORIGUAL  shift 68
	MENORIGUAL  shift 69
	DISTINTO  shift 70
	'+'  shift 71
	'-'  shift 72
	'<'  shift 73
	'>'  shift 74
	'='  shift 75
	.  error

	comparacion  goto 76


state 36
	expresion : termino .  (57)
	termino : termino . '*' factor  (60)
	termino : termino . '/' factor  (61)
	termino : termino . '*' error  (63)
	termino : termino . '/' error  (64)

	'*'  shift 77
	'/'  shift 78
	error  reduce 57
	MAYORIGUAL  reduce 57
	MENORIGUAL  reduce 57
	DISTINTO  reduce 57
	THEN  reduce 57
	UP  reduce 57
	DOWN  reduce 57
	';'  reduce 57
	')'  reduce 57
	','  reduce 57
	'+'  reduce 57
	'-'  reduce 57
	'<'  reduce 57
	'>'  reduce 57
	'='  reduce 57


state 37
	termino : factor .  (62)

	.  reduce 62


state 38
	programa : ID BEGIN END .  (5)

	.  reduce 5


state 39
	programa : ID BEGIN list_sentencias . END  (1)
	programa : ID BEGIN list_sentencias .  (3)
	list_sentencias : list_sentencias . sentencia ';'  (6)
	declaracion_tipo : .  (72)

	ID  shift 4
	IF  shift 5
	END  shift 79
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	$end  reduce 3
	';'  reduce 72

	sentencia  goto 45
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24


state 40
	salida_mensaje : OUTF '(' . CADENA ')'  (113)
	salida_mensaje : OUTF '(' . expresion ')'  (114)
	salida_mensaje : OUTF '(' . ')'  (115)

	ID  shift 29
	CONSTANTE  shift 30
	CADENA  shift 80
	')'  shift 81
	'-'  shift 32
	.  error

	invocacion_funcion  goto 33
	expresion  goto 82
	termino  goto 36
	factor  goto 37


state 41
	declaracion_tipo : TYPEDEF TRIPLE . '<' tipo_base '>' ID  (73)
	declaracion_tipo : TYPEDEF TRIPLE . '<' tipo_base '>' error  (74)
	declaracion_tipo : TYPEDEF TRIPLE . error  (75)
	declaracion_tipo : TYPEDEF TRIPLE . '<' tipo_base error  (76)

	error  shift 83
	'<'  shift 84
	.  error


state 42
	sentencia_control : FOR error . encabezado_for ')' bloque_sentencias_ejecutables  (21)

	ID  shift 85
	.  error

	encabezado_for  goto 86


state 43
	sentencia_control : FOR '(' . encabezado_for ')' bloque_sentencias_ejecutables  (19)
	sentencia_control : FOR '(' . encabezado_for ')' error  (20)
	sentencia_control : FOR '(' . encabezado_for bloque_sentencias_ejecutables  (22)

	ID  shift 85
	.  error

	encabezado_for  goto 87


state 44
	programa : ID list_sentencias END .  (4)

	.  reduce 4


state 45
	list_sentencias : list_sentencias sentencia . ';'  (6)

	';'  shift 88
	.  error


state 46
	list_sentencias : sentencia error .  (8)

	.  reduce 8


state 47
	list_sentencias : sentencia ';' .  (7)

	.  reduce 7


state 48
	list_variables : ID .  (39)

	.  reduce 39


state 49
	declaracion_funcion : tipo FUN . ID '(' parametro ')' BEGIN $$1 cuerpo_funcion $$2 END  (42)
	declaracion_funcion : tipo FUN . ID '(' bloque_list_parametro ')' BEGIN cuerpo_funcion END  (43)
	declaracion_funcion : tipo FUN . '(' parametro ')' BEGIN cuerpo_funcion END  (44)
	declaracion_funcion : tipo FUN . ID '(' ')' BEGIN cuerpo_funcion END  (45)

	ID  shift 89
	'('  shift 90
	.  error


state 50
	sentencia_declarativa : tipo list_variables .  (11)
	list_variables : list_variables . ',' ID  (37)
	list_variables : list_variables . ID  (38)

	ID  shift 91
	','  shift 92
	error  reduce 11
	';'  reduce 11


state 51
	programa : BEGIN list_sentencias END .  (2)

	.  reduce 2


state 52
	asignacion : ID ASIGNACION expresion .  (31)
	expresion : expresion . '+' termino  (55)
	expresion : expresion . '-' termino  (56)
	expresion : expresion . '+' error  (58)
	expresion : expresion . '-' error  (59)

	'+'  shift 71
	'-'  shift 72
	error  reduce 31
	';'  reduce 31


state 53
	invocacion_funcion : ID '(' ')' .  (79)

	.  reduce 79


state 54
	expresion : expresion . '+' termino  (55)
	expresion : expresion . '-' termino  (56)
	expresion : expresion . '+' error  (58)
	expresion : expresion . '-' error  (59)
	invocacion_funcion : ID '(' expresion . ')'  (77)
	list_expresiones : expresion .  (112)

	')'  shift 93
	'+'  shift 71
	'-'  shift 72
	','  reduce 112


state 55
	invocacion_funcion : ID '(' tipo_base . '(' expresion ')' ')'  (80)

	'('  shift 94
	.  error


state 56
	invocacion_funcion : ID '(' bloque_list_expresiones . ')'  (78)

	')'  shift 95
	.  error


state 57
	bloque_list_expresiones : list_expresiones . ',' expresion  (110)
	list_expresiones : list_expresiones . ',' expresion  (111)

	','  shift 96
	.  error


state 58
	asignacion : ID '[' CONSTANTE . ']' ASIGNACION expresion  (32)

	']'  shift 97
	.  error


state 59
	factor : ID '[' . CONSTANTE ']'  (68)

	CONSTANTE  shift 98
	.  error


state 60
	condicion : '(' . bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones ')'  (109)

	ID  shift 29
	CONSTANTE  shift 30
	'-'  shift 32
	.  error

	invocacion_funcion  goto 33
	expresion  goto 99
	termino  goto 36
	factor  goto 37
	bloque_list_expresiones  goto 63
	list_expresiones  goto 57


state 61
	bloque_if : IF '(' condicion . ')' THEN cuerpo_if ELSE cuerpo_if fin_if  (86)
	bloque_if : IF '(' condicion . ')' THEN cuerpo_if fin_if  (87)
	bloque_if : IF '(' condicion . ')' THEN cuerpo_if ELSE error fin_if  (88)
	bloque_if : IF '(' condicion . ')' THEN error fin_if  (89)
	bloque_if : IF '(' condicion . THEN cuerpo_if fin_if  (91)
	bloque_if : IF '(' condicion . THEN cuerpo_if ELSE cuerpo_if fin_if  (93)

	THEN  shift 100
	')'  shift 101
	.  error


state 62
	expresion : expresion . '+' termino  (55)
	expresion : expresion . '-' termino  (56)
	expresion : expresion . '+' error  (58)
	expresion : expresion . '-' error  (59)
	condicion : expresion . comparacion expresion  (108)
	list_expresiones : expresion .  (112)

	error  shift 67
	MAYORIGUAL  shift 68
	MENORIGUAL  shift 69
	DISTINTO  shift 70
	'+'  shift 71
	'-'  shift 72
	'<'  shift 73
	'>'  shift 74
	'='  shift 75
	','  reduce 112

	comparacion  goto 76


state 63
	condicion : '(' bloque_list_expresiones . ')' comparacion '(' bloque_list_expresiones ')'  (109)

	')'  shift 102
	.  error


state 64
	factor : '-' ID .  (69)
	factor : '-' ID . '[' CONSTANTE ']'  (71)

	'['  shift 103
	error  reduce 69
	MAYORIGUAL  reduce 69
	MENORIGUAL  reduce 69
	DISTINTO  reduce 69
	THEN  reduce 69
	UP  reduce 69
	DOWN  reduce 69
	';'  reduce 69
	')'  reduce 69
	','  reduce 69
	'+'  reduce 69
	'-'  reduce 69
	'*'  reduce 69
	'/'  reduce 69
	'<'  reduce 69
	'>'  reduce 69
	'='  reduce 69


state 65
	factor : '-' CONSTANTE .  (70)

	.  reduce 70


state 66
	bloque_if : IF condicion ')' . THEN cuerpo_if fin_if  (90)
	bloque_if : IF condicion ')' . THEN cuerpo_if ELSE cuerpo_if fin_if  (92)

	THEN  shift 104
	.  error


state 67
	comparacion : error .  (107)

	.  reduce 107


state 68
	comparacion : MAYORIGUAL .  (101)

	.  reduce 101


state 69
	comparacion : MENORIGUAL .  (102)

	.  reduce 102


state 70
	comparacion : DISTINTO .  (103)

	.  reduce 103


state 71
	expresion : expresion '+' . termino  (55)
	expresion : expresion '+' . error  (58)

	error  shift 105
	ID  shift 29
	CONSTANTE  shift 30
	'-'  shift 32
	.  error

	invocacion_funcion  goto 33
	termino  goto 106
	factor  goto 37


state 72
	expresion : expresion '-' . termino  (56)
	expresion : expresion '-' . error  (59)

	error  shift 107
	ID  shift 29
	CONSTANTE  shift 30
	'-'  shift 32
	.  error

	invocacion_funcion  goto 33
	termino  goto 108
	factor  goto 37


state 73
	comparacion : '<' .  (106)

	.  reduce 106


state 74
	comparacion : '>' .  (105)

	.  reduce 105


state 75
	comparacion : '=' .  (104)

	.  reduce 104


state 76
	condicion : expresion comparacion . expresion  (108)

	ID  shift 29
	CONSTANTE  shift 30
	'-'  shift 32
	.  error

	invocacion_funcion  goto 33
	expresion  goto 109
	termino  goto 36
	factor  goto 37


state 77
	termino : termino '*' . factor  (60)
	termino : termino '*' . error  (63)

	error  shift 110
	ID  shift 29
	CONSTANTE  shift 30
	'-'  shift 32
	.  error

	invocacion_funcion  goto 33
	factor  goto 111


state 78
	termino : termino '/' . factor  (61)
	termino : termino '/' . error  (64)

	error  shift 112
	ID  shift 29
	CONSTANTE  shift 30
	'-'  shift 32
	.  error

	invocacion_funcion  goto 33
	factor  goto 113


state 79
	programa : ID BEGIN list_sentencias END .  (1)

	.  reduce 1


state 80
	salida_mensaje : OUTF '(' CADENA . ')'  (113)

	')'  shift 114
	.  error


state 81
	salida_mensaje : OUTF '(' ')' .  (115)

	.  reduce 115


state 82
	expresion : expresion . '+' termino  (55)
	expresion : expresion . '-' termino  (56)
	expresion : expresion . '+' error  (58)
	expresion : expresion . '-' error  (59)
	salida_mensaje : OUTF '(' expresion . ')'  (114)

	')'  shift 115
	'+'  shift 71
	'-'  shift 72
	.  error


state 83
	declaracion_tipo : TYPEDEF TRIPLE error .  (75)

	.  reduce 75


state 84
	declaracion_tipo : TYPEDEF TRIPLE '<' . tipo_base '>' ID  (73)
	declaracion_tipo : TYPEDEF TRIPLE '<' . tipo_base '>' error  (74)
	declaracion_tipo : TYPEDEF TRIPLE '<' . tipo_base error  (76)

	ULONGINT  shift 9
	SINGLE  shift 10
	.  error

	tipo_base  goto 116


state 85
	encabezado_for : ID . ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE  (23)
	encabezado_for : ID . ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (24)
	encabezado_for : ID . ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE ';' '(' condicion ')'  (25)
	encabezado_for : ID . ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (26)
	encabezado_for : ID . ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE ';' '(' condicion ')'  (27)
	encabezado_for : ID . ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE '(' condicion ')'  (28)

	ASIGNACION  shift 117
	.  error


state 86
	sentencia_control : FOR error encabezado_for . ')' bloque_sentencias_ejecutables  (21)

	')'  shift 118
	.  error


state 87
	sentencia_control : FOR '(' encabezado_for . ')' bloque_sentencias_ejecutables  (19)
	sentencia_control : FOR '(' encabezado_for . ')' error  (20)
	sentencia_control : FOR '(' encabezado_for . bloque_sentencias_ejecutables  (22)

	ID  shift 119
	IF  shift 5
	BEGIN  shift 120
	OUTF  shift 7
	FOR  shift 11
	')'  shift 121
	.  error

	sentencia_ejecutable  goto 122
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 123


state 88
	list_sentencias : list_sentencias sentencia ';' .  (6)

	.  reduce 6


state 89
	declaracion_funcion : tipo FUN ID . '(' parametro ')' BEGIN $$1 cuerpo_funcion $$2 END  (42)
	declaracion_funcion : tipo FUN ID . '(' bloque_list_parametro ')' BEGIN cuerpo_funcion END  (43)
	declaracion_funcion : tipo FUN ID . '(' ')' BEGIN cuerpo_funcion END  (45)

	'('  shift 124
	.  error


state 90
	declaracion_funcion : tipo FUN '(' . parametro ')' BEGIN cuerpo_funcion END  (44)

	ID  shift 125
	ULONGINT  shift 9
	SINGLE  shift 10
	.  error

	tipo  goto 126
	tipo_base  goto 24
	parametro  goto 127


state 91
	list_variables : list_variables ID .  (38)

	.  reduce 38


state 92
	list_variables : list_variables ',' . ID  (37)

	ID  shift 128
	.  error


state 93
	invocacion_funcion : ID '(' expresion ')' .  (77)

	.  reduce 77


state 94
	invocacion_funcion : ID '(' tipo_base '(' . expresion ')' ')'  (80)

	ID  shift 29
	CONSTANTE  shift 30
	'-'  shift 32
	.  error

	invocacion_funcion  goto 33
	expresion  goto 129
	termino  goto 36
	factor  goto 37


state 95
	invocacion_funcion : ID '(' bloque_list_expresiones ')' .  (78)

	.  reduce 78


state 96
	bloque_list_expresiones : list_expresiones ',' . expresion  (110)
	list_expresiones : list_expresiones ',' . expresion  (111)

	ID  shift 29
	CONSTANTE  shift 30
	'-'  shift 32
	.  error

	invocacion_funcion  goto 33
	expresion  goto 130
	termino  goto 36
	factor  goto 37


state 97
	asignacion : ID '[' CONSTANTE ']' . ASIGNACION expresion  (32)

	ASIGNACION  shift 131
	.  error


state 98
	factor : ID '[' CONSTANTE . ']'  (68)

	']'  shift 132
	.  error


state 99
	expresion : expresion . '+' termino  (55)
	expresion : expresion . '-' termino  (56)
	expresion : expresion . '+' error  (58)
	expresion : expresion . '-' error  (59)
	list_expresiones : expresion .  (112)

	'+'  shift 71
	'-'  shift 72
	','  reduce 112


state 100
	bloque_if : IF '(' condicion THEN . cuerpo_if fin_if  (91)
	bloque_if : IF '(' condicion THEN . cuerpo_if ELSE cuerpo_if fin_if  (93)

	ID  shift 119
	IF  shift 5
	BEGIN  shift 133
	OUTF  shift 7
	RET  shift 134
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 122
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 135
	sentencia_return  goto 136
	cuerpo_if  goto 137


state 101
	bloque_if : IF '(' condicion ')' . THEN cuerpo_if ELSE cuerpo_if fin_if  (86)
	bloque_if : IF '(' condicion ')' . THEN cuerpo_if fin_if  (87)
	bloque_if : IF '(' condicion ')' . THEN cuerpo_if ELSE error fin_if  (88)
	bloque_if : IF '(' condicion ')' . THEN error fin_if  (89)

	THEN  shift 138
	.  error


state 102
	condicion : '(' bloque_list_expresiones ')' . comparacion '(' bloque_list_expresiones ')'  (109)

	error  shift 67
	MAYORIGUAL  shift 68
	MENORIGUAL  shift 69
	DISTINTO  shift 70
	'<'  shift 73
	'>'  shift 74
	'='  shift 75
	.  error

	comparacion  goto 139


state 103
	factor : '-' ID '[' . CONSTANTE ']'  (71)

	CONSTANTE  shift 140
	.  error


state 104
	bloque_if : IF condicion ')' THEN . cuerpo_if fin_if  (90)
	bloque_if : IF condicion ')' THEN . cuerpo_if ELSE cuerpo_if fin_if  (92)

	ID  shift 119
	IF  shift 5
	BEGIN  shift 133
	OUTF  shift 7
	RET  shift 134
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 122
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 135
	sentencia_return  goto 136
	cuerpo_if  goto 141


state 105
	expresion : expresion '+' error .  (58)

	.  reduce 58


state 106
	expresion : expresion '+' termino .  (55)
	termino : termino . '*' factor  (60)
	termino : termino . '/' factor  (61)
	termino : termino . '*' error  (63)
	termino : termino . '/' error  (64)

	'*'  shift 77
	'/'  shift 78
	error  reduce 55
	MAYORIGUAL  reduce 55
	MENORIGUAL  reduce 55
	DISTINTO  reduce 55
	THEN  reduce 55
	UP  reduce 55
	DOWN  reduce 55
	';'  reduce 55
	')'  reduce 55
	','  reduce 55
	'+'  reduce 55
	'-'  reduce 55
	'<'  reduce 55
	'>'  reduce 55
	'='  reduce 55


state 107
	expresion : expresion '-' error .  (59)

	.  reduce 59


state 108
	expresion : expresion '-' termino .  (56)
	termino : termino . '*' factor  (60)
	termino : termino . '/' factor  (61)
	termino : termino . '*' error  (63)
	termino : termino . '/' error  (64)

	'*'  shift 77
	'/'  shift 78
	error  reduce 56
	MAYORIGUAL  reduce 56
	MENORIGUAL  reduce 56
	DISTINTO  reduce 56
	THEN  reduce 56
	UP  reduce 56
	DOWN  reduce 56
	';'  reduce 56
	')'  reduce 56
	','  reduce 56
	'+'  reduce 56
	'-'  reduce 56
	'<'  reduce 56
	'>'  reduce 56
	'='  reduce 56


state 109
	expresion : expresion . '+' termino  (55)
	expresion : expresion . '-' termino  (56)
	expresion : expresion . '+' error  (58)
	expresion : expresion . '-' error  (59)
	condicion : expresion comparacion expresion .  (108)

	'+'  shift 71
	'-'  shift 72
	THEN  reduce 108
	UP  reduce 108
	DOWN  reduce 108
	';'  reduce 108
	')'  reduce 108


state 110
	termino : termino '*' error .  (63)

	.  reduce 63


state 111
	termino : termino '*' factor .  (60)

	.  reduce 60


state 112
	termino : termino '/' error .  (64)

	.  reduce 64


state 113
	termino : termino '/' factor .  (61)

	.  reduce 61


state 114
	salida_mensaje : OUTF '(' CADENA ')' .  (113)

	.  reduce 113


state 115
	salida_mensaje : OUTF '(' expresion ')' .  (114)

	.  reduce 114


state 116
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base . '>' ID  (73)
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base . '>' error  (74)
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base . error  (76)

	error  shift 142
	'>'  shift 143
	.  error


state 117
	encabezado_for : ID ASIGNACION . CONSTANTE ';' condicion ';' up_down CONSTANTE  (23)
	encabezado_for : ID ASIGNACION . CONSTANTE ';' condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (24)
	encabezado_for : ID ASIGNACION . CONSTANTE ';' condicion ';' CONSTANTE ';' '(' condicion ')'  (25)
	encabezado_for : ID ASIGNACION . CONSTANTE condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (26)
	encabezado_for : ID ASIGNACION . CONSTANTE ';' condicion up_down CONSTANTE ';' '(' condicion ')'  (27)
	encabezado_for : ID ASIGNACION . CONSTANTE ';' condicion ';' up_down CONSTANTE '(' condicion ')'  (28)

	CONSTANTE  shift 144
	.  error


state 118
	sentencia_control : FOR error encabezado_for ')' . bloque_sentencias_ejecutables  (21)

	ID  shift 119
	IF  shift 5
	BEGIN  shift 120
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 122
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 145


state 119
	asignacion : ID . ASIGNACION expresion  (31)
	asignacion : ID . '[' CONSTANTE ']' ASIGNACION expresion  (32)
	invocacion_funcion : ID . '(' expresion ')'  (77)
	invocacion_funcion : ID . '(' bloque_list_expresiones ')'  (78)
	invocacion_funcion : ID . '(' ')'  (79)
	invocacion_funcion : ID . '(' tipo_base '(' expresion ')' ')'  (80)

	ASIGNACION  shift 26
	'('  shift 27
	'['  shift 28
	.  error


state 120
	bloque_sentencias_ejecutables : BEGIN . list_sentencias_ejecutables END  (85)

	ID  shift 119
	IF  shift 5
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 146
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	list_sentencias_ejecutables  goto 147


state 121
	sentencia_control : FOR '(' encabezado_for ')' . bloque_sentencias_ejecutables  (19)
	sentencia_control : FOR '(' encabezado_for ')' . error  (20)

	error  shift 148
	ID  shift 119
	IF  shift 5
	BEGIN  shift 120
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 122
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 149


state 122
	bloque_sentencias_ejecutables : sentencia_ejecutable . ';'  (83)
	bloque_sentencias_ejecutables : sentencia_ejecutable . error  (84)

	error  shift 150
	';'  shift 151
	.  error


state 123
	sentencia_control : FOR '(' encabezado_for bloque_sentencias_ejecutables .  (22)

	.  reduce 22


state 124
	declaracion_funcion : tipo FUN ID '(' . parametro ')' BEGIN $$1 cuerpo_funcion $$2 END  (42)
	declaracion_funcion : tipo FUN ID '(' . bloque_list_parametro ')' BEGIN cuerpo_funcion END  (43)
	declaracion_funcion : tipo FUN ID '(' . ')' BEGIN cuerpo_funcion END  (45)

	ID  shift 125
	ULONGINT  shift 9
	SINGLE  shift 10
	')'  shift 152
	.  error

	tipo  goto 126
	tipo_base  goto 24
	parametro  goto 153
	bloque_list_parametro  goto 154
	list_parametro  goto 155


state 125
	tipo : ID .  (34)
	parametro : ID .  (47)

	ID  reduce 34
	')'  reduce 47
	','  reduce 47


state 126
	parametro : tipo . ID  (46)

	ID  shift 156
	.  error


state 127
	declaracion_funcion : tipo FUN '(' parametro . ')' BEGIN cuerpo_funcion END  (44)

	')'  shift 157
	.  error


state 128
	list_variables : list_variables ',' ID .  (37)

	.  reduce 37


state 129
	expresion : expresion . '+' termino  (55)
	expresion : expresion . '-' termino  (56)
	expresion : expresion . '+' error  (58)
	expresion : expresion . '-' error  (59)
	invocacion_funcion : ID '(' tipo_base '(' expresion . ')' ')'  (80)

	')'  shift 158
	'+'  shift 71
	'-'  shift 72
	.  error


state 130
	expresion : expresion . '+' termino  (55)
	expresion : expresion . '-' termino  (56)
	expresion : expresion . '+' error  (58)
	expresion : expresion . '-' error  (59)
	bloque_list_expresiones : list_expresiones ',' expresion .  (110)
	list_expresiones : list_expresiones ',' expresion .  (111)

	'+'  shift 71
	'-'  shift 72
	')'  reduce 110
	','  reduce 111


state 131
	asignacion : ID '[' CONSTANTE ']' ASIGNACION . expresion  (32)

	ID  shift 29
	CONSTANTE  shift 30
	'-'  shift 32
	.  error

	invocacion_funcion  goto 33
	expresion  goto 159
	termino  goto 36
	factor  goto 37


state 132
	factor : ID '[' CONSTANTE ']' .  (68)

	.  reduce 68


state 133
	bloque_sentencias_ejecutables : BEGIN . list_sentencias_ejecutables END  (85)
	cuerpo_if : BEGIN . list_sentencias_ejecutables sentencia_return ';' END  (95)

	ID  shift 119
	IF  shift 5
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 146
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	list_sentencias_ejecutables  goto 160


state 134
	sentencia_return : RET . '(' expresion ')'  (54)

	'('  shift 161
	.  error


state 135
	cuerpo_if : bloque_sentencias_ejecutables .  (94)

	.  reduce 94


state 136
	cuerpo_if : sentencia_return . ';'  (96)

	';'  shift 162
	.  error


state 137
	bloque_if : IF '(' condicion THEN cuerpo_if . fin_if  (91)
	bloque_if : IF '(' condicion THEN cuerpo_if . ELSE cuerpo_if fin_if  (93)

	error  shift 163
	ELSE  shift 164
	END_IF  shift 165
	.  error

	fin_if  goto 166


state 138
	bloque_if : IF '(' condicion ')' THEN . cuerpo_if ELSE cuerpo_if fin_if  (86)
	bloque_if : IF '(' condicion ')' THEN . cuerpo_if fin_if  (87)
	bloque_if : IF '(' condicion ')' THEN . cuerpo_if ELSE error fin_if  (88)
	bloque_if : IF '(' condicion ')' THEN . error fin_if  (89)

	error  shift 167
	ID  shift 119
	IF  shift 5
	BEGIN  shift 133
	OUTF  shift 7
	RET  shift 134
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 122
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 135
	sentencia_return  goto 136
	cuerpo_if  goto 168


state 139
	condicion : '(' bloque_list_expresiones ')' comparacion . '(' bloque_list_expresiones ')'  (109)

	'('  shift 169
	.  error


state 140
	factor : '-' ID '[' CONSTANTE . ']'  (71)

	']'  shift 170
	.  error


state 141
	bloque_if : IF condicion ')' THEN cuerpo_if . fin_if  (90)
	bloque_if : IF condicion ')' THEN cuerpo_if . ELSE cuerpo_if fin_if  (92)

	error  shift 163
	ELSE  shift 171
	END_IF  shift 165
	.  error

	fin_if  goto 172


state 142
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base error .  (76)

	.  reduce 76


state 143
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' . ID  (73)
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' . error  (74)

	error  shift 173
	ID  shift 174
	.  error


state 144
	encabezado_for : ID ASIGNACION CONSTANTE . ';' condicion ';' up_down CONSTANTE  (23)
	encabezado_for : ID ASIGNACION CONSTANTE . ';' condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (24)
	encabezado_for : ID ASIGNACION CONSTANTE . ';' condicion ';' CONSTANTE ';' '(' condicion ')'  (25)
	encabezado_for : ID ASIGNACION CONSTANTE . condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (26)
	encabezado_for : ID ASIGNACION CONSTANTE . ';' condicion up_down CONSTANTE ';' '(' condicion ')'  (27)
	encabezado_for : ID ASIGNACION CONSTANTE . ';' condicion ';' up_down CONSTANTE '(' condicion ')'  (28)

	ID  shift 29
	CONSTANTE  shift 30
	';'  shift 175
	'('  shift 60
	'-'  shift 32
	.  error

	invocacion_funcion  goto 33
	condicion  goto 176
	expresion  goto 35
	termino  goto 36
	factor  goto 37


state 145
	sentencia_control : FOR error encabezado_for ')' bloque_sentencias_ejecutables .  (21)

	.  reduce 21


state 146
	list_sentencias_ejecutables : sentencia_ejecutable . ';'  (98)
	list_sentencias_ejecutables : sentencia_ejecutable . error  (99)

	error  shift 177
	';'  shift 178
	.  error


state 147
	bloque_sentencias_ejecutables : BEGIN list_sentencias_ejecutables . END  (85)
	list_sentencias_ejecutables : list_sentencias_ejecutables . sentencia_ejecutable ';'  (97)
	list_sentencias_ejecutables : list_sentencias_ejecutables . sentencia_ejecutable error  (100)

	ID  shift 119
	IF  shift 5
	END  shift 179
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 180
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23


state 148
	sentencia_control : FOR '(' encabezado_for ')' error .  (20)

	.  reduce 20


state 149
	sentencia_control : FOR '(' encabezado_for ')' bloque_sentencias_ejecutables .  (19)

	.  reduce 19


state 150
	bloque_sentencias_ejecutables : sentencia_ejecutable error .  (84)

	.  reduce 84


state 151
	bloque_sentencias_ejecutables : sentencia_ejecutable ';' .  (83)

	.  reduce 83


state 152
	declaracion_funcion : tipo FUN ID '(' ')' . BEGIN cuerpo_funcion END  (45)

	BEGIN  shift 181
	.  error


state 153
	declaracion_funcion : tipo FUN ID '(' parametro . ')' BEGIN $$1 cuerpo_funcion $$2 END  (42)
	list_parametro : parametro .  (49)

	')'  shift 182
	','  reduce 49


state 154
	declaracion_funcion : tipo FUN ID '(' bloque_list_parametro . ')' BEGIN cuerpo_funcion END  (43)

	')'  shift 183
	.  error


state 155
	bloque_list_parametro : list_parametro . ',' parametro  (48)
	list_parametro : list_parametro . ',' parametro  (50)

	','  shift 184
	.  error


state 156
	parametro : tipo ID .  (46)

	.  reduce 46


state 157
	declaracion_funcion : tipo FUN '(' parametro ')' . BEGIN cuerpo_funcion END  (44)

	BEGIN  shift 185
	.  error


state 158
	invocacion_funcion : ID '(' tipo_base '(' expresion ')' . ')'  (80)

	')'  shift 186
	.  error


state 159
	asignacion : ID '[' CONSTANTE ']' ASIGNACION expresion .  (32)
	expresion : expresion . '+' termino  (55)
	expresion : expresion . '-' termino  (56)
	expresion : expresion . '+' error  (58)
	expresion : expresion . '-' error  (59)

	'+'  shift 71
	'-'  shift 72
	error  reduce 32
	';'  reduce 32


state 160
	bloque_sentencias_ejecutables : BEGIN list_sentencias_ejecutables . END  (85)
	cuerpo_if : BEGIN list_sentencias_ejecutables . sentencia_return ';' END  (95)
	list_sentencias_ejecutables : list_sentencias_ejecutables . sentencia_ejecutable ';'  (97)
	list_sentencias_ejecutables : list_sentencias_ejecutables . sentencia_ejecutable error  (100)

	ID  shift 119
	IF  shift 5
	END  shift 179
	OUTF  shift 7
	RET  shift 134
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 180
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	sentencia_return  goto 187


state 161
	sentencia_return : RET '(' . expresion ')'  (54)

	ID  shift 29
	CONSTANTE  shift 30
	'-'  shift 32
	.  error

	invocacion_funcion  goto 33
	expresion  goto 188
	termino  goto 36
	factor  goto 37


state 162
	cuerpo_if : sentencia_return ';' .  (96)

	.  reduce 96


state 163
	fin_if : error .  (82)

	.  reduce 82


state 164
	bloque_if : IF '(' condicion THEN cuerpo_if ELSE . cuerpo_if fin_if  (93)

	ID  shift 119
	IF  shift 5
	BEGIN  shift 133
	OUTF  shift 7
	RET  shift 134
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 122
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 135
	sentencia_return  goto 136
	cuerpo_if  goto 189


state 165
	fin_if : END_IF .  (81)

	.  reduce 81


state 166
	bloque_if : IF '(' condicion THEN cuerpo_if fin_if .  (91)

	.  reduce 91


state 167
	bloque_if : IF '(' condicion ')' THEN error . fin_if  (89)

	error  shift 163
	END_IF  shift 165
	.  error

	fin_if  goto 190


state 168
	bloque_if : IF '(' condicion ')' THEN cuerpo_if . ELSE cuerpo_if fin_if  (86)
	bloque_if : IF '(' condicion ')' THEN cuerpo_if . fin_if  (87)
	bloque_if : IF '(' condicion ')' THEN cuerpo_if . ELSE error fin_if  (88)

	error  shift 163
	ELSE  shift 191
	END_IF  shift 165
	.  error

	fin_if  goto 192


state 169
	condicion : '(' bloque_list_expresiones ')' comparacion '(' . bloque_list_expresiones ')'  (109)

	ID  shift 29
	CONSTANTE  shift 30
	'-'  shift 32
	.  error

	invocacion_funcion  goto 33
	expresion  goto 99
	termino  goto 36
	factor  goto 37
	bloque_list_expresiones  goto 193
	list_expresiones  goto 57


state 170
	factor : '-' ID '[' CONSTANTE ']' .  (71)

	.  reduce 71


state 171
	bloque_if : IF condicion ')' THEN cuerpo_if ELSE . cuerpo_if fin_if  (92)

	ID  shift 119
	IF  shift 5
	BEGIN  shift 133
	OUTF  shift 7
	RET  shift 134
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 122
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 135
	sentencia_return  goto 136
	cuerpo_if  goto 194


state 172
	bloque_if : IF condicion ')' THEN cuerpo_if fin_if .  (90)

	.  reduce 90


state 173
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' error .  (74)

	.  reduce 74


state 174
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' ID .  (73)

	.  reduce 73


state 175
	encabezado_for : ID ASIGNACION CONSTANTE ';' . condicion ';' up_down CONSTANTE  (23)
	encabezado_for : ID ASIGNACION CONSTANTE ';' . condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (24)
	encabezado_for : ID ASIGNACION CONSTANTE ';' . condicion ';' CONSTANTE ';' '(' condicion ')'  (25)
	encabezado_for : ID ASIGNACION CONSTANTE ';' . condicion up_down CONSTANTE ';' '(' condicion ')'  (27)
	encabezado_for : ID ASIGNACION CONSTANTE ';' . condicion ';' up_down CONSTANTE '(' condicion ')'  (28)

	ID  shift 29
	CONSTANTE  shift 30
	'('  shift 60
	'-'  shift 32
	.  error

	invocacion_funcion  goto 33
	condicion  goto 195
	expresion  goto 35
	termino  goto 36
	factor  goto 37


state 176
	encabezado_for : ID ASIGNACION CONSTANTE condicion . ';' up_down CONSTANTE ';' '(' condicion ')'  (26)

	';'  shift 196
	.  error


state 177
	list_sentencias_ejecutables : sentencia_ejecutable error .  (99)

	.  reduce 99


state 178
	list_sentencias_ejecutables : sentencia_ejecutable ';' .  (98)

	.  reduce 98


state 179
	bloque_sentencias_ejecutables : BEGIN list_sentencias_ejecutables END .  (85)

	.  reduce 85


state 180
	list_sentencias_ejecutables : list_sentencias_ejecutables sentencia_ejecutable . ';'  (97)
	list_sentencias_ejecutables : list_sentencias_ejecutables sentencia_ejecutable . error  (100)

	error  shift 197
	';'  shift 198
	.  error


state 181
	declaracion_funcion : tipo FUN ID '(' ')' BEGIN . cuerpo_funcion END  (45)
	declaracion_tipo : .  (72)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 134
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	error  reduce 72
	';'  reduce 72

	list_sentencias  goto 199
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	cuerpo_funcion  goto 200
	sentencia_return  goto 201


state 182
	declaracion_funcion : tipo FUN ID '(' parametro ')' . BEGIN $$1 cuerpo_funcion $$2 END  (42)

	BEGIN  shift 202
	.  error


state 183
	declaracion_funcion : tipo FUN ID '(' bloque_list_parametro ')' . BEGIN cuerpo_funcion END  (43)

	BEGIN  shift 203
	.  error


state 184
	bloque_list_parametro : list_parametro ',' . parametro  (48)
	list_parametro : list_parametro ',' . parametro  (50)

	ID  shift 125
	ULONGINT  shift 9
	SINGLE  shift 10
	.  error

	tipo  goto 126
	tipo_base  goto 24
	parametro  goto 204


state 185
	declaracion_funcion : tipo FUN '(' parametro ')' BEGIN . cuerpo_funcion END  (44)
	declaracion_tipo : .  (72)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 134
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	error  reduce 72
	';'  reduce 72

	list_sentencias  goto 199
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	cuerpo_funcion  goto 205
	sentencia_return  goto 201


state 186
	invocacion_funcion : ID '(' tipo_base '(' expresion ')' ')' .  (80)

	.  reduce 80


state 187
	cuerpo_if : BEGIN list_sentencias_ejecutables sentencia_return . ';' END  (95)

	';'  shift 206
	.  error


state 188
	sentencia_return : RET '(' expresion . ')'  (54)
	expresion : expresion . '+' termino  (55)
	expresion : expresion . '-' termino  (56)
	expresion : expresion . '+' error  (58)
	expresion : expresion . '-' error  (59)

	')'  shift 207
	'+'  shift 71
	'-'  shift 72
	.  error


state 189
	bloque_if : IF '(' condicion THEN cuerpo_if ELSE cuerpo_if . fin_if  (93)

	error  shift 163
	END_IF  shift 165
	.  error

	fin_if  goto 208


state 190
	bloque_if : IF '(' condicion ')' THEN error fin_if .  (89)

	.  reduce 89


state 191
	bloque_if : IF '(' condicion ')' THEN cuerpo_if ELSE . cuerpo_if fin_if  (86)
	bloque_if : IF '(' condicion ')' THEN cuerpo_if ELSE . error fin_if  (88)

	error  shift 209
	ID  shift 119
	IF  shift 5
	BEGIN  shift 133
	OUTF  shift 7
	RET  shift 134
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 122
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 135
	sentencia_return  goto 136
	cuerpo_if  goto 210


state 192
	bloque_if : IF '(' condicion ')' THEN cuerpo_if fin_if .  (87)

	.  reduce 87


state 193
	condicion : '(' bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones . ')'  (109)

	')'  shift 211
	.  error


state 194
	bloque_if : IF condicion ')' THEN cuerpo_if ELSE cuerpo_if . fin_if  (92)

	error  shift 163
	END_IF  shift 165
	.  error

	fin_if  goto 212


state 195
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion . ';' up_down CONSTANTE  (23)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion . ';' up_down CONSTANTE ';' '(' condicion ')'  (24)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion . ';' CONSTANTE ';' '(' condicion ')'  (25)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion . up_down CONSTANTE ';' '(' condicion ')'  (27)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion . ';' up_down CONSTANTE '(' condicion ')'  (28)

	UP  shift 213
	DOWN  shift 214
	';'  shift 215
	.  error

	up_down  goto 216


state 196
	encabezado_for : ID ASIGNACION CONSTANTE condicion ';' . up_down CONSTANTE ';' '(' condicion ')'  (26)

	UP  shift 213
	DOWN  shift 214
	.  error

	up_down  goto 217


state 197
	list_sentencias_ejecutables : list_sentencias_ejecutables sentencia_ejecutable error .  (100)

	.  reduce 100


state 198
	list_sentencias_ejecutables : list_sentencias_ejecutables sentencia_ejecutable ';' .  (97)

	.  reduce 97


state 199
	list_sentencias : list_sentencias . sentencia ';'  (6)
	cuerpo_funcion : list_sentencias . sentencia_return ';'  (51)
	cuerpo_funcion : list_sentencias .  (52)
	declaracion_tipo : .  (72)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 134
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	END  reduce 52
	';'  reduce 72

	sentencia  goto 45
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	sentencia_return  goto 218


state 200
	declaracion_funcion : tipo FUN ID '(' ')' BEGIN cuerpo_funcion . END  (45)

	END  shift 219
	.  error


state 201
	cuerpo_funcion : sentencia_return . ';'  (53)

	';'  shift 220
	.  error


state 202
	declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN . $$1 cuerpo_funcion $$2 END  (42)
	$$1 : .  (40)

	.  reduce 40

	$$1  goto 221


state 203
	declaracion_funcion : tipo FUN ID '(' bloque_list_parametro ')' BEGIN . cuerpo_funcion END  (43)
	declaracion_tipo : .  (72)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 134
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	error  reduce 72
	';'  reduce 72

	list_sentencias  goto 199
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	cuerpo_funcion  goto 222
	sentencia_return  goto 201


state 204
	bloque_list_parametro : list_parametro ',' parametro .  (48)
	list_parametro : list_parametro ',' parametro .  (50)

	')'  reduce 48
	','  reduce 50


state 205
	declaracion_funcion : tipo FUN '(' parametro ')' BEGIN cuerpo_funcion . END  (44)

	END  shift 223
	.  error


state 206
	cuerpo_if : BEGIN list_sentencias_ejecutables sentencia_return ';' . END  (95)

	END  shift 224
	.  error


state 207
	sentencia_return : RET '(' expresion ')' .  (54)

	.  reduce 54


state 208
	bloque_if : IF '(' condicion THEN cuerpo_if ELSE cuerpo_if fin_if .  (93)

	.  reduce 93


state 209
	bloque_if : IF '(' condicion ')' THEN cuerpo_if ELSE error . fin_if  (88)

	error  shift 163
	END_IF  shift 165
	.  error

	fin_if  goto 225


state 210
	bloque_if : IF '(' condicion ')' THEN cuerpo_if ELSE cuerpo_if . fin_if  (86)

	error  shift 163
	END_IF  shift 165
	.  error

	fin_if  goto 226


state 211
	condicion : '(' bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones ')' .  (109)

	.  reduce 109


state 212
	bloque_if : IF condicion ')' THEN cuerpo_if ELSE cuerpo_if fin_if .  (92)

	.  reduce 92


state 213
	up_down : UP .  (29)

	.  reduce 29


state 214
	up_down : DOWN .  (30)

	.  reduce 30


state 215
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' . up_down CONSTANTE  (23)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' . up_down CONSTANTE ';' '(' condicion ')'  (24)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' . CONSTANTE ';' '(' condicion ')'  (25)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' . up_down CONSTANTE '(' condicion ')'  (28)

	CONSTANTE  shift 227
	UP  shift 213
	DOWN  shift 214
	.  error

	up_down  goto 228


state 216
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion up_down . CONSTANTE ';' '(' condicion ')'  (27)

	CONSTANTE  shift 229
	.  error


state 217
	encabezado_for : ID ASIGNACION CONSTANTE condicion ';' up_down . CONSTANTE ';' '(' condicion ')'  (26)

	CONSTANTE  shift 230
	.  error


state 218
	cuerpo_funcion : list_sentencias sentencia_return . ';'  (51)

	';'  shift 231
	.  error


state 219
	declaracion_funcion : tipo FUN ID '(' ')' BEGIN cuerpo_funcion END .  (45)

	.  reduce 45


state 220
	cuerpo_funcion : sentencia_return ';' .  (53)

	.  reduce 53


state 221
	declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN $$1 . cuerpo_funcion $$2 END  (42)
	declaracion_tipo : .  (72)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 134
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	error  reduce 72
	';'  reduce 72

	list_sentencias  goto 199
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	cuerpo_funcion  goto 232
	sentencia_return  goto 201


state 222
	declaracion_funcion : tipo FUN ID '(' bloque_list_parametro ')' BEGIN cuerpo_funcion . END  (43)

	END  shift 233
	.  error


state 223
	declaracion_funcion : tipo FUN '(' parametro ')' BEGIN cuerpo_funcion END .  (44)

	.  reduce 44


state 224
	cuerpo_if : BEGIN list_sentencias_ejecutables sentencia_return ';' END .  (95)

	.  reduce 95


state 225
	bloque_if : IF '(' condicion ')' THEN cuerpo_if ELSE error fin_if .  (88)

	.  reduce 88


state 226
	bloque_if : IF '(' condicion ')' THEN cuerpo_if ELSE cuerpo_if fin_if .  (86)

	.  reduce 86


state 227
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE . ';' '(' condicion ')'  (25)

	';'  shift 234
	.  error


state 228
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' up_down . CONSTANTE  (23)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' up_down . CONSTANTE ';' '(' condicion ')'  (24)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' up_down . CONSTANTE '(' condicion ')'  (28)

	CONSTANTE  shift 235
	.  error


state 229
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE . ';' '(' condicion ')'  (27)

	';'  shift 236
	.  error


state 230
	encabezado_for : ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE . ';' '(' condicion ')'  (26)

	';'  shift 237
	.  error


state 231
	cuerpo_funcion : list_sentencias sentencia_return ';' .  (51)

	.  reduce 51


state 232
	declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN $$1 cuerpo_funcion . $$2 END  (42)
	$$2 : .  (41)

	.  reduce 41

	$$2  goto 238


state 233
	declaracion_funcion : tipo FUN ID '(' bloque_list_parametro ')' BEGIN cuerpo_funcion END .  (43)

	.  reduce 43


state 234
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE ';' . '(' condicion ')'  (25)

	'('  shift 239
	.  error


state 235
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE .  (23)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE . ';' '(' condicion ')'  (24)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE . '(' condicion ')'  (28)

	';'  shift 240
	'('  shift 241
	ID  reduce 23
	IF  reduce 23
	BEGIN  reduce 23
	OUTF  reduce 23
	FOR  reduce 23
	')'  reduce 23


state 236
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE ';' . '(' condicion ')'  (27)

	'('  shift 242
	.  error


state 237
	encabezado_for : ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE ';' . '(' condicion ')'  (26)

	'('  shift 243
	.  error


state 238
	declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN $$1 cuerpo_funcion $$2 . END  (42)

	END  shift 244
	.  error


state 239
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE ';' '(' . condicion ')'  (25)

	ID  shift 29
	CONSTANTE  shift 30
	'('  shift 60
	'-'  shift 32
	.  error

	invocacion_funcion  goto 33
	condicion  goto 245
	expresion  goto 35
	termino  goto 36
	factor  goto 37


state 240
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE ';' . '(' condicion ')'  (24)

	'('  shift 246
	.  error


state 241
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE '(' . condicion ')'  (28)

	ID  shift 29
	CONSTANTE  shift 30
	'('  shift 60
	'-'  shift 32
	.  error

	invocacion_funcion  goto 33
	condicion  goto 247
	expresion  goto 35
	termino  goto 36
	factor  goto 37


state 242
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE ';' '(' . condicion ')'  (27)

	ID  shift 29
	CONSTANTE  shift 30
	'('  shift 60
	'-'  shift 32
	.  error

	invocacion_funcion  goto 33
	condicion  goto 248
	expresion  goto 35
	termino  goto 36
	factor  goto 37


state 243
	encabezado_for : ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE ';' '(' . condicion ')'  (26)

	ID  shift 29
	CONSTANTE  shift 30
	'('  shift 60
	'-'  shift 32
	.  error

	invocacion_funcion  goto 33
	condicion  goto 249
	expresion  goto 35
	termino  goto 36
	factor  goto 37


state 244
	declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN $$1 cuerpo_funcion $$2 END .  (42)

	.  reduce 42


state 245
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE ';' '(' condicion . ')'  (25)

	')'  shift 250
	.  error


state 246
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE ';' '(' . condicion ')'  (24)

	ID  shift 29
	CONSTANTE  shift 30
	'('  shift 60
	'-'  shift 32
	.  error

	invocacion_funcion  goto 33
	condicion  goto 251
	expresion  goto 35
	termino  goto 36
	factor  goto 37


state 247
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE '(' condicion . ')'  (28)

	')'  shift 252
	.  error


state 248
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE ';' '(' condicion . ')'  (27)

	')'  shift 253
	.  error


state 249
	encabezado_for : ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE ';' '(' condicion . ')'  (26)

	')'  shift 254
	.  error


state 250
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE ';' '(' condicion ')' .  (25)

	.  reduce 25


state 251
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE ';' '(' condicion . ')'  (24)

	')'  shift 255
	.  error


state 252
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE '(' condicion ')' .  (28)

	.  reduce 28


state 253
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE ';' '(' condicion ')' .  (27)

	.  reduce 27


state 254
	encabezado_for : ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE ';' '(' condicion ')' .  (26)

	.  reduce 26


state 255
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE ';' '(' condicion ')' .  (24)

	.  reduce 24


39 terminals, 36 nonterminals
116 grammar rules, 256 states
