   0  $accept : programa $end

   1  programa : ID BEGIN list_sentencias END
   2           | BEGIN list_sentencias END
   3           | ID BEGIN list_sentencias
   4           | ID list_sentencias END
   5           | ID BEGIN END

   6  list_sentencias : list_sentencias sentencia ';'
   7                  | sentencia ';'
   8                  | sentencia error

   9  sentencia : sentencia_declarativa
  10            | sentencia_ejecutable

  11  sentencia_declarativa : tipo list_variables
  12                        | declaracion_funcion
  13                        | declaracion_tipo

  14  sentencia_ejecutable : asignacion
  15                       | invocacion_funcion
  16                       | bloque_if
  17                       | salida_mensaje
  18                       | sentencia_control

  19  sentencia_control : FOR '(' encabezado_for ')' bloque_sentencias_ejecutables
  20                    | FOR '(' encabezado_for ')' error
  21                    | FOR encabezado_for ')' bloque_sentencias_ejecutables
  22                    | FOR '(' encabezado_for bloque_sentencias_ejecutables

  23  encabezado_for : encabezado_for1
  24                 | encabezado_for2

  25  encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE
  26                  | ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE
  27                  | ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE
  28                  | ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE

  29  encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE ';' '(' condicion ')'
  30                  | ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE ';' '(' condicion ')'
  31                  | ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE ';' '(' condicion ')'
  32                  | ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE ';' '(' condicion ')'
  33                  | ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE '(' condicion ')'

  34  up_down : UP
  35          | DOWN

  36  asignacion : ID ASIGNACION expresion
  37             | ID '[' CONSTANTE ']' ASIGNACION expresion

  38  tipo : tipo_base
  39       | ID

  40  tipo_base : ULONGINT
  41            | SINGLE

  42  list_variables : list_variables ',' ID
  43                 | list_variables ID
  44                 | ID

  45  $$1 :

  46  $$2 :

  47  declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN $$1 cuerpo_funcion $$2 END
  48                      | tipo FUN ID '(' bloque_list_parametro ')' BEGIN cuerpo_funcion END
  49                      | tipo FUN '(' parametro ')' BEGIN cuerpo_funcion END
  50                      | tipo FUN ID '(' ')' BEGIN cuerpo_funcion END

  51  parametro : tipo ID
  52            | ID

  53  bloque_list_parametro : list_parametro ',' parametro

  54  list_parametro : parametro
  55                 | list_parametro ',' parametro

  56  cuerpo_funcion : list_sentencias sentencia_return ';'
  57                 | list_sentencias
  58                 | sentencia_return ';'

  59  sentencia_return : RET '(' expresion ')'

  60  expresion : expresion '+' termino
  61            | expresion '-' termino
  62            | termino

  63  termino : termino '*' factor
  64          | termino '/' factor
  65          | factor

  66  factor : ID
  67         | CONSTANTE
  68         | invocacion_funcion
  69         | ID '[' CONSTANTE ']'
  70         | '-' ID
  71         | '-' CONSTANTE
  72         | '-' ID '[' CONSTANTE ']'
  73         | error

  74  declaracion_tipo :
  75                   | TYPEDEF TRIPLE '<' tipo_base '>' ID
  76                   | TYPEDEF TRIPLE '<' tipo_base '>' error
  77                   | TYPEDEF TRIPLE tipo_base '>' ID
  78                   | TYPEDEF TRIPLE '<' tipo_base ID

  79  invocacion_funcion : ID '(' expresion ')'
  80                     | ID '(' bloque_list_expresiones ')'
  81                     | ID '(' ')'
  82                     | ID '(' tipo_base '(' expresion ')' ')'

  83  fin_if : END_IF
  84         | error

  85  bloque_sentencias_ejecutables : sentencia_ejecutable ';'
  86                                | sentencia_ejecutable error
  87                                | BEGIN list_sentencias_ejecutables END

  88  bloque_if : IF '(' condicion ')' THEN cuerpo_if ELSE cuerpo_if fin_if
  89            | IF '(' condicion ')' THEN cuerpo_if fin_if
  90            | IF '(' condicion ')' THEN cuerpo_if ELSE error fin_if
  91            | IF '(' condicion ')' THEN error fin_if
  92            | IF condicion ')' THEN cuerpo_if fin_if
  93            | IF '(' condicion THEN cuerpo_if fin_if
  94            | IF condicion ')' THEN cuerpo_if ELSE cuerpo_if fin_if
  95            | IF '(' condicion THEN cuerpo_if ELSE cuerpo_if fin_if

  96  cuerpo_if : bloque_sentencias_ejecutables
  97            | BEGIN list_sentencias_ejecutables sentencia_return ';' END
  98            | sentencia_return ';'

  99  list_sentencias_ejecutables : list_sentencias_ejecutables sentencia_ejecutable ';'
 100                              | sentencia_ejecutable ';'

 101  comparacion : MAYORIGUAL
 102              | MENORIGUAL
 103              | DISTINTO
 104              | '='
 105              | '>'
 106              | '<'
 107              | error

 108  condicion : expresion comparacion expresion
 109            | '(' bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones ')'

 110  bloque_list_expresiones : list_expresiones ',' expresion

 111  list_expresiones : list_expresiones ',' expresion
 112                   | expresion

 113  salida_mensaje : OUTF '(' CADENA ')'
 114                 | OUTF '(' expresion ')'
 115                 | OUTF '(' ')'

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	BEGIN  shift 2
	.  error

	programa  goto 3


state 1
	programa : ID . BEGIN list_sentencias END  (1)
	programa : ID . BEGIN list_sentencias  (3)
	programa : ID . list_sentencias END  (4)
	programa : ID . BEGIN END  (5)
	declaracion_tipo : .  (74)

	ID  shift 4
	IF  shift 5
	BEGIN  shift 6
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	error  reduce 74
	';'  reduce 74

	list_sentencias  goto 12
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24


state 2
	programa : BEGIN . list_sentencias END  (2)
	declaracion_tipo : .  (74)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	error  reduce 74
	';'  reduce 74

	list_sentencias  goto 25
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24


state 3
	$accept : programa . $end  (0)

	$end  accept


state 4
	asignacion : ID . ASIGNACION expresion  (36)
	asignacion : ID . '[' CONSTANTE ']' ASIGNACION expresion  (37)
	tipo : ID .  (39)
	invocacion_funcion : ID . '(' expresion ')'  (79)
	invocacion_funcion : ID . '(' bloque_list_expresiones ')'  (80)
	invocacion_funcion : ID . '(' ')'  (81)
	invocacion_funcion : ID . '(' tipo_base '(' expresion ')' ')'  (82)

	ASIGNACION  shift 26
	'('  shift 27
	'['  shift 28
	ID  reduce 39
	FUN  reduce 39


state 5
	bloque_if : IF . '(' condicion ')' THEN cuerpo_if ELSE cuerpo_if fin_if  (88)
	bloque_if : IF . '(' condicion ')' THEN cuerpo_if fin_if  (89)
	bloque_if : IF . '(' condicion ')' THEN cuerpo_if ELSE error fin_if  (90)
	bloque_if : IF . '(' condicion ')' THEN error fin_if  (91)
	bloque_if : IF . condicion ')' THEN cuerpo_if fin_if  (92)
	bloque_if : IF . '(' condicion THEN cuerpo_if fin_if  (93)
	bloque_if : IF . condicion ')' THEN cuerpo_if ELSE cuerpo_if fin_if  (94)
	bloque_if : IF . '(' condicion THEN cuerpo_if ELSE cuerpo_if fin_if  (95)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'('  shift 32
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	condicion  goto 35
	expresion  goto 36
	termino  goto 37
	factor  goto 38


state 6
	programa : ID BEGIN . list_sentencias END  (1)
	programa : ID BEGIN . list_sentencias  (3)
	programa : ID BEGIN . END  (5)
	declaracion_tipo : .  (74)

	ID  shift 4
	IF  shift 5
	END  shift 39
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	error  reduce 74
	';'  reduce 74

	list_sentencias  goto 40
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24


state 7
	salida_mensaje : OUTF . '(' CADENA ')'  (113)
	salida_mensaje : OUTF . '(' expresion ')'  (114)
	salida_mensaje : OUTF . '(' ')'  (115)

	'('  shift 41
	.  error


state 8
	declaracion_tipo : TYPEDEF . TRIPLE '<' tipo_base '>' ID  (75)
	declaracion_tipo : TYPEDEF . TRIPLE '<' tipo_base '>' error  (76)
	declaracion_tipo : TYPEDEF . TRIPLE tipo_base '>' ID  (77)
	declaracion_tipo : TYPEDEF . TRIPLE '<' tipo_base ID  (78)

	TRIPLE  shift 42
	.  error


state 9
	tipo_base : ULONGINT .  (40)

	.  reduce 40


state 10
	tipo_base : SINGLE .  (41)

	.  reduce 41


state 11
	sentencia_control : FOR . '(' encabezado_for ')' bloque_sentencias_ejecutables  (19)
	sentencia_control : FOR . '(' encabezado_for ')' error  (20)
	sentencia_control : FOR . encabezado_for ')' bloque_sentencias_ejecutables  (21)
	sentencia_control : FOR . '(' encabezado_for bloque_sentencias_ejecutables  (22)

	ID  shift 43
	'('  shift 44
	.  error

	encabezado_for  goto 45
	encabezado_for1  goto 46
	encabezado_for2  goto 47


state 12
	programa : ID list_sentencias . END  (4)
	list_sentencias : list_sentencias . sentencia ';'  (6)
	declaracion_tipo : .  (74)

	ID  shift 4
	IF  shift 5
	END  shift 48
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	';'  reduce 74

	sentencia  goto 49
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24


state 13
	list_sentencias : sentencia . ';'  (7)
	list_sentencias : sentencia . error  (8)

	error  shift 50
	';'  shift 51
	.  error


state 14
	sentencia : sentencia_declarativa .  (9)

	.  reduce 9


state 15
	sentencia : sentencia_ejecutable .  (10)

	.  reduce 10


state 16
	sentencia_declarativa : tipo . list_variables  (11)
	declaracion_funcion : tipo . FUN ID '(' parametro ')' BEGIN $$1 cuerpo_funcion $$2 END  (47)
	declaracion_funcion : tipo . FUN ID '(' bloque_list_parametro ')' BEGIN cuerpo_funcion END  (48)
	declaracion_funcion : tipo . FUN '(' parametro ')' BEGIN cuerpo_funcion END  (49)
	declaracion_funcion : tipo . FUN ID '(' ')' BEGIN cuerpo_funcion END  (50)

	ID  shift 52
	FUN  shift 53
	.  error

	list_variables  goto 54


state 17
	sentencia_declarativa : declaracion_funcion .  (12)

	.  reduce 12


state 18
	sentencia_declarativa : declaracion_tipo .  (13)

	.  reduce 13


state 19
	sentencia_ejecutable : asignacion .  (14)

	.  reduce 14


state 20
	sentencia_ejecutable : invocacion_funcion .  (15)

	.  reduce 15


state 21
	sentencia_ejecutable : bloque_if .  (16)

	.  reduce 16


state 22
	sentencia_ejecutable : salida_mensaje .  (17)

	.  reduce 17


state 23
	sentencia_ejecutable : sentencia_control .  (18)

	.  reduce 18


state 24
	tipo : tipo_base .  (38)

	.  reduce 38


state 25
	programa : BEGIN list_sentencias . END  (2)
	list_sentencias : list_sentencias . sentencia ';'  (6)
	declaracion_tipo : .  (74)

	ID  shift 4
	IF  shift 5
	END  shift 55
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	';'  reduce 74

	sentencia  goto 49
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24


state 26
	asignacion : ID ASIGNACION . expresion  (36)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	expresion  goto 56
	termino  goto 37
	factor  goto 38


state 27
	invocacion_funcion : ID '(' . expresion ')'  (79)
	invocacion_funcion : ID '(' . bloque_list_expresiones ')'  (80)
	invocacion_funcion : ID '(' . ')'  (81)
	invocacion_funcion : ID '(' . tipo_base '(' expresion ')' ')'  (82)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	ULONGINT  shift 9
	SINGLE  shift 10
	')'  shift 57
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	expresion  goto 58
	tipo_base  goto 59
	termino  goto 37
	factor  goto 38
	bloque_list_expresiones  goto 60
	list_expresiones  goto 61


state 28
	asignacion : ID '[' . CONSTANTE ']' ASIGNACION expresion  (37)

	CONSTANTE  shift 62
	.  error


state 29
	factor : error .  (73)

	.  reduce 73


state 30
	factor : ID .  (66)
	factor : ID . '[' CONSTANTE ']'  (69)
	invocacion_funcion : ID . '(' expresion ')'  (79)
	invocacion_funcion : ID . '(' bloque_list_expresiones ')'  (80)
	invocacion_funcion : ID . '(' ')'  (81)
	invocacion_funcion : ID . '(' tipo_base '(' expresion ')' ')'  (82)

	'('  shift 27
	'['  shift 63
	error  reduce 66
	MAYORIGUAL  reduce 66
	MENORIGUAL  reduce 66
	DISTINTO  reduce 66
	THEN  reduce 66
	UP  reduce 66
	DOWN  reduce 66
	';'  reduce 66
	')'  reduce 66
	','  reduce 66
	'+'  reduce 66
	'-'  reduce 66
	'*'  reduce 66
	'/'  reduce 66
	'<'  reduce 66
	'>'  reduce 66
	'='  reduce 66


state 31
	factor : CONSTANTE .  (67)

	.  reduce 67


state 32
	bloque_if : IF '(' . condicion ')' THEN cuerpo_if ELSE cuerpo_if fin_if  (88)
	bloque_if : IF '(' . condicion ')' THEN cuerpo_if fin_if  (89)
	bloque_if : IF '(' . condicion ')' THEN cuerpo_if ELSE error fin_if  (90)
	bloque_if : IF '(' . condicion ')' THEN error fin_if  (91)
	bloque_if : IF '(' . condicion THEN cuerpo_if fin_if  (93)
	bloque_if : IF '(' . condicion THEN cuerpo_if ELSE cuerpo_if fin_if  (95)
	condicion : '(' . bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones ')'  (109)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'('  shift 64
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	condicion  goto 65
	expresion  goto 66
	termino  goto 37
	factor  goto 38
	bloque_list_expresiones  goto 67
	list_expresiones  goto 61


state 33
	factor : '-' . ID  (70)
	factor : '-' . CONSTANTE  (71)
	factor : '-' . ID '[' CONSTANTE ']'  (72)

	ID  shift 68
	CONSTANTE  shift 69
	.  error


state 34
	factor : invocacion_funcion .  (68)

	.  reduce 68


state 35
	bloque_if : IF condicion . ')' THEN cuerpo_if fin_if  (92)
	bloque_if : IF condicion . ')' THEN cuerpo_if ELSE cuerpo_if fin_if  (94)

	')'  shift 70
	.  error


state 36
	expresion : expresion . '+' termino  (60)
	expresion : expresion . '-' termino  (61)
	condicion : expresion . comparacion expresion  (108)

	error  shift 71
	MAYORIGUAL  shift 72
	MENORIGUAL  shift 73
	DISTINTO  shift 74
	'+'  shift 75
	'-'  shift 76
	'<'  shift 77
	'>'  shift 78
	'='  shift 79
	.  error

	comparacion  goto 80


state 37
	expresion : termino .  (62)
	termino : termino . '*' factor  (63)
	termino : termino . '/' factor  (64)

	'*'  shift 81
	'/'  shift 82
	error  reduce 62
	MAYORIGUAL  reduce 62
	MENORIGUAL  reduce 62
	DISTINTO  reduce 62
	THEN  reduce 62
	UP  reduce 62
	DOWN  reduce 62
	';'  reduce 62
	')'  reduce 62
	','  reduce 62
	'+'  reduce 62
	'-'  reduce 62
	'<'  reduce 62
	'>'  reduce 62
	'='  reduce 62


state 38
	termino : factor .  (65)

	.  reduce 65


state 39
	programa : ID BEGIN END .  (5)

	.  reduce 5


state 40
	programa : ID BEGIN list_sentencias . END  (1)
	programa : ID BEGIN list_sentencias .  (3)
	list_sentencias : list_sentencias . sentencia ';'  (6)
	declaracion_tipo : .  (74)

	ID  shift 4
	IF  shift 5
	END  shift 83
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	$end  reduce 3
	';'  reduce 74

	sentencia  goto 49
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24


state 41
	salida_mensaje : OUTF '(' . CADENA ')'  (113)
	salida_mensaje : OUTF '(' . expresion ')'  (114)
	salida_mensaje : OUTF '(' . ')'  (115)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	CADENA  shift 84
	')'  shift 85
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	expresion  goto 86
	termino  goto 37
	factor  goto 38


state 42
	declaracion_tipo : TYPEDEF TRIPLE . '<' tipo_base '>' ID  (75)
	declaracion_tipo : TYPEDEF TRIPLE . '<' tipo_base '>' error  (76)
	declaracion_tipo : TYPEDEF TRIPLE . tipo_base '>' ID  (77)
	declaracion_tipo : TYPEDEF TRIPLE . '<' tipo_base ID  (78)

	ULONGINT  shift 9
	SINGLE  shift 10
	'<'  shift 87
	.  error

	tipo_base  goto 88


state 43
	encabezado_for1 : ID . ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE  (25)
	encabezado_for1 : ID . ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE  (26)
	encabezado_for1 : ID . ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE  (27)
	encabezado_for1 : ID . ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE  (28)
	encabezado_for2 : ID . ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (29)
	encabezado_for2 : ID . ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE ';' '(' condicion ')'  (30)
	encabezado_for2 : ID . ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (31)
	encabezado_for2 : ID . ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE ';' '(' condicion ')'  (32)
	encabezado_for2 : ID . ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE '(' condicion ')'  (33)

	ASIGNACION  shift 89
	.  error


state 44
	sentencia_control : FOR '(' . encabezado_for ')' bloque_sentencias_ejecutables  (19)
	sentencia_control : FOR '(' . encabezado_for ')' error  (20)
	sentencia_control : FOR '(' . encabezado_for bloque_sentencias_ejecutables  (22)

	ID  shift 43
	.  error

	encabezado_for  goto 90
	encabezado_for1  goto 46
	encabezado_for2  goto 47


state 45
	sentencia_control : FOR encabezado_for . ')' bloque_sentencias_ejecutables  (21)

	')'  shift 91
	.  error


state 46
	encabezado_for : encabezado_for1 .  (23)

	.  reduce 23


state 47
	encabezado_for : encabezado_for2 .  (24)

	.  reduce 24


state 48
	programa : ID list_sentencias END .  (4)

	.  reduce 4


state 49
	list_sentencias : list_sentencias sentencia . ';'  (6)

	';'  shift 92
	.  error


state 50
	list_sentencias : sentencia error .  (8)

	.  reduce 8


state 51
	list_sentencias : sentencia ';' .  (7)

	.  reduce 7


state 52
	list_variables : ID .  (44)

	.  reduce 44


state 53
	declaracion_funcion : tipo FUN . ID '(' parametro ')' BEGIN $$1 cuerpo_funcion $$2 END  (47)
	declaracion_funcion : tipo FUN . ID '(' bloque_list_parametro ')' BEGIN cuerpo_funcion END  (48)
	declaracion_funcion : tipo FUN . '(' parametro ')' BEGIN cuerpo_funcion END  (49)
	declaracion_funcion : tipo FUN . ID '(' ')' BEGIN cuerpo_funcion END  (50)

	ID  shift 93
	'('  shift 94
	.  error


state 54
	sentencia_declarativa : tipo list_variables .  (11)
	list_variables : list_variables . ',' ID  (42)
	list_variables : list_variables . ID  (43)

	ID  shift 95
	','  shift 96
	error  reduce 11
	';'  reduce 11


state 55
	programa : BEGIN list_sentencias END .  (2)

	.  reduce 2


state 56
	asignacion : ID ASIGNACION expresion .  (36)
	expresion : expresion . '+' termino  (60)
	expresion : expresion . '-' termino  (61)

	'+'  shift 75
	'-'  shift 76
	error  reduce 36
	';'  reduce 36


state 57
	invocacion_funcion : ID '(' ')' .  (81)

	.  reduce 81


state 58
	expresion : expresion . '+' termino  (60)
	expresion : expresion . '-' termino  (61)
	invocacion_funcion : ID '(' expresion . ')'  (79)
	list_expresiones : expresion .  (112)

	')'  shift 97
	'+'  shift 75
	'-'  shift 76
	','  reduce 112


state 59
	invocacion_funcion : ID '(' tipo_base . '(' expresion ')' ')'  (82)

	'('  shift 98
	.  error


state 60
	invocacion_funcion : ID '(' bloque_list_expresiones . ')'  (80)

	')'  shift 99
	.  error


state 61
	bloque_list_expresiones : list_expresiones . ',' expresion  (110)
	list_expresiones : list_expresiones . ',' expresion  (111)

	','  shift 100
	.  error


state 62
	asignacion : ID '[' CONSTANTE . ']' ASIGNACION expresion  (37)

	']'  shift 101
	.  error


state 63
	factor : ID '[' . CONSTANTE ']'  (69)

	CONSTANTE  shift 102
	.  error


state 64
	condicion : '(' . bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones ')'  (109)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	expresion  goto 103
	termino  goto 37
	factor  goto 38
	bloque_list_expresiones  goto 67
	list_expresiones  goto 61


state 65
	bloque_if : IF '(' condicion . ')' THEN cuerpo_if ELSE cuerpo_if fin_if  (88)
	bloque_if : IF '(' condicion . ')' THEN cuerpo_if fin_if  (89)
	bloque_if : IF '(' condicion . ')' THEN cuerpo_if ELSE error fin_if  (90)
	bloque_if : IF '(' condicion . ')' THEN error fin_if  (91)
	bloque_if : IF '(' condicion . THEN cuerpo_if fin_if  (93)
	bloque_if : IF '(' condicion . THEN cuerpo_if ELSE cuerpo_if fin_if  (95)

	THEN  shift 104
	')'  shift 105
	.  error


state 66
	expresion : expresion . '+' termino  (60)
	expresion : expresion . '-' termino  (61)
	condicion : expresion . comparacion expresion  (108)
	list_expresiones : expresion .  (112)

	error  shift 71
	MAYORIGUAL  shift 72
	MENORIGUAL  shift 73
	DISTINTO  shift 74
	'+'  shift 75
	'-'  shift 76
	'<'  shift 77
	'>'  shift 78
	'='  shift 79
	','  reduce 112

	comparacion  goto 80


state 67
	condicion : '(' bloque_list_expresiones . ')' comparacion '(' bloque_list_expresiones ')'  (109)

	')'  shift 106
	.  error


state 68
	factor : '-' ID .  (70)
	factor : '-' ID . '[' CONSTANTE ']'  (72)

	'['  shift 107
	error  reduce 70
	MAYORIGUAL  reduce 70
	MENORIGUAL  reduce 70
	DISTINTO  reduce 70
	THEN  reduce 70
	UP  reduce 70
	DOWN  reduce 70
	';'  reduce 70
	')'  reduce 70
	','  reduce 70
	'+'  reduce 70
	'-'  reduce 70
	'*'  reduce 70
	'/'  reduce 70
	'<'  reduce 70
	'>'  reduce 70
	'='  reduce 70


state 69
	factor : '-' CONSTANTE .  (71)

	.  reduce 71


state 70
	bloque_if : IF condicion ')' . THEN cuerpo_if fin_if  (92)
	bloque_if : IF condicion ')' . THEN cuerpo_if ELSE cuerpo_if fin_if  (94)

	THEN  shift 108
	.  error


state 71
	comparacion : error .  (107)

	.  reduce 107


state 72
	comparacion : MAYORIGUAL .  (101)

	.  reduce 101


state 73
	comparacion : MENORIGUAL .  (102)

	.  reduce 102


state 74
	comparacion : DISTINTO .  (103)

	.  reduce 103


state 75
	expresion : expresion '+' . termino  (60)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	termino  goto 109
	factor  goto 38


state 76
	expresion : expresion '-' . termino  (61)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	termino  goto 110
	factor  goto 38


state 77
	comparacion : '<' .  (106)

	.  reduce 106


state 78
	comparacion : '>' .  (105)

	.  reduce 105


state 79
	comparacion : '=' .  (104)

	.  reduce 104


state 80
	condicion : expresion comparacion . expresion  (108)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	expresion  goto 111
	termino  goto 37
	factor  goto 38


state 81
	termino : termino '*' . factor  (63)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	factor  goto 112


state 82
	termino : termino '/' . factor  (64)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	factor  goto 113


state 83
	programa : ID BEGIN list_sentencias END .  (1)

	.  reduce 1


state 84
	salida_mensaje : OUTF '(' CADENA . ')'  (113)

	')'  shift 114
	.  error


state 85
	salida_mensaje : OUTF '(' ')' .  (115)

	.  reduce 115


state 86
	expresion : expresion . '+' termino  (60)
	expresion : expresion . '-' termino  (61)
	salida_mensaje : OUTF '(' expresion . ')'  (114)

	')'  shift 115
	'+'  shift 75
	'-'  shift 76
	.  error


state 87
	declaracion_tipo : TYPEDEF TRIPLE '<' . tipo_base '>' ID  (75)
	declaracion_tipo : TYPEDEF TRIPLE '<' . tipo_base '>' error  (76)
	declaracion_tipo : TYPEDEF TRIPLE '<' . tipo_base ID  (78)

	ULONGINT  shift 9
	SINGLE  shift 10
	.  error

	tipo_base  goto 116


state 88
	declaracion_tipo : TYPEDEF TRIPLE tipo_base . '>' ID  (77)

	'>'  shift 117
	.  error


state 89
	encabezado_for1 : ID ASIGNACION . CONSTANTE ';' condicion ';' up_down CONSTANTE  (25)
	encabezado_for1 : ID ASIGNACION . CONSTANTE ';' condicion ';' CONSTANTE  (26)
	encabezado_for1 : ID ASIGNACION . CONSTANTE condicion ';' up_down CONSTANTE  (27)
	encabezado_for1 : ID ASIGNACION . CONSTANTE ';' condicion up_down CONSTANTE  (28)
	encabezado_for2 : ID ASIGNACION . CONSTANTE ';' condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (29)
	encabezado_for2 : ID ASIGNACION . CONSTANTE ';' condicion ';' CONSTANTE ';' '(' condicion ')'  (30)
	encabezado_for2 : ID ASIGNACION . CONSTANTE condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (31)
	encabezado_for2 : ID ASIGNACION . CONSTANTE ';' condicion up_down CONSTANTE ';' '(' condicion ')'  (32)
	encabezado_for2 : ID ASIGNACION . CONSTANTE ';' condicion ';' up_down CONSTANTE '(' condicion ')'  (33)

	CONSTANTE  shift 118
	.  error


state 90
	sentencia_control : FOR '(' encabezado_for . ')' bloque_sentencias_ejecutables  (19)
	sentencia_control : FOR '(' encabezado_for . ')' error  (20)
	sentencia_control : FOR '(' encabezado_for . bloque_sentencias_ejecutables  (22)

	ID  shift 119
	IF  shift 5
	BEGIN  shift 120
	OUTF  shift 7
	FOR  shift 11
	')'  shift 121
	.  error

	sentencia_ejecutable  goto 122
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 123


state 91
	sentencia_control : FOR encabezado_for ')' . bloque_sentencias_ejecutables  (21)

	ID  shift 119
	IF  shift 5
	BEGIN  shift 120
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 122
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 124


state 92
	list_sentencias : list_sentencias sentencia ';' .  (6)

	.  reduce 6


state 93
	declaracion_funcion : tipo FUN ID . '(' parametro ')' BEGIN $$1 cuerpo_funcion $$2 END  (47)
	declaracion_funcion : tipo FUN ID . '(' bloque_list_parametro ')' BEGIN cuerpo_funcion END  (48)
	declaracion_funcion : tipo FUN ID . '(' ')' BEGIN cuerpo_funcion END  (50)

	'('  shift 125
	.  error


state 94
	declaracion_funcion : tipo FUN '(' . parametro ')' BEGIN cuerpo_funcion END  (49)

	ID  shift 126
	ULONGINT  shift 9
	SINGLE  shift 10
	.  error

	tipo  goto 127
	tipo_base  goto 24
	parametro  goto 128


state 95
	list_variables : list_variables ID .  (43)

	.  reduce 43


state 96
	list_variables : list_variables ',' . ID  (42)

	ID  shift 129
	.  error


state 97
	invocacion_funcion : ID '(' expresion ')' .  (79)

	.  reduce 79


state 98
	invocacion_funcion : ID '(' tipo_base '(' . expresion ')' ')'  (82)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	expresion  goto 130
	termino  goto 37
	factor  goto 38


state 99
	invocacion_funcion : ID '(' bloque_list_expresiones ')' .  (80)

	.  reduce 80


state 100
	bloque_list_expresiones : list_expresiones ',' . expresion  (110)
	list_expresiones : list_expresiones ',' . expresion  (111)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	expresion  goto 131
	termino  goto 37
	factor  goto 38


state 101
	asignacion : ID '[' CONSTANTE ']' . ASIGNACION expresion  (37)

	ASIGNACION  shift 132
	.  error


state 102
	factor : ID '[' CONSTANTE . ']'  (69)

	']'  shift 133
	.  error


state 103
	expresion : expresion . '+' termino  (60)
	expresion : expresion . '-' termino  (61)
	list_expresiones : expresion .  (112)

	'+'  shift 75
	'-'  shift 76
	','  reduce 112


state 104
	bloque_if : IF '(' condicion THEN . cuerpo_if fin_if  (93)
	bloque_if : IF '(' condicion THEN . cuerpo_if ELSE cuerpo_if fin_if  (95)

	ID  shift 119
	IF  shift 5
	BEGIN  shift 134
	OUTF  shift 7
	RET  shift 135
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 122
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 136
	sentencia_return  goto 137
	cuerpo_if  goto 138


state 105
	bloque_if : IF '(' condicion ')' . THEN cuerpo_if ELSE cuerpo_if fin_if  (88)
	bloque_if : IF '(' condicion ')' . THEN cuerpo_if fin_if  (89)
	bloque_if : IF '(' condicion ')' . THEN cuerpo_if ELSE error fin_if  (90)
	bloque_if : IF '(' condicion ')' . THEN error fin_if  (91)

	THEN  shift 139
	.  error


state 106
	condicion : '(' bloque_list_expresiones ')' . comparacion '(' bloque_list_expresiones ')'  (109)

	error  shift 71
	MAYORIGUAL  shift 72
	MENORIGUAL  shift 73
	DISTINTO  shift 74
	'<'  shift 77
	'>'  shift 78
	'='  shift 79
	.  error

	comparacion  goto 140


state 107
	factor : '-' ID '[' . CONSTANTE ']'  (72)

	CONSTANTE  shift 141
	.  error


state 108
	bloque_if : IF condicion ')' THEN . cuerpo_if fin_if  (92)
	bloque_if : IF condicion ')' THEN . cuerpo_if ELSE cuerpo_if fin_if  (94)

	ID  shift 119
	IF  shift 5
	BEGIN  shift 134
	OUTF  shift 7
	RET  shift 135
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 122
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 136
	sentencia_return  goto 137
	cuerpo_if  goto 142


state 109
	expresion : expresion '+' termino .  (60)
	termino : termino . '*' factor  (63)
	termino : termino . '/' factor  (64)

	'*'  shift 81
	'/'  shift 82
	error  reduce 60
	MAYORIGUAL  reduce 60
	MENORIGUAL  reduce 60
	DISTINTO  reduce 60
	THEN  reduce 60
	UP  reduce 60
	DOWN  reduce 60
	';'  reduce 60
	')'  reduce 60
	','  reduce 60
	'+'  reduce 60
	'-'  reduce 60
	'<'  reduce 60
	'>'  reduce 60
	'='  reduce 60


state 110
	expresion : expresion '-' termino .  (61)
	termino : termino . '*' factor  (63)
	termino : termino . '/' factor  (64)

	'*'  shift 81
	'/'  shift 82
	error  reduce 61
	MAYORIGUAL  reduce 61
	MENORIGUAL  reduce 61
	DISTINTO  reduce 61
	THEN  reduce 61
	UP  reduce 61
	DOWN  reduce 61
	';'  reduce 61
	')'  reduce 61
	','  reduce 61
	'+'  reduce 61
	'-'  reduce 61
	'<'  reduce 61
	'>'  reduce 61
	'='  reduce 61


state 111
	expresion : expresion . '+' termino  (60)
	expresion : expresion . '-' termino  (61)
	condicion : expresion comparacion expresion .  (108)

	'+'  shift 75
	'-'  shift 76
	THEN  reduce 108
	UP  reduce 108
	DOWN  reduce 108
	';'  reduce 108
	')'  reduce 108


state 112
	termino : termino '*' factor .  (63)

	.  reduce 63


state 113
	termino : termino '/' factor .  (64)

	.  reduce 64


state 114
	salida_mensaje : OUTF '(' CADENA ')' .  (113)

	.  reduce 113


state 115
	salida_mensaje : OUTF '(' expresion ')' .  (114)

	.  reduce 114


state 116
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base . '>' ID  (75)
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base . '>' error  (76)
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base . ID  (78)

	ID  shift 143
	'>'  shift 144
	.  error


state 117
	declaracion_tipo : TYPEDEF TRIPLE tipo_base '>' . ID  (77)

	ID  shift 145
	.  error


state 118
	encabezado_for1 : ID ASIGNACION CONSTANTE . ';' condicion ';' up_down CONSTANTE  (25)
	encabezado_for1 : ID ASIGNACION CONSTANTE . ';' condicion ';' CONSTANTE  (26)
	encabezado_for1 : ID ASIGNACION CONSTANTE . condicion ';' up_down CONSTANTE  (27)
	encabezado_for1 : ID ASIGNACION CONSTANTE . ';' condicion up_down CONSTANTE  (28)
	encabezado_for2 : ID ASIGNACION CONSTANTE . ';' condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (29)
	encabezado_for2 : ID ASIGNACION CONSTANTE . ';' condicion ';' CONSTANTE ';' '(' condicion ')'  (30)
	encabezado_for2 : ID ASIGNACION CONSTANTE . condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (31)
	encabezado_for2 : ID ASIGNACION CONSTANTE . ';' condicion up_down CONSTANTE ';' '(' condicion ')'  (32)
	encabezado_for2 : ID ASIGNACION CONSTANTE . ';' condicion ';' up_down CONSTANTE '(' condicion ')'  (33)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	';'  shift 146
	'('  shift 64
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	condicion  goto 147
	expresion  goto 36
	termino  goto 37
	factor  goto 38


state 119
	asignacion : ID . ASIGNACION expresion  (36)
	asignacion : ID . '[' CONSTANTE ']' ASIGNACION expresion  (37)
	invocacion_funcion : ID . '(' expresion ')'  (79)
	invocacion_funcion : ID . '(' bloque_list_expresiones ')'  (80)
	invocacion_funcion : ID . '(' ')'  (81)
	invocacion_funcion : ID . '(' tipo_base '(' expresion ')' ')'  (82)

	ASIGNACION  shift 26
	'('  shift 27
	'['  shift 28
	.  error


state 120
	bloque_sentencias_ejecutables : BEGIN . list_sentencias_ejecutables END  (87)

	ID  shift 119
	IF  shift 5
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 148
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	list_sentencias_ejecutables  goto 149


state 121
	sentencia_control : FOR '(' encabezado_for ')' . bloque_sentencias_ejecutables  (19)
	sentencia_control : FOR '(' encabezado_for ')' . error  (20)

	error  shift 150
	ID  shift 119
	IF  shift 5
	BEGIN  shift 120
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 122
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 151


state 122
	bloque_sentencias_ejecutables : sentencia_ejecutable . ';'  (85)
	bloque_sentencias_ejecutables : sentencia_ejecutable . error  (86)

	error  shift 152
	';'  shift 153
	.  error


state 123
	sentencia_control : FOR '(' encabezado_for bloque_sentencias_ejecutables .  (22)

	.  reduce 22


state 124
	sentencia_control : FOR encabezado_for ')' bloque_sentencias_ejecutables .  (21)

	.  reduce 21


state 125
	declaracion_funcion : tipo FUN ID '(' . parametro ')' BEGIN $$1 cuerpo_funcion $$2 END  (47)
	declaracion_funcion : tipo FUN ID '(' . bloque_list_parametro ')' BEGIN cuerpo_funcion END  (48)
	declaracion_funcion : tipo FUN ID '(' . ')' BEGIN cuerpo_funcion END  (50)

	ID  shift 126
	ULONGINT  shift 9
	SINGLE  shift 10
	')'  shift 154
	.  error

	tipo  goto 127
	tipo_base  goto 24
	parametro  goto 155
	bloque_list_parametro  goto 156
	list_parametro  goto 157


state 126
	tipo : ID .  (39)
	parametro : ID .  (52)

	ID  reduce 39
	')'  reduce 52
	','  reduce 52


state 127
	parametro : tipo . ID  (51)

	ID  shift 158
	.  error


state 128
	declaracion_funcion : tipo FUN '(' parametro . ')' BEGIN cuerpo_funcion END  (49)

	')'  shift 159
	.  error


state 129
	list_variables : list_variables ',' ID .  (42)

	.  reduce 42


state 130
	expresion : expresion . '+' termino  (60)
	expresion : expresion . '-' termino  (61)
	invocacion_funcion : ID '(' tipo_base '(' expresion . ')' ')'  (82)

	')'  shift 160
	'+'  shift 75
	'-'  shift 76
	.  error


state 131
	expresion : expresion . '+' termino  (60)
	expresion : expresion . '-' termino  (61)
	bloque_list_expresiones : list_expresiones ',' expresion .  (110)
	list_expresiones : list_expresiones ',' expresion .  (111)

	'+'  shift 75
	'-'  shift 76
	')'  reduce 110
	','  reduce 111


state 132
	asignacion : ID '[' CONSTANTE ']' ASIGNACION . expresion  (37)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	expresion  goto 161
	termino  goto 37
	factor  goto 38


state 133
	factor : ID '[' CONSTANTE ']' .  (69)

	.  reduce 69


state 134
	bloque_sentencias_ejecutables : BEGIN . list_sentencias_ejecutables END  (87)
	cuerpo_if : BEGIN . list_sentencias_ejecutables sentencia_return ';' END  (97)

	ID  shift 119
	IF  shift 5
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 148
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	list_sentencias_ejecutables  goto 162


state 135
	sentencia_return : RET . '(' expresion ')'  (59)

	'('  shift 163
	.  error


state 136
	cuerpo_if : bloque_sentencias_ejecutables .  (96)

	.  reduce 96


state 137
	cuerpo_if : sentencia_return . ';'  (98)

	';'  shift 164
	.  error


state 138
	bloque_if : IF '(' condicion THEN cuerpo_if . fin_if  (93)
	bloque_if : IF '(' condicion THEN cuerpo_if . ELSE cuerpo_if fin_if  (95)

	error  shift 165
	ELSE  shift 166
	END_IF  shift 167
	.  error

	fin_if  goto 168


state 139
	bloque_if : IF '(' condicion ')' THEN . cuerpo_if ELSE cuerpo_if fin_if  (88)
	bloque_if : IF '(' condicion ')' THEN . cuerpo_if fin_if  (89)
	bloque_if : IF '(' condicion ')' THEN . cuerpo_if ELSE error fin_if  (90)
	bloque_if : IF '(' condicion ')' THEN . error fin_if  (91)

	error  shift 169
	ID  shift 119
	IF  shift 5
	BEGIN  shift 134
	OUTF  shift 7
	RET  shift 135
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 122
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 136
	sentencia_return  goto 137
	cuerpo_if  goto 170


state 140
	condicion : '(' bloque_list_expresiones ')' comparacion . '(' bloque_list_expresiones ')'  (109)

	'('  shift 171
	.  error


state 141
	factor : '-' ID '[' CONSTANTE . ']'  (72)

	']'  shift 172
	.  error


state 142
	bloque_if : IF condicion ')' THEN cuerpo_if . fin_if  (92)
	bloque_if : IF condicion ')' THEN cuerpo_if . ELSE cuerpo_if fin_if  (94)

	error  shift 165
	ELSE  shift 173
	END_IF  shift 167
	.  error

	fin_if  goto 174


state 143
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base ID .  (78)

	.  reduce 78


state 144
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' . ID  (75)
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' . error  (76)

	error  shift 175
	ID  shift 176
	.  error


state 145
	declaracion_tipo : TYPEDEF TRIPLE tipo_base '>' ID .  (77)

	.  reduce 77


state 146
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' . condicion ';' up_down CONSTANTE  (25)
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' . condicion ';' CONSTANTE  (26)
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' . condicion up_down CONSTANTE  (28)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' . condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (29)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' . condicion ';' CONSTANTE ';' '(' condicion ')'  (30)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' . condicion up_down CONSTANTE ';' '(' condicion ')'  (32)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' . condicion ';' up_down CONSTANTE '(' condicion ')'  (33)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'('  shift 64
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	condicion  goto 177
	expresion  goto 36
	termino  goto 37
	factor  goto 38


state 147
	encabezado_for1 : ID ASIGNACION CONSTANTE condicion . ';' up_down CONSTANTE  (27)
	encabezado_for2 : ID ASIGNACION CONSTANTE condicion . ';' up_down CONSTANTE ';' '(' condicion ')'  (31)

	';'  shift 178
	.  error


state 148
	list_sentencias_ejecutables : sentencia_ejecutable . ';'  (100)

	';'  shift 179
	.  error


state 149
	bloque_sentencias_ejecutables : BEGIN list_sentencias_ejecutables . END  (87)
	list_sentencias_ejecutables : list_sentencias_ejecutables . sentencia_ejecutable ';'  (99)

	ID  shift 119
	IF  shift 5
	END  shift 180
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 181
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23


state 150
	sentencia_control : FOR '(' encabezado_for ')' error .  (20)

	.  reduce 20


state 151
	sentencia_control : FOR '(' encabezado_for ')' bloque_sentencias_ejecutables .  (19)

	.  reduce 19


state 152
	bloque_sentencias_ejecutables : sentencia_ejecutable error .  (86)

	.  reduce 86


state 153
	bloque_sentencias_ejecutables : sentencia_ejecutable ';' .  (85)

	.  reduce 85


state 154
	declaracion_funcion : tipo FUN ID '(' ')' . BEGIN cuerpo_funcion END  (50)

	BEGIN  shift 182
	.  error


state 155
	declaracion_funcion : tipo FUN ID '(' parametro . ')' BEGIN $$1 cuerpo_funcion $$2 END  (47)
	list_parametro : parametro .  (54)

	')'  shift 183
	','  reduce 54


state 156
	declaracion_funcion : tipo FUN ID '(' bloque_list_parametro . ')' BEGIN cuerpo_funcion END  (48)

	')'  shift 184
	.  error


state 157
	bloque_list_parametro : list_parametro . ',' parametro  (53)
	list_parametro : list_parametro . ',' parametro  (55)

	','  shift 185
	.  error


state 158
	parametro : tipo ID .  (51)

	.  reduce 51


state 159
	declaracion_funcion : tipo FUN '(' parametro ')' . BEGIN cuerpo_funcion END  (49)

	BEGIN  shift 186
	.  error


state 160
	invocacion_funcion : ID '(' tipo_base '(' expresion ')' . ')'  (82)

	')'  shift 187
	.  error


state 161
	asignacion : ID '[' CONSTANTE ']' ASIGNACION expresion .  (37)
	expresion : expresion . '+' termino  (60)
	expresion : expresion . '-' termino  (61)

	'+'  shift 75
	'-'  shift 76
	error  reduce 37
	';'  reduce 37


state 162
	bloque_sentencias_ejecutables : BEGIN list_sentencias_ejecutables . END  (87)
	cuerpo_if : BEGIN list_sentencias_ejecutables . sentencia_return ';' END  (97)
	list_sentencias_ejecutables : list_sentencias_ejecutables . sentencia_ejecutable ';'  (99)

	ID  shift 119
	IF  shift 5
	END  shift 180
	OUTF  shift 7
	RET  shift 135
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 181
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	sentencia_return  goto 188


state 163
	sentencia_return : RET '(' . expresion ')'  (59)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	expresion  goto 189
	termino  goto 37
	factor  goto 38


state 164
	cuerpo_if : sentencia_return ';' .  (98)

	.  reduce 98


state 165
	fin_if : error .  (84)

	.  reduce 84


state 166
	bloque_if : IF '(' condicion THEN cuerpo_if ELSE . cuerpo_if fin_if  (95)

	ID  shift 119
	IF  shift 5
	BEGIN  shift 134
	OUTF  shift 7
	RET  shift 135
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 122
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 136
	sentencia_return  goto 137
	cuerpo_if  goto 190


state 167
	fin_if : END_IF .  (83)

	.  reduce 83


state 168
	bloque_if : IF '(' condicion THEN cuerpo_if fin_if .  (93)

	.  reduce 93


state 169
	bloque_if : IF '(' condicion ')' THEN error . fin_if  (91)

	error  shift 165
	END_IF  shift 167
	.  error

	fin_if  goto 191


state 170
	bloque_if : IF '(' condicion ')' THEN cuerpo_if . ELSE cuerpo_if fin_if  (88)
	bloque_if : IF '(' condicion ')' THEN cuerpo_if . fin_if  (89)
	bloque_if : IF '(' condicion ')' THEN cuerpo_if . ELSE error fin_if  (90)

	error  shift 165
	ELSE  shift 192
	END_IF  shift 167
	.  error

	fin_if  goto 193


state 171
	condicion : '(' bloque_list_expresiones ')' comparacion '(' . bloque_list_expresiones ')'  (109)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	expresion  goto 103
	termino  goto 37
	factor  goto 38
	bloque_list_expresiones  goto 194
	list_expresiones  goto 61


state 172
	factor : '-' ID '[' CONSTANTE ']' .  (72)

	.  reduce 72


state 173
	bloque_if : IF condicion ')' THEN cuerpo_if ELSE . cuerpo_if fin_if  (94)

	ID  shift 119
	IF  shift 5
	BEGIN  shift 134
	OUTF  shift 7
	RET  shift 135
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 122
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 136
	sentencia_return  goto 137
	cuerpo_if  goto 195


state 174
	bloque_if : IF condicion ')' THEN cuerpo_if fin_if .  (92)

	.  reduce 92


state 175
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' error .  (76)

	.  reduce 76


state 176
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' ID .  (75)

	.  reduce 75


state 177
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion . ';' up_down CONSTANTE  (25)
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion . ';' CONSTANTE  (26)
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion . up_down CONSTANTE  (28)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion . ';' up_down CONSTANTE ';' '(' condicion ')'  (29)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion . ';' CONSTANTE ';' '(' condicion ')'  (30)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion . up_down CONSTANTE ';' '(' condicion ')'  (32)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion . ';' up_down CONSTANTE '(' condicion ')'  (33)

	UP  shift 196
	DOWN  shift 197
	';'  shift 198
	.  error

	up_down  goto 199


state 178
	encabezado_for1 : ID ASIGNACION CONSTANTE condicion ';' . up_down CONSTANTE  (27)
	encabezado_for2 : ID ASIGNACION CONSTANTE condicion ';' . up_down CONSTANTE ';' '(' condicion ')'  (31)

	UP  shift 196
	DOWN  shift 197
	.  error

	up_down  goto 200


state 179
	list_sentencias_ejecutables : sentencia_ejecutable ';' .  (100)

	.  reduce 100


state 180
	bloque_sentencias_ejecutables : BEGIN list_sentencias_ejecutables END .  (87)

	.  reduce 87


state 181
	list_sentencias_ejecutables : list_sentencias_ejecutables sentencia_ejecutable . ';'  (99)

	';'  shift 201
	.  error


state 182
	declaracion_funcion : tipo FUN ID '(' ')' BEGIN . cuerpo_funcion END  (50)
	declaracion_tipo : .  (74)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 135
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	error  reduce 74
	';'  reduce 74

	list_sentencias  goto 202
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	cuerpo_funcion  goto 203
	sentencia_return  goto 204


state 183
	declaracion_funcion : tipo FUN ID '(' parametro ')' . BEGIN $$1 cuerpo_funcion $$2 END  (47)

	BEGIN  shift 205
	.  error


state 184
	declaracion_funcion : tipo FUN ID '(' bloque_list_parametro ')' . BEGIN cuerpo_funcion END  (48)

	BEGIN  shift 206
	.  error


state 185
	bloque_list_parametro : list_parametro ',' . parametro  (53)
	list_parametro : list_parametro ',' . parametro  (55)

	ID  shift 126
	ULONGINT  shift 9
	SINGLE  shift 10
	.  error

	tipo  goto 127
	tipo_base  goto 24
	parametro  goto 207


state 186
	declaracion_funcion : tipo FUN '(' parametro ')' BEGIN . cuerpo_funcion END  (49)
	declaracion_tipo : .  (74)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 135
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	error  reduce 74
	';'  reduce 74

	list_sentencias  goto 202
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	cuerpo_funcion  goto 208
	sentencia_return  goto 204


state 187
	invocacion_funcion : ID '(' tipo_base '(' expresion ')' ')' .  (82)

	.  reduce 82


state 188
	cuerpo_if : BEGIN list_sentencias_ejecutables sentencia_return . ';' END  (97)

	';'  shift 209
	.  error


state 189
	sentencia_return : RET '(' expresion . ')'  (59)
	expresion : expresion . '+' termino  (60)
	expresion : expresion . '-' termino  (61)

	')'  shift 210
	'+'  shift 75
	'-'  shift 76
	.  error


state 190
	bloque_if : IF '(' condicion THEN cuerpo_if ELSE cuerpo_if . fin_if  (95)

	error  shift 165
	END_IF  shift 167
	.  error

	fin_if  goto 211


state 191
	bloque_if : IF '(' condicion ')' THEN error fin_if .  (91)

	.  reduce 91


state 192
	bloque_if : IF '(' condicion ')' THEN cuerpo_if ELSE . cuerpo_if fin_if  (88)
	bloque_if : IF '(' condicion ')' THEN cuerpo_if ELSE . error fin_if  (90)

	error  shift 212
	ID  shift 119
	IF  shift 5
	BEGIN  shift 134
	OUTF  shift 7
	RET  shift 135
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 122
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 136
	sentencia_return  goto 137
	cuerpo_if  goto 213


state 193
	bloque_if : IF '(' condicion ')' THEN cuerpo_if fin_if .  (89)

	.  reduce 89


state 194
	condicion : '(' bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones . ')'  (109)

	')'  shift 214
	.  error


state 195
	bloque_if : IF condicion ')' THEN cuerpo_if ELSE cuerpo_if . fin_if  (94)

	error  shift 165
	END_IF  shift 167
	.  error

	fin_if  goto 215


state 196
	up_down : UP .  (34)

	.  reduce 34


state 197
	up_down : DOWN .  (35)

	.  reduce 35


state 198
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion ';' . up_down CONSTANTE  (25)
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion ';' . CONSTANTE  (26)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' . up_down CONSTANTE ';' '(' condicion ')'  (29)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' . CONSTANTE ';' '(' condicion ')'  (30)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' . up_down CONSTANTE '(' condicion ')'  (33)

	CONSTANTE  shift 216
	UP  shift 196
	DOWN  shift 197
	.  error

	up_down  goto 217


state 199
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion up_down . CONSTANTE  (28)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion up_down . CONSTANTE ';' '(' condicion ')'  (32)

	CONSTANTE  shift 218
	.  error


state 200
	encabezado_for1 : ID ASIGNACION CONSTANTE condicion ';' up_down . CONSTANTE  (27)
	encabezado_for2 : ID ASIGNACION CONSTANTE condicion ';' up_down . CONSTANTE ';' '(' condicion ')'  (31)

	CONSTANTE  shift 219
	.  error


state 201
	list_sentencias_ejecutables : list_sentencias_ejecutables sentencia_ejecutable ';' .  (99)

	.  reduce 99


state 202
	list_sentencias : list_sentencias . sentencia ';'  (6)
	cuerpo_funcion : list_sentencias . sentencia_return ';'  (56)
	cuerpo_funcion : list_sentencias .  (57)
	declaracion_tipo : .  (74)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 135
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	END  reduce 57
	';'  reduce 74

	sentencia  goto 49
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	sentencia_return  goto 220


state 203
	declaracion_funcion : tipo FUN ID '(' ')' BEGIN cuerpo_funcion . END  (50)

	END  shift 221
	.  error


state 204
	cuerpo_funcion : sentencia_return . ';'  (58)

	';'  shift 222
	.  error


state 205
	declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN . $$1 cuerpo_funcion $$2 END  (47)
	$$1 : .  (45)

	.  reduce 45

	$$1  goto 223


state 206
	declaracion_funcion : tipo FUN ID '(' bloque_list_parametro ')' BEGIN . cuerpo_funcion END  (48)
	declaracion_tipo : .  (74)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 135
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	error  reduce 74
	';'  reduce 74

	list_sentencias  goto 202
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	cuerpo_funcion  goto 224
	sentencia_return  goto 204


state 207
	bloque_list_parametro : list_parametro ',' parametro .  (53)
	list_parametro : list_parametro ',' parametro .  (55)

	')'  reduce 53
	','  reduce 55


state 208
	declaracion_funcion : tipo FUN '(' parametro ')' BEGIN cuerpo_funcion . END  (49)

	END  shift 225
	.  error


state 209
	cuerpo_if : BEGIN list_sentencias_ejecutables sentencia_return ';' . END  (97)

	END  shift 226
	.  error


state 210
	sentencia_return : RET '(' expresion ')' .  (59)

	.  reduce 59


state 211
	bloque_if : IF '(' condicion THEN cuerpo_if ELSE cuerpo_if fin_if .  (95)

	.  reduce 95


state 212
	bloque_if : IF '(' condicion ')' THEN cuerpo_if ELSE error . fin_if  (90)

	error  shift 165
	END_IF  shift 167
	.  error

	fin_if  goto 227


state 213
	bloque_if : IF '(' condicion ')' THEN cuerpo_if ELSE cuerpo_if . fin_if  (88)

	error  shift 165
	END_IF  shift 167
	.  error

	fin_if  goto 228


state 214
	condicion : '(' bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones ')' .  (109)

	.  reduce 109


state 215
	bloque_if : IF condicion ')' THEN cuerpo_if ELSE cuerpo_if fin_if .  (94)

	.  reduce 94


state 216
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE .  (26)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE . ';' '(' condicion ')'  (30)

	';'  shift 229
	ID  reduce 26
	IF  reduce 26
	BEGIN  reduce 26
	OUTF  reduce 26
	FOR  reduce 26
	')'  reduce 26


state 217
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down . CONSTANTE  (25)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down . CONSTANTE ';' '(' condicion ')'  (29)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down . CONSTANTE '(' condicion ')'  (33)

	CONSTANTE  shift 230
	.  error


state 218
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE .  (28)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE . ';' '(' condicion ')'  (32)

	';'  shift 231
	ID  reduce 28
	IF  reduce 28
	BEGIN  reduce 28
	OUTF  reduce 28
	FOR  reduce 28
	')'  reduce 28


state 219
	encabezado_for1 : ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE .  (27)
	encabezado_for2 : ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE . ';' '(' condicion ')'  (31)

	';'  shift 232
	ID  reduce 27
	IF  reduce 27
	BEGIN  reduce 27
	OUTF  reduce 27
	FOR  reduce 27
	')'  reduce 27


state 220
	cuerpo_funcion : list_sentencias sentencia_return . ';'  (56)

	';'  shift 233
	.  error


state 221
	declaracion_funcion : tipo FUN ID '(' ')' BEGIN cuerpo_funcion END .  (50)

	.  reduce 50


state 222
	cuerpo_funcion : sentencia_return ';' .  (58)

	.  reduce 58


state 223
	declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN $$1 . cuerpo_funcion $$2 END  (47)
	declaracion_tipo : .  (74)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 135
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	error  reduce 74
	';'  reduce 74

	list_sentencias  goto 202
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	cuerpo_funcion  goto 234
	sentencia_return  goto 204


state 224
	declaracion_funcion : tipo FUN ID '(' bloque_list_parametro ')' BEGIN cuerpo_funcion . END  (48)

	END  shift 235
	.  error


state 225
	declaracion_funcion : tipo FUN '(' parametro ')' BEGIN cuerpo_funcion END .  (49)

	.  reduce 49


state 226
	cuerpo_if : BEGIN list_sentencias_ejecutables sentencia_return ';' END .  (97)

	.  reduce 97


state 227
	bloque_if : IF '(' condicion ')' THEN cuerpo_if ELSE error fin_if .  (90)

	.  reduce 90


state 228
	bloque_if : IF '(' condicion ')' THEN cuerpo_if ELSE cuerpo_if fin_if .  (88)

	.  reduce 88


state 229
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE ';' . '(' condicion ')'  (30)

	'('  shift 236
	.  error


state 230
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE .  (25)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE . ';' '(' condicion ')'  (29)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE . '(' condicion ')'  (33)

	';'  shift 237
	'('  shift 238
	ID  reduce 25
	IF  reduce 25
	BEGIN  reduce 25
	OUTF  reduce 25
	FOR  reduce 25
	')'  reduce 25


state 231
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE ';' . '(' condicion ')'  (32)

	'('  shift 239
	.  error


state 232
	encabezado_for2 : ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE ';' . '(' condicion ')'  (31)

	'('  shift 240
	.  error


state 233
	cuerpo_funcion : list_sentencias sentencia_return ';' .  (56)

	.  reduce 56


state 234
	declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN $$1 cuerpo_funcion . $$2 END  (47)
	$$2 : .  (46)

	.  reduce 46

	$$2  goto 241


state 235
	declaracion_funcion : tipo FUN ID '(' bloque_list_parametro ')' BEGIN cuerpo_funcion END .  (48)

	.  reduce 48


state 236
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE ';' '(' . condicion ')'  (30)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'('  shift 64
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	condicion  goto 242
	expresion  goto 36
	termino  goto 37
	factor  goto 38


state 237
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE ';' . '(' condicion ')'  (29)

	'('  shift 243
	.  error


state 238
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE '(' . condicion ')'  (33)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'('  shift 64
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	condicion  goto 244
	expresion  goto 36
	termino  goto 37
	factor  goto 38


state 239
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE ';' '(' . condicion ')'  (32)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'('  shift 64
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	condicion  goto 245
	expresion  goto 36
	termino  goto 37
	factor  goto 38


state 240
	encabezado_for2 : ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE ';' '(' . condicion ')'  (31)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'('  shift 64
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	condicion  goto 246
	expresion  goto 36
	termino  goto 37
	factor  goto 38


state 241
	declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN $$1 cuerpo_funcion $$2 . END  (47)

	END  shift 247
	.  error


state 242
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE ';' '(' condicion . ')'  (30)

	')'  shift 248
	.  error


state 243
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE ';' '(' . condicion ')'  (29)

	error  shift 29
	ID  shift 30
	CONSTANTE  shift 31
	'('  shift 64
	'-'  shift 33
	.  error

	invocacion_funcion  goto 34
	condicion  goto 249
	expresion  goto 36
	termino  goto 37
	factor  goto 38


state 244
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE '(' condicion . ')'  (33)

	')'  shift 250
	.  error


state 245
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE ';' '(' condicion . ')'  (32)

	')'  shift 251
	.  error


state 246
	encabezado_for2 : ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE ';' '(' condicion . ')'  (31)

	')'  shift 252
	.  error


state 247
	declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN $$1 cuerpo_funcion $$2 END .  (47)

	.  reduce 47


state 248
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE ';' '(' condicion ')' .  (30)

	.  reduce 30


state 249
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE ';' '(' condicion . ')'  (29)

	')'  shift 253
	.  error


state 250
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE '(' condicion ')' .  (33)

	.  reduce 33


state 251
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE ';' '(' condicion ')' .  (32)

	.  reduce 32


state 252
	encabezado_for2 : ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE ';' '(' condicion ')' .  (31)

	.  reduce 31


state 253
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE ';' '(' condicion ')' .  (29)

	.  reduce 29


39 terminals, 38 nonterminals
116 grammar rules, 254 states
