   0  $accept : programa $end

   1  programa : ID BEGIN list_sentencias END
   2           | BEGIN list_sentencias END
   3           | ID BEGIN list_sentencias
   4           | ID list_sentencias END
   5           | ID list_sentencias

   6  list_sentencias : list_sentencias sentencia
   7                  | sentencia

   8  sentencia : sentencia_declarativa ';'
   9            | sentencia_ejecutable ';'
  10            | sentencia_ejecutable
  11            | sentencia_declarativa

  12  sentencia_declarativa : tipo list_variables
  13                        | declaracion_funcion
  14                        | declaracion_tipo

  15  sentencia_ejecutable : asignacion
  16                       | invocacion_funcion
  17                       | bloque_if
  18                       | salida_mensaje
  19                       | sentencia_control

  20  sentencia_control : FOR '(' encabezado_for ')' bloque_sentencias_ejecutables
  21                    | FOR '(' encabezado_for ')' error
  22                    | FOR encabezado_for ')' bloque_sentencias_ejecutables
  23                    | FOR '(' encabezado_for bloque_sentencias_ejecutables

  24  encabezado_for : encabezado_for1
  25                 | encabezado_for2

  26  encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE
  27                  | ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE
  28                  | ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE
  29                  | ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE
  30                  | ID ASIGNACION CONSTANTE ';' condicion ';' up_down

  31  encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE ';' '(' condicion ')'
  32                  | ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE ';' '(' condicion ')'
  33                  | ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE ';' '(' condicion ')'
  34                  | ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE ';' '(' condicion ')'
  35                  | ID ASIGNACION CONSTANTE ';' condicion ';' up_down '(' condicion ')'

  36  up_down : UP
  37          | DOWN

  38  asignacion : ID ASIGNACION expresion
  39             | ID '[' CONSTANTE ']' ASIGNACION expresion
  40             | ID ASIGNACION error

  41  tipo : tipo_base
  42       | ID

  43  tipo_base : ULONGINT
  44            | SINGLE

  45  list_variables : list_variables ',' ID
  46                 | list_variables ID
  47                 | ID

  48  encabezado_funcion : tipo FUN ID
  49                     | tipo FUN

  50  $$1 :

  51  declaracion_funcion : encabezado_funcion '(' parametro ')' BEGIN cuerpo_funcion $$1 END
  52                      | encabezado_funcion '(' bloque_list_parametro ')' BEGIN cuerpo_funcion END
  53                      | encabezado_funcion '(' ')' BEGIN cuerpo_funcion END

  54  parametro : tipo ID
  55            | ID

  56  bloque_list_parametro : list_parametro ',' parametro

  57  list_parametro : parametro
  58                 | list_parametro ',' parametro

  59  cuerpo_funcion : list_sentencias_funcion sentencia_return ';'
  60                 | list_sentencias_funcion
  61                 | sentencia_return ';'
  62                 |

  63  list_sentencias_funcion : list_sentencias_funcion sentencia
  64                          | sentencia

  65  sentencia_return : RET '(' expresion ')'

  66  expresion : expresion '+' termino
  67            | expresion '-' termino
  68            | termino
  69            | expresion '+' error
  70            | expresion '-' error

  71  termino : termino '*' factor
  72          | termino '/' factor
  73          | factor
  74          | termino '*' error
  75          | termino '/' error

  76  factor : ID
  77         | CONSTANTE
  78         | invocacion_funcion
  79         | ID '[' CONSTANTE ']'
  80         | '-' ID
  81         | '-' CONSTANTE
  82         | '-' ID '[' CONSTANTE ']'

  83  declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' ID
  84                   | TYPEDEF TRIPLE '<' tipo_base '>' error
  85                   | TYPEDEF TRIPLE tipo_base '>' ID
  86                   | TYPEDEF TRIPLE '<' tipo_base ID
  87                   | TYPEDEF TRIPLE tipo_base ID
  88                   | TYPEDEF '<' tipo_base '>' ID

  89  invocacion_funcion : ID '(' expresion ')'
  90                     | ID '(' bloque_list_expresiones ')'
  91                     | ID '(' ')'
  92                     | ID '(' tipo_base '(' expresion ')' ')'

  93  fin_if : END_IF
  94         | error

  95  bloque_sentencias_ejecutables : sentencia_ejecutable ';'
  96                                | BEGIN list_sentencias_ejecutables END
  97                                | BEGIN error

  98  encabezado_if : IF

  99  bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_unico fin_if
 100            | encabezado_if '(' condicion ')' THEN cuerpo_if_bloque fin_if
 101            | encabezado_if '(' condicion ')' THEN cuerpo_if_unico ELSE cuerpo_if_unico fin_if
 102            | encabezado_if '(' condicion ')' THEN cuerpo_if_bloque ELSE cuerpo_if_bloque fin_if
 103            | encabezado_if '(' condicion ')' THEN cuerpo_if_unico ELSE cuerpo_if_bloque fin_if
 104            | encabezado_if '(' condicion ')' THEN cuerpo_if_bloque ELSE cuerpo_if_unico fin_if

 105  cuerpo_if_unico : sentencia_ejecutable ';'
 106                  | sentencia_return ';'

 107  cuerpo_if_bloque : BEGIN list_sentencias_ejecutables END
 108                   | BEGIN error
 109                   | list_sentencias_ejecutables END
 110                   | error

 111  list_sentencias_ejecutables : list_sentencias_ejecutables sentencia_ejecutable ';'
 112                              | sentencia_ejecutable ';'

 113  comparacion : MAYORIGUAL
 114              | MENORIGUAL
 115              | DISTINTO
 116              | '='
 117              | '>'
 118              | '<'

 119  condicion : expresion comparacion expresion
 120            | '(' bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones ')'
 121            | error

 122  bloque_list_expresiones : list_expresiones ',' expresion

 123  list_expresiones : list_expresiones ',' expresion
 124                   | expresion
 125                   | error

 126  salida_mensaje : OUTF '(' CADENA ')'
 127                 | OUTF '(' expresion ')'
 128                 | OUTF '(' ')'

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	BEGIN  shift 2
	.  error

	programa  goto 3


state 1
	programa : ID . BEGIN list_sentencias END  (1)
	programa : ID . BEGIN list_sentencias  (3)
	programa : ID . list_sentencias END  (4)
	programa : ID . list_sentencias  (5)

	ID  shift 4
	IF  shift 5
	BEGIN  shift 6
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	.  error

	list_sentencias  goto 12
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	encabezado_funcion  goto 25
	encabezado_if  goto 26


state 2
	programa : BEGIN . list_sentencias END  (2)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	.  error

	list_sentencias  goto 27
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	encabezado_funcion  goto 25
	encabezado_if  goto 26


state 3
	$accept : programa . $end  (0)

	$end  accept


state 4
	asignacion : ID . ASIGNACION expresion  (38)
	asignacion : ID . '[' CONSTANTE ']' ASIGNACION expresion  (39)
	asignacion : ID . ASIGNACION error  (40)
	tipo : ID .  (42)
	invocacion_funcion : ID . '(' expresion ')'  (89)
	invocacion_funcion : ID . '(' bloque_list_expresiones ')'  (90)
	invocacion_funcion : ID . '(' ')'  (91)
	invocacion_funcion : ID . '(' tipo_base '(' expresion ')' ')'  (92)

	ASIGNACION  shift 28
	'('  shift 29
	'['  shift 30
	ID  reduce 42
	FUN  reduce 42


state 5
	encabezado_if : IF .  (98)

	.  reduce 98


state 6
	programa : ID BEGIN . list_sentencias END  (1)
	programa : ID BEGIN . list_sentencias  (3)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	.  error

	list_sentencias  goto 31
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	encabezado_funcion  goto 25
	encabezado_if  goto 26


state 7
	salida_mensaje : OUTF . '(' CADENA ')'  (126)
	salida_mensaje : OUTF . '(' expresion ')'  (127)
	salida_mensaje : OUTF . '(' ')'  (128)

	'('  shift 32
	.  error


state 8
	declaracion_tipo : TYPEDEF . TRIPLE '<' tipo_base '>' ID  (83)
	declaracion_tipo : TYPEDEF . TRIPLE '<' tipo_base '>' error  (84)
	declaracion_tipo : TYPEDEF . TRIPLE tipo_base '>' ID  (85)
	declaracion_tipo : TYPEDEF . TRIPLE '<' tipo_base ID  (86)
	declaracion_tipo : TYPEDEF . TRIPLE tipo_base ID  (87)
	declaracion_tipo : TYPEDEF . '<' tipo_base '>' ID  (88)

	TRIPLE  shift 33
	'<'  shift 34
	.  error


state 9
	tipo_base : ULONGINT .  (43)

	.  reduce 43


state 10
	tipo_base : SINGLE .  (44)

	.  reduce 44


state 11
	sentencia_control : FOR . '(' encabezado_for ')' bloque_sentencias_ejecutables  (20)
	sentencia_control : FOR . '(' encabezado_for ')' error  (21)
	sentencia_control : FOR . encabezado_for ')' bloque_sentencias_ejecutables  (22)
	sentencia_control : FOR . '(' encabezado_for bloque_sentencias_ejecutables  (23)

	ID  shift 35
	'('  shift 36
	.  error

	encabezado_for  goto 37
	encabezado_for1  goto 38
	encabezado_for2  goto 39


state 12
	programa : ID list_sentencias . END  (4)
	programa : ID list_sentencias .  (5)
	list_sentencias : list_sentencias . sentencia  (6)

	ID  shift 4
	IF  shift 5
	END  shift 40
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	$end  reduce 5

	sentencia  goto 41
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	encabezado_funcion  goto 25
	encabezado_if  goto 26


state 13
	list_sentencias : sentencia .  (7)

	.  reduce 7


state 14
	sentencia : sentencia_declarativa . ';'  (8)
	sentencia : sentencia_declarativa .  (11)

	';'  shift 42
	$end  reduce 11
	ID  reduce 11
	IF  reduce 11
	END  reduce 11
	OUTF  reduce 11
	TYPEDEF  reduce 11
	RET  reduce 11
	ULONGINT  reduce 11
	SINGLE  reduce 11
	FOR  reduce 11


state 15
	sentencia : sentencia_ejecutable . ';'  (9)
	sentencia : sentencia_ejecutable .  (10)

	';'  shift 43
	$end  reduce 10
	ID  reduce 10
	IF  reduce 10
	END  reduce 10
	OUTF  reduce 10
	TYPEDEF  reduce 10
	RET  reduce 10
	ULONGINT  reduce 10
	SINGLE  reduce 10
	FOR  reduce 10


state 16
	sentencia_declarativa : tipo . list_variables  (12)
	encabezado_funcion : tipo . FUN ID  (48)
	encabezado_funcion : tipo . FUN  (49)

	ID  shift 44
	FUN  shift 45
	.  error

	list_variables  goto 46


state 17
	sentencia_declarativa : declaracion_funcion .  (13)

	.  reduce 13


state 18
	sentencia_declarativa : declaracion_tipo .  (14)

	.  reduce 14


state 19
	sentencia_ejecutable : asignacion .  (15)

	.  reduce 15


state 20
	sentencia_ejecutable : invocacion_funcion .  (16)

	.  reduce 16


state 21
	sentencia_ejecutable : bloque_if .  (17)

	.  reduce 17


state 22
	sentencia_ejecutable : salida_mensaje .  (18)

	.  reduce 18


state 23
	sentencia_ejecutable : sentencia_control .  (19)

	.  reduce 19


state 24
	tipo : tipo_base .  (41)

	.  reduce 41


state 25
	declaracion_funcion : encabezado_funcion . '(' parametro ')' BEGIN cuerpo_funcion $$1 END  (51)
	declaracion_funcion : encabezado_funcion . '(' bloque_list_parametro ')' BEGIN cuerpo_funcion END  (52)
	declaracion_funcion : encabezado_funcion . '(' ')' BEGIN cuerpo_funcion END  (53)

	'('  shift 47
	.  error


state 26
	bloque_if : encabezado_if . '(' condicion ')' THEN cuerpo_if_unico fin_if  (99)
	bloque_if : encabezado_if . '(' condicion ')' THEN cuerpo_if_bloque fin_if  (100)
	bloque_if : encabezado_if . '(' condicion ')' THEN cuerpo_if_unico ELSE cuerpo_if_unico fin_if  (101)
	bloque_if : encabezado_if . '(' condicion ')' THEN cuerpo_if_bloque ELSE cuerpo_if_bloque fin_if  (102)
	bloque_if : encabezado_if . '(' condicion ')' THEN cuerpo_if_unico ELSE cuerpo_if_bloque fin_if  (103)
	bloque_if : encabezado_if . '(' condicion ')' THEN cuerpo_if_bloque ELSE cuerpo_if_unico fin_if  (104)

	'('  shift 48
	.  error


state 27
	programa : BEGIN list_sentencias . END  (2)
	list_sentencias : list_sentencias . sentencia  (6)

	ID  shift 4
	IF  shift 5
	END  shift 49
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	.  error

	sentencia  goto 41
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	encabezado_funcion  goto 25
	encabezado_if  goto 26


state 28
	asignacion : ID ASIGNACION . expresion  (38)
	asignacion : ID ASIGNACION . error  (40)

	error  shift 50
	ID  shift 51
	CONSTANTE  shift 52
	'-'  shift 53
	.  error

	invocacion_funcion  goto 54
	expresion  goto 55
	termino  goto 56
	factor  goto 57


state 29
	invocacion_funcion : ID '(' . expresion ')'  (89)
	invocacion_funcion : ID '(' . bloque_list_expresiones ')'  (90)
	invocacion_funcion : ID '(' . ')'  (91)
	invocacion_funcion : ID '(' . tipo_base '(' expresion ')' ')'  (92)

	error  shift 58
	ID  shift 51
	CONSTANTE  shift 52
	ULONGINT  shift 9
	SINGLE  shift 10
	')'  shift 59
	'-'  shift 53
	.  error

	invocacion_funcion  goto 54
	expresion  goto 60
	tipo_base  goto 61
	termino  goto 56
	factor  goto 57
	bloque_list_expresiones  goto 62
	list_expresiones  goto 63


state 30
	asignacion : ID '[' . CONSTANTE ']' ASIGNACION expresion  (39)

	CONSTANTE  shift 64
	.  error


state 31
	programa : ID BEGIN list_sentencias . END  (1)
	programa : ID BEGIN list_sentencias .  (3)
	list_sentencias : list_sentencias . sentencia  (6)

	ID  shift 4
	IF  shift 5
	END  shift 65
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	$end  reduce 3

	sentencia  goto 41
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	encabezado_funcion  goto 25
	encabezado_if  goto 26


state 32
	salida_mensaje : OUTF '(' . CADENA ')'  (126)
	salida_mensaje : OUTF '(' . expresion ')'  (127)
	salida_mensaje : OUTF '(' . ')'  (128)

	ID  shift 51
	CONSTANTE  shift 52
	CADENA  shift 66
	')'  shift 67
	'-'  shift 53
	.  error

	invocacion_funcion  goto 54
	expresion  goto 68
	termino  goto 56
	factor  goto 57


state 33
	declaracion_tipo : TYPEDEF TRIPLE . '<' tipo_base '>' ID  (83)
	declaracion_tipo : TYPEDEF TRIPLE . '<' tipo_base '>' error  (84)
	declaracion_tipo : TYPEDEF TRIPLE . tipo_base '>' ID  (85)
	declaracion_tipo : TYPEDEF TRIPLE . '<' tipo_base ID  (86)
	declaracion_tipo : TYPEDEF TRIPLE . tipo_base ID  (87)

	ULONGINT  shift 9
	SINGLE  shift 10
	'<'  shift 69
	.  error

	tipo_base  goto 70


state 34
	declaracion_tipo : TYPEDEF '<' . tipo_base '>' ID  (88)

	ULONGINT  shift 9
	SINGLE  shift 10
	.  error

	tipo_base  goto 71


state 35
	encabezado_for1 : ID . ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE  (26)
	encabezado_for1 : ID . ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE  (27)
	encabezado_for1 : ID . ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE  (28)
	encabezado_for1 : ID . ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE  (29)
	encabezado_for1 : ID . ASIGNACION CONSTANTE ';' condicion ';' up_down  (30)
	encabezado_for2 : ID . ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (31)
	encabezado_for2 : ID . ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE ';' '(' condicion ')'  (32)
	encabezado_for2 : ID . ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (33)
	encabezado_for2 : ID . ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE ';' '(' condicion ')'  (34)
	encabezado_for2 : ID . ASIGNACION CONSTANTE ';' condicion ';' up_down '(' condicion ')'  (35)

	ASIGNACION  shift 72
	.  error


state 36
	sentencia_control : FOR '(' . encabezado_for ')' bloque_sentencias_ejecutables  (20)
	sentencia_control : FOR '(' . encabezado_for ')' error  (21)
	sentencia_control : FOR '(' . encabezado_for bloque_sentencias_ejecutables  (23)

	ID  shift 35
	.  error

	encabezado_for  goto 73
	encabezado_for1  goto 38
	encabezado_for2  goto 39


state 37
	sentencia_control : FOR encabezado_for . ')' bloque_sentencias_ejecutables  (22)

	')'  shift 74
	.  error


state 38
	encabezado_for : encabezado_for1 .  (24)

	.  reduce 24


state 39
	encabezado_for : encabezado_for2 .  (25)

	.  reduce 25


state 40
	programa : ID list_sentencias END .  (4)

	.  reduce 4


state 41
	list_sentencias : list_sentencias sentencia .  (6)

	.  reduce 6


state 42
	sentencia : sentencia_declarativa ';' .  (8)

	.  reduce 8


state 43
	sentencia : sentencia_ejecutable ';' .  (9)

	.  reduce 9


state 44
	list_variables : ID .  (47)

	.  reduce 47


state 45
	encabezado_funcion : tipo FUN . ID  (48)
	encabezado_funcion : tipo FUN .  (49)

	ID  shift 75
	'('  reduce 49


46: shift/reduce conflict (shift 76, reduce 12) on ID
state 46
	sentencia_declarativa : tipo list_variables .  (12)
	list_variables : list_variables . ',' ID  (45)
	list_variables : list_variables . ID  (46)

	ID  shift 76
	','  shift 77
	$end  reduce 12
	IF  reduce 12
	END  reduce 12
	OUTF  reduce 12
	TYPEDEF  reduce 12
	RET  reduce 12
	ULONGINT  reduce 12
	SINGLE  reduce 12
	FOR  reduce 12
	';'  reduce 12


state 47
	declaracion_funcion : encabezado_funcion '(' . parametro ')' BEGIN cuerpo_funcion $$1 END  (51)
	declaracion_funcion : encabezado_funcion '(' . bloque_list_parametro ')' BEGIN cuerpo_funcion END  (52)
	declaracion_funcion : encabezado_funcion '(' . ')' BEGIN cuerpo_funcion END  (53)

	ID  shift 78
	ULONGINT  shift 9
	SINGLE  shift 10
	')'  shift 79
	.  error

	tipo  goto 80
	tipo_base  goto 24
	parametro  goto 81
	bloque_list_parametro  goto 82
	list_parametro  goto 83


state 48
	bloque_if : encabezado_if '(' . condicion ')' THEN cuerpo_if_unico fin_if  (99)
	bloque_if : encabezado_if '(' . condicion ')' THEN cuerpo_if_bloque fin_if  (100)
	bloque_if : encabezado_if '(' . condicion ')' THEN cuerpo_if_unico ELSE cuerpo_if_unico fin_if  (101)
	bloque_if : encabezado_if '(' . condicion ')' THEN cuerpo_if_bloque ELSE cuerpo_if_bloque fin_if  (102)
	bloque_if : encabezado_if '(' . condicion ')' THEN cuerpo_if_unico ELSE cuerpo_if_bloque fin_if  (103)
	bloque_if : encabezado_if '(' . condicion ')' THEN cuerpo_if_bloque ELSE cuerpo_if_unico fin_if  (104)

	error  shift 84
	ID  shift 51
	CONSTANTE  shift 52
	'('  shift 85
	'-'  shift 53
	.  error

	invocacion_funcion  goto 54
	condicion  goto 86
	expresion  goto 87
	termino  goto 56
	factor  goto 57


state 49
	programa : BEGIN list_sentencias END .  (2)

	.  reduce 2


state 50
	asignacion : ID ASIGNACION error .  (40)

	.  reduce 40


state 51
	factor : ID .  (76)
	factor : ID . '[' CONSTANTE ']'  (79)
	invocacion_funcion : ID . '(' expresion ')'  (89)
	invocacion_funcion : ID . '(' bloque_list_expresiones ')'  (90)
	invocacion_funcion : ID . '(' ')'  (91)
	invocacion_funcion : ID . '(' tipo_base '(' expresion ')' ')'  (92)

	'('  shift 29
	'['  shift 88
	$end  reduce 76
	ID  reduce 76
	MAYORIGUAL  reduce 76
	MENORIGUAL  reduce 76
	DISTINTO  reduce 76
	IF  reduce 76
	END  reduce 76
	OUTF  reduce 76
	TYPEDEF  reduce 76
	RET  reduce 76
	ULONGINT  reduce 76
	SINGLE  reduce 76
	FOR  reduce 76
	UP  reduce 76
	DOWN  reduce 76
	','  reduce 76
	';'  reduce 76
	')'  reduce 76
	'+'  reduce 76
	'-'  reduce 76
	'*'  reduce 76
	'/'  reduce 76
	'<'  reduce 76
	'>'  reduce 76
	'='  reduce 76


state 52
	factor : CONSTANTE .  (77)

	.  reduce 77


state 53
	factor : '-' . ID  (80)
	factor : '-' . CONSTANTE  (81)
	factor : '-' . ID '[' CONSTANTE ']'  (82)

	ID  shift 89
	CONSTANTE  shift 90
	.  error


state 54
	factor : invocacion_funcion .  (78)

	.  reduce 78


state 55
	asignacion : ID ASIGNACION expresion .  (38)
	expresion : expresion . '+' termino  (66)
	expresion : expresion . '-' termino  (67)
	expresion : expresion . '+' error  (69)
	expresion : expresion . '-' error  (70)

	'+'  shift 91
	'-'  shift 92
	$end  reduce 38
	ID  reduce 38
	IF  reduce 38
	END  reduce 38
	OUTF  reduce 38
	TYPEDEF  reduce 38
	RET  reduce 38
	ULONGINT  reduce 38
	SINGLE  reduce 38
	FOR  reduce 38
	';'  reduce 38


state 56
	expresion : termino .  (68)
	termino : termino . '*' factor  (71)
	termino : termino . '/' factor  (72)
	termino : termino . '*' error  (74)
	termino : termino . '/' error  (75)

	'*'  shift 93
	'/'  shift 94
	$end  reduce 68
	ID  reduce 68
	MAYORIGUAL  reduce 68
	MENORIGUAL  reduce 68
	DISTINTO  reduce 68
	IF  reduce 68
	END  reduce 68
	OUTF  reduce 68
	TYPEDEF  reduce 68
	RET  reduce 68
	ULONGINT  reduce 68
	SINGLE  reduce 68
	FOR  reduce 68
	UP  reduce 68
	DOWN  reduce 68
	','  reduce 68
	';'  reduce 68
	')'  reduce 68
	'+'  reduce 68
	'-'  reduce 68
	'<'  reduce 68
	'>'  reduce 68
	'='  reduce 68


state 57
	termino : factor .  (73)

	.  reduce 73


state 58
	list_expresiones : error .  (125)

	.  reduce 125


state 59
	invocacion_funcion : ID '(' ')' .  (91)

	.  reduce 91


state 60
	expresion : expresion . '+' termino  (66)
	expresion : expresion . '-' termino  (67)
	expresion : expresion . '+' error  (69)
	expresion : expresion . '-' error  (70)
	invocacion_funcion : ID '(' expresion . ')'  (89)
	list_expresiones : expresion .  (124)

	')'  shift 95
	'+'  shift 91
	'-'  shift 92
	','  reduce 124


state 61
	invocacion_funcion : ID '(' tipo_base . '(' expresion ')' ')'  (92)

	'('  shift 96
	.  error


state 62
	invocacion_funcion : ID '(' bloque_list_expresiones . ')'  (90)

	')'  shift 97
	.  error


state 63
	bloque_list_expresiones : list_expresiones . ',' expresion  (122)
	list_expresiones : list_expresiones . ',' expresion  (123)

	','  shift 98
	.  error


state 64
	asignacion : ID '[' CONSTANTE . ']' ASIGNACION expresion  (39)

	']'  shift 99
	.  error


state 65
	programa : ID BEGIN list_sentencias END .  (1)

	.  reduce 1


state 66
	salida_mensaje : OUTF '(' CADENA . ')'  (126)

	')'  shift 100
	.  error


state 67
	salida_mensaje : OUTF '(' ')' .  (128)

	.  reduce 128


state 68
	expresion : expresion . '+' termino  (66)
	expresion : expresion . '-' termino  (67)
	expresion : expresion . '+' error  (69)
	expresion : expresion . '-' error  (70)
	salida_mensaje : OUTF '(' expresion . ')'  (127)

	')'  shift 101
	'+'  shift 91
	'-'  shift 92
	.  error


state 69
	declaracion_tipo : TYPEDEF TRIPLE '<' . tipo_base '>' ID  (83)
	declaracion_tipo : TYPEDEF TRIPLE '<' . tipo_base '>' error  (84)
	declaracion_tipo : TYPEDEF TRIPLE '<' . tipo_base ID  (86)

	ULONGINT  shift 9
	SINGLE  shift 10
	.  error

	tipo_base  goto 102


state 70
	declaracion_tipo : TYPEDEF TRIPLE tipo_base . '>' ID  (85)
	declaracion_tipo : TYPEDEF TRIPLE tipo_base . ID  (87)

	ID  shift 103
	'>'  shift 104
	.  error


state 71
	declaracion_tipo : TYPEDEF '<' tipo_base . '>' ID  (88)

	'>'  shift 105
	.  error


state 72
	encabezado_for1 : ID ASIGNACION . CONSTANTE ';' condicion ';' up_down CONSTANTE  (26)
	encabezado_for1 : ID ASIGNACION . CONSTANTE ';' condicion ';' CONSTANTE  (27)
	encabezado_for1 : ID ASIGNACION . CONSTANTE condicion ';' up_down CONSTANTE  (28)
	encabezado_for1 : ID ASIGNACION . CONSTANTE ';' condicion up_down CONSTANTE  (29)
	encabezado_for1 : ID ASIGNACION . CONSTANTE ';' condicion ';' up_down  (30)
	encabezado_for2 : ID ASIGNACION . CONSTANTE ';' condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (31)
	encabezado_for2 : ID ASIGNACION . CONSTANTE ';' condicion ';' CONSTANTE ';' '(' condicion ')'  (32)
	encabezado_for2 : ID ASIGNACION . CONSTANTE condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (33)
	encabezado_for2 : ID ASIGNACION . CONSTANTE ';' condicion up_down CONSTANTE ';' '(' condicion ')'  (34)
	encabezado_for2 : ID ASIGNACION . CONSTANTE ';' condicion ';' up_down '(' condicion ')'  (35)

	CONSTANTE  shift 106
	.  error


state 73
	sentencia_control : FOR '(' encabezado_for . ')' bloque_sentencias_ejecutables  (20)
	sentencia_control : FOR '(' encabezado_for . ')' error  (21)
	sentencia_control : FOR '(' encabezado_for . bloque_sentencias_ejecutables  (23)

	ID  shift 107
	IF  shift 5
	BEGIN  shift 108
	OUTF  shift 7
	FOR  shift 11
	')'  shift 109
	.  error

	sentencia_ejecutable  goto 110
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 111
	encabezado_if  goto 26


state 74
	sentencia_control : FOR encabezado_for ')' . bloque_sentencias_ejecutables  (22)

	ID  shift 107
	IF  shift 5
	BEGIN  shift 108
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 110
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 112
	encabezado_if  goto 26


state 75
	encabezado_funcion : tipo FUN ID .  (48)

	.  reduce 48


state 76
	list_variables : list_variables ID .  (46)

	.  reduce 46


state 77
	list_variables : list_variables ',' . ID  (45)

	ID  shift 113
	.  error


state 78
	tipo : ID .  (42)
	parametro : ID .  (55)

	ID  reduce 42
	','  reduce 55
	')'  reduce 55


state 79
	declaracion_funcion : encabezado_funcion '(' ')' . BEGIN cuerpo_funcion END  (53)

	BEGIN  shift 114
	.  error


state 80
	parametro : tipo . ID  (54)

	ID  shift 115
	.  error


state 81
	declaracion_funcion : encabezado_funcion '(' parametro . ')' BEGIN cuerpo_funcion $$1 END  (51)
	list_parametro : parametro .  (57)

	')'  shift 116
	','  reduce 57


state 82
	declaracion_funcion : encabezado_funcion '(' bloque_list_parametro . ')' BEGIN cuerpo_funcion END  (52)

	')'  shift 117
	.  error


state 83
	bloque_list_parametro : list_parametro . ',' parametro  (56)
	list_parametro : list_parametro . ',' parametro  (58)

	','  shift 118
	.  error


state 84
	condicion : error .  (121)

	.  reduce 121


state 85
	condicion : '(' . bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones ')'  (120)

	error  shift 58
	ID  shift 51
	CONSTANTE  shift 52
	'-'  shift 53
	.  error

	invocacion_funcion  goto 54
	expresion  goto 119
	termino  goto 56
	factor  goto 57
	bloque_list_expresiones  goto 120
	list_expresiones  goto 63


state 86
	bloque_if : encabezado_if '(' condicion . ')' THEN cuerpo_if_unico fin_if  (99)
	bloque_if : encabezado_if '(' condicion . ')' THEN cuerpo_if_bloque fin_if  (100)
	bloque_if : encabezado_if '(' condicion . ')' THEN cuerpo_if_unico ELSE cuerpo_if_unico fin_if  (101)
	bloque_if : encabezado_if '(' condicion . ')' THEN cuerpo_if_bloque ELSE cuerpo_if_bloque fin_if  (102)
	bloque_if : encabezado_if '(' condicion . ')' THEN cuerpo_if_unico ELSE cuerpo_if_bloque fin_if  (103)
	bloque_if : encabezado_if '(' condicion . ')' THEN cuerpo_if_bloque ELSE cuerpo_if_unico fin_if  (104)

	')'  shift 121
	.  error


state 87
	expresion : expresion . '+' termino  (66)
	expresion : expresion . '-' termino  (67)
	expresion : expresion . '+' error  (69)
	expresion : expresion . '-' error  (70)
	condicion : expresion . comparacion expresion  (119)

	MAYORIGUAL  shift 122
	MENORIGUAL  shift 123
	DISTINTO  shift 124
	'+'  shift 91
	'-'  shift 92
	'<'  shift 125
	'>'  shift 126
	'='  shift 127
	.  error

	comparacion  goto 128


state 88
	factor : ID '[' . CONSTANTE ']'  (79)

	CONSTANTE  shift 129
	.  error


state 89
	factor : '-' ID .  (80)
	factor : '-' ID . '[' CONSTANTE ']'  (82)

	'['  shift 130
	$end  reduce 80
	ID  reduce 80
	MAYORIGUAL  reduce 80
	MENORIGUAL  reduce 80
	DISTINTO  reduce 80
	IF  reduce 80
	END  reduce 80
	OUTF  reduce 80
	TYPEDEF  reduce 80
	RET  reduce 80
	ULONGINT  reduce 80
	SINGLE  reduce 80
	FOR  reduce 80
	UP  reduce 80
	DOWN  reduce 80
	','  reduce 80
	';'  reduce 80
	')'  reduce 80
	'+'  reduce 80
	'-'  reduce 80
	'*'  reduce 80
	'/'  reduce 80
	'<'  reduce 80
	'>'  reduce 80
	'='  reduce 80


state 90
	factor : '-' CONSTANTE .  (81)

	.  reduce 81


state 91
	expresion : expresion '+' . termino  (66)
	expresion : expresion '+' . error  (69)

	error  shift 131
	ID  shift 51
	CONSTANTE  shift 52
	'-'  shift 53
	.  error

	invocacion_funcion  goto 54
	termino  goto 132
	factor  goto 57


state 92
	expresion : expresion '-' . termino  (67)
	expresion : expresion '-' . error  (70)

	error  shift 133
	ID  shift 51
	CONSTANTE  shift 52
	'-'  shift 53
	.  error

	invocacion_funcion  goto 54
	termino  goto 134
	factor  goto 57


state 93
	termino : termino '*' . factor  (71)
	termino : termino '*' . error  (74)

	error  shift 135
	ID  shift 51
	CONSTANTE  shift 52
	'-'  shift 53
	.  error

	invocacion_funcion  goto 54
	factor  goto 136


state 94
	termino : termino '/' . factor  (72)
	termino : termino '/' . error  (75)

	error  shift 137
	ID  shift 51
	CONSTANTE  shift 52
	'-'  shift 53
	.  error

	invocacion_funcion  goto 54
	factor  goto 138


state 95
	invocacion_funcion : ID '(' expresion ')' .  (89)

	.  reduce 89


state 96
	invocacion_funcion : ID '(' tipo_base '(' . expresion ')' ')'  (92)

	ID  shift 51
	CONSTANTE  shift 52
	'-'  shift 53
	.  error

	invocacion_funcion  goto 54
	expresion  goto 139
	termino  goto 56
	factor  goto 57


state 97
	invocacion_funcion : ID '(' bloque_list_expresiones ')' .  (90)

	.  reduce 90


state 98
	bloque_list_expresiones : list_expresiones ',' . expresion  (122)
	list_expresiones : list_expresiones ',' . expresion  (123)

	ID  shift 51
	CONSTANTE  shift 52
	'-'  shift 53
	.  error

	invocacion_funcion  goto 54
	expresion  goto 140
	termino  goto 56
	factor  goto 57


state 99
	asignacion : ID '[' CONSTANTE ']' . ASIGNACION expresion  (39)

	ASIGNACION  shift 141
	.  error


state 100
	salida_mensaje : OUTF '(' CADENA ')' .  (126)

	.  reduce 126


state 101
	salida_mensaje : OUTF '(' expresion ')' .  (127)

	.  reduce 127


state 102
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base . '>' ID  (83)
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base . '>' error  (84)
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base . ID  (86)

	ID  shift 142
	'>'  shift 143
	.  error


state 103
	declaracion_tipo : TYPEDEF TRIPLE tipo_base ID .  (87)

	.  reduce 87


state 104
	declaracion_tipo : TYPEDEF TRIPLE tipo_base '>' . ID  (85)

	ID  shift 144
	.  error


state 105
	declaracion_tipo : TYPEDEF '<' tipo_base '>' . ID  (88)

	ID  shift 145
	.  error


state 106
	encabezado_for1 : ID ASIGNACION CONSTANTE . ';' condicion ';' up_down CONSTANTE  (26)
	encabezado_for1 : ID ASIGNACION CONSTANTE . ';' condicion ';' CONSTANTE  (27)
	encabezado_for1 : ID ASIGNACION CONSTANTE . condicion ';' up_down CONSTANTE  (28)
	encabezado_for1 : ID ASIGNACION CONSTANTE . ';' condicion up_down CONSTANTE  (29)
	encabezado_for1 : ID ASIGNACION CONSTANTE . ';' condicion ';' up_down  (30)
	encabezado_for2 : ID ASIGNACION CONSTANTE . ';' condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (31)
	encabezado_for2 : ID ASIGNACION CONSTANTE . ';' condicion ';' CONSTANTE ';' '(' condicion ')'  (32)
	encabezado_for2 : ID ASIGNACION CONSTANTE . condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (33)
	encabezado_for2 : ID ASIGNACION CONSTANTE . ';' condicion up_down CONSTANTE ';' '(' condicion ')'  (34)
	encabezado_for2 : ID ASIGNACION CONSTANTE . ';' condicion ';' up_down '(' condicion ')'  (35)

	error  shift 84
	ID  shift 51
	CONSTANTE  shift 52
	';'  shift 146
	'('  shift 85
	'-'  shift 53
	.  error

	invocacion_funcion  goto 54
	condicion  goto 147
	expresion  goto 87
	termino  goto 56
	factor  goto 57


state 107
	asignacion : ID . ASIGNACION expresion  (38)
	asignacion : ID . '[' CONSTANTE ']' ASIGNACION expresion  (39)
	asignacion : ID . ASIGNACION error  (40)
	invocacion_funcion : ID . '(' expresion ')'  (89)
	invocacion_funcion : ID . '(' bloque_list_expresiones ')'  (90)
	invocacion_funcion : ID . '(' ')'  (91)
	invocacion_funcion : ID . '(' tipo_base '(' expresion ')' ')'  (92)

	ASIGNACION  shift 28
	'('  shift 29
	'['  shift 30
	.  error


state 108
	bloque_sentencias_ejecutables : BEGIN . list_sentencias_ejecutables END  (96)
	bloque_sentencias_ejecutables : BEGIN . error  (97)

	error  shift 148
	ID  shift 107
	IF  shift 5
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 149
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	list_sentencias_ejecutables  goto 150
	encabezado_if  goto 26


state 109
	sentencia_control : FOR '(' encabezado_for ')' . bloque_sentencias_ejecutables  (20)
	sentencia_control : FOR '(' encabezado_for ')' . error  (21)

	error  shift 151
	ID  shift 107
	IF  shift 5
	BEGIN  shift 108
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 110
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 152
	encabezado_if  goto 26


state 110
	bloque_sentencias_ejecutables : sentencia_ejecutable . ';'  (95)

	';'  shift 153
	.  error


state 111
	sentencia_control : FOR '(' encabezado_for bloque_sentencias_ejecutables .  (23)

	.  reduce 23


state 112
	sentencia_control : FOR encabezado_for ')' bloque_sentencias_ejecutables .  (22)

	.  reduce 22


state 113
	list_variables : list_variables ',' ID .  (45)

	.  reduce 45


state 114
	declaracion_funcion : encabezado_funcion '(' ')' BEGIN . cuerpo_funcion END  (53)
	cuerpo_funcion : .  (62)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 154
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	END  reduce 62

	sentencia  goto 155
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	encabezado_funcion  goto 25
	cuerpo_funcion  goto 156
	list_sentencias_funcion  goto 157
	sentencia_return  goto 158
	encabezado_if  goto 26


state 115
	parametro : tipo ID .  (54)

	.  reduce 54


state 116
	declaracion_funcion : encabezado_funcion '(' parametro ')' . BEGIN cuerpo_funcion $$1 END  (51)

	BEGIN  shift 159
	.  error


state 117
	declaracion_funcion : encabezado_funcion '(' bloque_list_parametro ')' . BEGIN cuerpo_funcion END  (52)

	BEGIN  shift 160
	.  error


state 118
	bloque_list_parametro : list_parametro ',' . parametro  (56)
	list_parametro : list_parametro ',' . parametro  (58)

	ID  shift 78
	ULONGINT  shift 9
	SINGLE  shift 10
	.  error

	tipo  goto 80
	tipo_base  goto 24
	parametro  goto 161


state 119
	expresion : expresion . '+' termino  (66)
	expresion : expresion . '-' termino  (67)
	expresion : expresion . '+' error  (69)
	expresion : expresion . '-' error  (70)
	list_expresiones : expresion .  (124)

	'+'  shift 91
	'-'  shift 92
	','  reduce 124


state 120
	condicion : '(' bloque_list_expresiones . ')' comparacion '(' bloque_list_expresiones ')'  (120)

	')'  shift 162
	.  error


state 121
	bloque_if : encabezado_if '(' condicion ')' . THEN cuerpo_if_unico fin_if  (99)
	bloque_if : encabezado_if '(' condicion ')' . THEN cuerpo_if_bloque fin_if  (100)
	bloque_if : encabezado_if '(' condicion ')' . THEN cuerpo_if_unico ELSE cuerpo_if_unico fin_if  (101)
	bloque_if : encabezado_if '(' condicion ')' . THEN cuerpo_if_bloque ELSE cuerpo_if_bloque fin_if  (102)
	bloque_if : encabezado_if '(' condicion ')' . THEN cuerpo_if_unico ELSE cuerpo_if_bloque fin_if  (103)
	bloque_if : encabezado_if '(' condicion ')' . THEN cuerpo_if_bloque ELSE cuerpo_if_unico fin_if  (104)

	THEN  shift 163
	.  error


state 122
	comparacion : MAYORIGUAL .  (113)

	.  reduce 113


state 123
	comparacion : MENORIGUAL .  (114)

	.  reduce 114


state 124
	comparacion : DISTINTO .  (115)

	.  reduce 115


state 125
	comparacion : '<' .  (118)

	.  reduce 118


state 126
	comparacion : '>' .  (117)

	.  reduce 117


state 127
	comparacion : '=' .  (116)

	.  reduce 116


state 128
	condicion : expresion comparacion . expresion  (119)

	ID  shift 51
	CONSTANTE  shift 52
	'-'  shift 53
	.  error

	invocacion_funcion  goto 54
	expresion  goto 164
	termino  goto 56
	factor  goto 57


state 129
	factor : ID '[' CONSTANTE . ']'  (79)

	']'  shift 165
	.  error


state 130
	factor : '-' ID '[' . CONSTANTE ']'  (82)

	CONSTANTE  shift 166
	.  error


state 131
	expresion : expresion '+' error .  (69)

	.  reduce 69


state 132
	expresion : expresion '+' termino .  (66)
	termino : termino . '*' factor  (71)
	termino : termino . '/' factor  (72)
	termino : termino . '*' error  (74)
	termino : termino . '/' error  (75)

	'*'  shift 93
	'/'  shift 94
	$end  reduce 66
	ID  reduce 66
	MAYORIGUAL  reduce 66
	MENORIGUAL  reduce 66
	DISTINTO  reduce 66
	IF  reduce 66
	END  reduce 66
	OUTF  reduce 66
	TYPEDEF  reduce 66
	RET  reduce 66
	ULONGINT  reduce 66
	SINGLE  reduce 66
	FOR  reduce 66
	UP  reduce 66
	DOWN  reduce 66
	','  reduce 66
	';'  reduce 66
	')'  reduce 66
	'+'  reduce 66
	'-'  reduce 66
	'<'  reduce 66
	'>'  reduce 66
	'='  reduce 66


state 133
	expresion : expresion '-' error .  (70)

	.  reduce 70


state 134
	expresion : expresion '-' termino .  (67)
	termino : termino . '*' factor  (71)
	termino : termino . '/' factor  (72)
	termino : termino . '*' error  (74)
	termino : termino . '/' error  (75)

	'*'  shift 93
	'/'  shift 94
	$end  reduce 67
	ID  reduce 67
	MAYORIGUAL  reduce 67
	MENORIGUAL  reduce 67
	DISTINTO  reduce 67
	IF  reduce 67
	END  reduce 67
	OUTF  reduce 67
	TYPEDEF  reduce 67
	RET  reduce 67
	ULONGINT  reduce 67
	SINGLE  reduce 67
	FOR  reduce 67
	UP  reduce 67
	DOWN  reduce 67
	','  reduce 67
	';'  reduce 67
	')'  reduce 67
	'+'  reduce 67
	'-'  reduce 67
	'<'  reduce 67
	'>'  reduce 67
	'='  reduce 67


state 135
	termino : termino '*' error .  (74)

	.  reduce 74


state 136
	termino : termino '*' factor .  (71)

	.  reduce 71


state 137
	termino : termino '/' error .  (75)

	.  reduce 75


state 138
	termino : termino '/' factor .  (72)

	.  reduce 72


state 139
	expresion : expresion . '+' termino  (66)
	expresion : expresion . '-' termino  (67)
	expresion : expresion . '+' error  (69)
	expresion : expresion . '-' error  (70)
	invocacion_funcion : ID '(' tipo_base '(' expresion . ')' ')'  (92)

	')'  shift 167
	'+'  shift 91
	'-'  shift 92
	.  error


state 140
	expresion : expresion . '+' termino  (66)
	expresion : expresion . '-' termino  (67)
	expresion : expresion . '+' error  (69)
	expresion : expresion . '-' error  (70)
	bloque_list_expresiones : list_expresiones ',' expresion .  (122)
	list_expresiones : list_expresiones ',' expresion .  (123)

	'+'  shift 91
	'-'  shift 92
	','  reduce 123
	')'  reduce 122


state 141
	asignacion : ID '[' CONSTANTE ']' ASIGNACION . expresion  (39)

	ID  shift 51
	CONSTANTE  shift 52
	'-'  shift 53
	.  error

	invocacion_funcion  goto 54
	expresion  goto 168
	termino  goto 56
	factor  goto 57


state 142
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base ID .  (86)

	.  reduce 86


state 143
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' . ID  (83)
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' . error  (84)

	error  shift 169
	ID  shift 170
	.  error


state 144
	declaracion_tipo : TYPEDEF TRIPLE tipo_base '>' ID .  (85)

	.  reduce 85


state 145
	declaracion_tipo : TYPEDEF '<' tipo_base '>' ID .  (88)

	.  reduce 88


state 146
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' . condicion ';' up_down CONSTANTE  (26)
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' . condicion ';' CONSTANTE  (27)
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' . condicion up_down CONSTANTE  (29)
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' . condicion ';' up_down  (30)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' . condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (31)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' . condicion ';' CONSTANTE ';' '(' condicion ')'  (32)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' . condicion up_down CONSTANTE ';' '(' condicion ')'  (34)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' . condicion ';' up_down '(' condicion ')'  (35)

	error  shift 84
	ID  shift 51
	CONSTANTE  shift 52
	'('  shift 85
	'-'  shift 53
	.  error

	invocacion_funcion  goto 54
	condicion  goto 171
	expresion  goto 87
	termino  goto 56
	factor  goto 57


state 147
	encabezado_for1 : ID ASIGNACION CONSTANTE condicion . ';' up_down CONSTANTE  (28)
	encabezado_for2 : ID ASIGNACION CONSTANTE condicion . ';' up_down CONSTANTE ';' '(' condicion ')'  (33)

	';'  shift 172
	.  error


state 148
	bloque_sentencias_ejecutables : BEGIN error .  (97)

	.  reduce 97


state 149
	list_sentencias_ejecutables : sentencia_ejecutable . ';'  (112)

	';'  shift 173
	.  error


state 150
	bloque_sentencias_ejecutables : BEGIN list_sentencias_ejecutables . END  (96)
	list_sentencias_ejecutables : list_sentencias_ejecutables . sentencia_ejecutable ';'  (111)

	ID  shift 107
	IF  shift 5
	END  shift 174
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 175
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	encabezado_if  goto 26


state 151
	sentencia_control : FOR '(' encabezado_for ')' error .  (21)

	.  reduce 21


state 152
	sentencia_control : FOR '(' encabezado_for ')' bloque_sentencias_ejecutables .  (20)

	.  reduce 20


state 153
	bloque_sentencias_ejecutables : sentencia_ejecutable ';' .  (95)

	.  reduce 95


state 154
	sentencia_return : RET . '(' expresion ')'  (65)

	'('  shift 176
	.  error


state 155
	list_sentencias_funcion : sentencia .  (64)

	.  reduce 64


state 156
	declaracion_funcion : encabezado_funcion '(' ')' BEGIN cuerpo_funcion . END  (53)

	END  shift 177
	.  error


state 157
	cuerpo_funcion : list_sentencias_funcion . sentencia_return ';'  (59)
	cuerpo_funcion : list_sentencias_funcion .  (60)
	list_sentencias_funcion : list_sentencias_funcion . sentencia  (63)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 154
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	END  reduce 60

	sentencia  goto 178
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	encabezado_funcion  goto 25
	sentencia_return  goto 179
	encabezado_if  goto 26


state 158
	cuerpo_funcion : sentencia_return . ';'  (61)

	';'  shift 180
	.  error


state 159
	declaracion_funcion : encabezado_funcion '(' parametro ')' BEGIN . cuerpo_funcion $$1 END  (51)
	cuerpo_funcion : .  (62)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 154
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	END  reduce 62

	sentencia  goto 155
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	encabezado_funcion  goto 25
	cuerpo_funcion  goto 181
	list_sentencias_funcion  goto 157
	sentencia_return  goto 158
	encabezado_if  goto 26


state 160
	declaracion_funcion : encabezado_funcion '(' bloque_list_parametro ')' BEGIN . cuerpo_funcion END  (52)
	cuerpo_funcion : .  (62)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 154
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	END  reduce 62

	sentencia  goto 155
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	encabezado_funcion  goto 25
	cuerpo_funcion  goto 182
	list_sentencias_funcion  goto 157
	sentencia_return  goto 158
	encabezado_if  goto 26


state 161
	bloque_list_parametro : list_parametro ',' parametro .  (56)
	list_parametro : list_parametro ',' parametro .  (58)

	','  reduce 58
	')'  reduce 56


state 162
	condicion : '(' bloque_list_expresiones ')' . comparacion '(' bloque_list_expresiones ')'  (120)

	MAYORIGUAL  shift 122
	MENORIGUAL  shift 123
	DISTINTO  shift 124
	'<'  shift 125
	'>'  shift 126
	'='  shift 127
	.  error

	comparacion  goto 183


state 163
	bloque_if : encabezado_if '(' condicion ')' THEN . cuerpo_if_unico fin_if  (99)
	bloque_if : encabezado_if '(' condicion ')' THEN . cuerpo_if_bloque fin_if  (100)
	bloque_if : encabezado_if '(' condicion ')' THEN . cuerpo_if_unico ELSE cuerpo_if_unico fin_if  (101)
	bloque_if : encabezado_if '(' condicion ')' THEN . cuerpo_if_bloque ELSE cuerpo_if_bloque fin_if  (102)
	bloque_if : encabezado_if '(' condicion ')' THEN . cuerpo_if_unico ELSE cuerpo_if_bloque fin_if  (103)
	bloque_if : encabezado_if '(' condicion ')' THEN . cuerpo_if_bloque ELSE cuerpo_if_unico fin_if  (104)

	error  shift 184
	ID  shift 107
	IF  shift 5
	BEGIN  shift 185
	OUTF  shift 7
	RET  shift 154
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 186
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	sentencia_return  goto 187
	list_sentencias_ejecutables  goto 188
	encabezado_if  goto 26
	cuerpo_if_unico  goto 189
	cuerpo_if_bloque  goto 190


state 164
	expresion : expresion . '+' termino  (66)
	expresion : expresion . '-' termino  (67)
	expresion : expresion . '+' error  (69)
	expresion : expresion . '-' error  (70)
	condicion : expresion comparacion expresion .  (119)

	'+'  shift 91
	'-'  shift 92
	UP  reduce 119
	DOWN  reduce 119
	';'  reduce 119
	')'  reduce 119


state 165
	factor : ID '[' CONSTANTE ']' .  (79)

	.  reduce 79


state 166
	factor : '-' ID '[' CONSTANTE . ']'  (82)

	']'  shift 191
	.  error


state 167
	invocacion_funcion : ID '(' tipo_base '(' expresion ')' . ')'  (92)

	')'  shift 192
	.  error


state 168
	asignacion : ID '[' CONSTANTE ']' ASIGNACION expresion .  (39)
	expresion : expresion . '+' termino  (66)
	expresion : expresion . '-' termino  (67)
	expresion : expresion . '+' error  (69)
	expresion : expresion . '-' error  (70)

	'+'  shift 91
	'-'  shift 92
	$end  reduce 39
	ID  reduce 39
	IF  reduce 39
	END  reduce 39
	OUTF  reduce 39
	TYPEDEF  reduce 39
	RET  reduce 39
	ULONGINT  reduce 39
	SINGLE  reduce 39
	FOR  reduce 39
	';'  reduce 39


state 169
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' error .  (84)

	.  reduce 84


state 170
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' ID .  (83)

	.  reduce 83


state 171
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion . ';' up_down CONSTANTE  (26)
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion . ';' CONSTANTE  (27)
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion . up_down CONSTANTE  (29)
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion . ';' up_down  (30)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion . ';' up_down CONSTANTE ';' '(' condicion ')'  (31)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion . ';' CONSTANTE ';' '(' condicion ')'  (32)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion . up_down CONSTANTE ';' '(' condicion ')'  (34)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion . ';' up_down '(' condicion ')'  (35)

	UP  shift 193
	DOWN  shift 194
	';'  shift 195
	.  error

	up_down  goto 196


state 172
	encabezado_for1 : ID ASIGNACION CONSTANTE condicion ';' . up_down CONSTANTE  (28)
	encabezado_for2 : ID ASIGNACION CONSTANTE condicion ';' . up_down CONSTANTE ';' '(' condicion ')'  (33)

	UP  shift 193
	DOWN  shift 194
	.  error

	up_down  goto 197


state 173
	list_sentencias_ejecutables : sentencia_ejecutable ';' .  (112)

	.  reduce 112


state 174
	bloque_sentencias_ejecutables : BEGIN list_sentencias_ejecutables END .  (96)

	.  reduce 96


state 175
	list_sentencias_ejecutables : list_sentencias_ejecutables sentencia_ejecutable . ';'  (111)

	';'  shift 198
	.  error


state 176
	sentencia_return : RET '(' . expresion ')'  (65)

	ID  shift 51
	CONSTANTE  shift 52
	'-'  shift 53
	.  error

	invocacion_funcion  goto 54
	expresion  goto 199
	termino  goto 56
	factor  goto 57


state 177
	declaracion_funcion : encabezado_funcion '(' ')' BEGIN cuerpo_funcion END .  (53)

	.  reduce 53


state 178
	list_sentencias_funcion : list_sentencias_funcion sentencia .  (63)

	.  reduce 63


state 179
	cuerpo_funcion : list_sentencias_funcion sentencia_return . ';'  (59)

	';'  shift 200
	.  error


state 180
	cuerpo_funcion : sentencia_return ';' .  (61)

	.  reduce 61


state 181
	declaracion_funcion : encabezado_funcion '(' parametro ')' BEGIN cuerpo_funcion . $$1 END  (51)
	$$1 : .  (50)

	.  reduce 50

	$$1  goto 201


state 182
	declaracion_funcion : encabezado_funcion '(' bloque_list_parametro ')' BEGIN cuerpo_funcion . END  (52)

	END  shift 202
	.  error


state 183
	condicion : '(' bloque_list_expresiones ')' comparacion . '(' bloque_list_expresiones ')'  (120)

	'('  shift 203
	.  error


state 184
	cuerpo_if_bloque : error .  (110)

	.  reduce 110


state 185
	cuerpo_if_bloque : BEGIN . list_sentencias_ejecutables END  (107)
	cuerpo_if_bloque : BEGIN . error  (108)

	error  shift 204
	ID  shift 107
	IF  shift 5
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 149
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	list_sentencias_ejecutables  goto 205
	encabezado_if  goto 26


state 186
	cuerpo_if_unico : sentencia_ejecutable . ';'  (105)
	list_sentencias_ejecutables : sentencia_ejecutable . ';'  (112)

	';'  shift 206
	.  error


state 187
	cuerpo_if_unico : sentencia_return . ';'  (106)

	';'  shift 207
	.  error


state 188
	cuerpo_if_bloque : list_sentencias_ejecutables . END  (109)
	list_sentencias_ejecutables : list_sentencias_ejecutables . sentencia_ejecutable ';'  (111)

	ID  shift 107
	IF  shift 5
	END  shift 208
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 175
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	encabezado_if  goto 26


state 189
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_unico . fin_if  (99)
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_unico . ELSE cuerpo_if_unico fin_if  (101)
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_unico . ELSE cuerpo_if_bloque fin_if  (103)

	error  shift 209
	ELSE  shift 210
	END_IF  shift 211
	.  error

	fin_if  goto 212


state 190
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_bloque . fin_if  (100)
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_bloque . ELSE cuerpo_if_bloque fin_if  (102)
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_bloque . ELSE cuerpo_if_unico fin_if  (104)

	error  shift 209
	ELSE  shift 213
	END_IF  shift 211
	.  error

	fin_if  goto 214


state 191
	factor : '-' ID '[' CONSTANTE ']' .  (82)

	.  reduce 82


state 192
	invocacion_funcion : ID '(' tipo_base '(' expresion ')' ')' .  (92)

	.  reduce 92


state 193
	up_down : UP .  (36)

	.  reduce 36


state 194
	up_down : DOWN .  (37)

	.  reduce 37


state 195
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion ';' . up_down CONSTANTE  (26)
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion ';' . CONSTANTE  (27)
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion ';' . up_down  (30)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' . up_down CONSTANTE ';' '(' condicion ')'  (31)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' . CONSTANTE ';' '(' condicion ')'  (32)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' . up_down '(' condicion ')'  (35)

	CONSTANTE  shift 215
	UP  shift 193
	DOWN  shift 194
	.  error

	up_down  goto 216


state 196
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion up_down . CONSTANTE  (29)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion up_down . CONSTANTE ';' '(' condicion ')'  (34)

	CONSTANTE  shift 217
	.  error


state 197
	encabezado_for1 : ID ASIGNACION CONSTANTE condicion ';' up_down . CONSTANTE  (28)
	encabezado_for2 : ID ASIGNACION CONSTANTE condicion ';' up_down . CONSTANTE ';' '(' condicion ')'  (33)

	CONSTANTE  shift 218
	.  error


state 198
	list_sentencias_ejecutables : list_sentencias_ejecutables sentencia_ejecutable ';' .  (111)

	.  reduce 111


state 199
	sentencia_return : RET '(' expresion . ')'  (65)
	expresion : expresion . '+' termino  (66)
	expresion : expresion . '-' termino  (67)
	expresion : expresion . '+' error  (69)
	expresion : expresion . '-' error  (70)

	')'  shift 219
	'+'  shift 91
	'-'  shift 92
	.  error


state 200
	cuerpo_funcion : list_sentencias_funcion sentencia_return ';' .  (59)

	.  reduce 59


state 201
	declaracion_funcion : encabezado_funcion '(' parametro ')' BEGIN cuerpo_funcion $$1 . END  (51)

	END  shift 220
	.  error


state 202
	declaracion_funcion : encabezado_funcion '(' bloque_list_parametro ')' BEGIN cuerpo_funcion END .  (52)

	.  reduce 52


state 203
	condicion : '(' bloque_list_expresiones ')' comparacion '(' . bloque_list_expresiones ')'  (120)

	error  shift 58
	ID  shift 51
	CONSTANTE  shift 52
	'-'  shift 53
	.  error

	invocacion_funcion  goto 54
	expresion  goto 119
	termino  goto 56
	factor  goto 57
	bloque_list_expresiones  goto 221
	list_expresiones  goto 63


state 204
	cuerpo_if_bloque : BEGIN error .  (108)

	.  reduce 108


state 205
	cuerpo_if_bloque : BEGIN list_sentencias_ejecutables . END  (107)
	list_sentencias_ejecutables : list_sentencias_ejecutables . sentencia_ejecutable ';'  (111)

	ID  shift 107
	IF  shift 5
	END  shift 222
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 175
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	encabezado_if  goto 26


state 206
	cuerpo_if_unico : sentencia_ejecutable ';' .  (105)
	list_sentencias_ejecutables : sentencia_ejecutable ';' .  (112)

	error  reduce 105
	ID  reduce 112
	IF  reduce 112
	ELSE  reduce 105
	END  reduce 112
	END_IF  reduce 105
	OUTF  reduce 112
	FOR  reduce 112


state 207
	cuerpo_if_unico : sentencia_return ';' .  (106)

	.  reduce 106


state 208
	cuerpo_if_bloque : list_sentencias_ejecutables END .  (109)

	.  reduce 109


state 209
	fin_if : error .  (94)

	.  reduce 94


state 210
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_unico ELSE . cuerpo_if_unico fin_if  (101)
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_unico ELSE . cuerpo_if_bloque fin_if  (103)

	error  shift 184
	ID  shift 107
	IF  shift 5
	BEGIN  shift 185
	OUTF  shift 7
	RET  shift 154
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 186
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	sentencia_return  goto 187
	list_sentencias_ejecutables  goto 188
	encabezado_if  goto 26
	cuerpo_if_unico  goto 223
	cuerpo_if_bloque  goto 224


state 211
	fin_if : END_IF .  (93)

	.  reduce 93


state 212
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_unico fin_if .  (99)

	.  reduce 99


state 213
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_bloque ELSE . cuerpo_if_bloque fin_if  (102)
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_bloque ELSE . cuerpo_if_unico fin_if  (104)

	error  shift 184
	ID  shift 107
	IF  shift 5
	BEGIN  shift 185
	OUTF  shift 7
	RET  shift 154
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 186
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	sentencia_return  goto 187
	list_sentencias_ejecutables  goto 188
	encabezado_if  goto 26
	cuerpo_if_unico  goto 225
	cuerpo_if_bloque  goto 226


state 214
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_bloque fin_if .  (100)

	.  reduce 100


state 215
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE .  (27)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE . ';' '(' condicion ')'  (32)

	';'  shift 227
	ID  reduce 27
	IF  reduce 27
	BEGIN  reduce 27
	OUTF  reduce 27
	FOR  reduce 27
	')'  reduce 27


state 216
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down . CONSTANTE  (26)
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down .  (30)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down . CONSTANTE ';' '(' condicion ')'  (31)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down . '(' condicion ')'  (35)

	CONSTANTE  shift 228
	'('  shift 229
	ID  reduce 30
	IF  reduce 30
	BEGIN  reduce 30
	OUTF  reduce 30
	FOR  reduce 30
	')'  reduce 30


state 217
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE .  (29)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE . ';' '(' condicion ')'  (34)

	';'  shift 230
	ID  reduce 29
	IF  reduce 29
	BEGIN  reduce 29
	OUTF  reduce 29
	FOR  reduce 29
	')'  reduce 29


state 218
	encabezado_for1 : ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE .  (28)
	encabezado_for2 : ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE . ';' '(' condicion ')'  (33)

	';'  shift 231
	ID  reduce 28
	IF  reduce 28
	BEGIN  reduce 28
	OUTF  reduce 28
	FOR  reduce 28
	')'  reduce 28


state 219
	sentencia_return : RET '(' expresion ')' .  (65)

	.  reduce 65


state 220
	declaracion_funcion : encabezado_funcion '(' parametro ')' BEGIN cuerpo_funcion $$1 END .  (51)

	.  reduce 51


state 221
	condicion : '(' bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones . ')'  (120)

	')'  shift 232
	.  error


state 222
	cuerpo_if_bloque : BEGIN list_sentencias_ejecutables END .  (107)

	.  reduce 107


state 223
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_unico ELSE cuerpo_if_unico . fin_if  (101)

	error  shift 209
	END_IF  shift 211
	.  error

	fin_if  goto 233


state 224
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_unico ELSE cuerpo_if_bloque . fin_if  (103)

	error  shift 209
	END_IF  shift 211
	.  error

	fin_if  goto 234


state 225
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_bloque ELSE cuerpo_if_unico . fin_if  (104)

	error  shift 209
	END_IF  shift 211
	.  error

	fin_if  goto 235


state 226
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_bloque ELSE cuerpo_if_bloque . fin_if  (102)

	error  shift 209
	END_IF  shift 211
	.  error

	fin_if  goto 236


state 227
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE ';' . '(' condicion ')'  (32)

	'('  shift 237
	.  error


state 228
	encabezado_for1 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE .  (26)
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE . ';' '(' condicion ')'  (31)

	';'  shift 238
	ID  reduce 26
	IF  reduce 26
	BEGIN  reduce 26
	OUTF  reduce 26
	FOR  reduce 26
	')'  reduce 26


state 229
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down '(' . condicion ')'  (35)

	error  shift 84
	ID  shift 51
	CONSTANTE  shift 52
	'('  shift 85
	'-'  shift 53
	.  error

	invocacion_funcion  goto 54
	condicion  goto 239
	expresion  goto 87
	termino  goto 56
	factor  goto 57


state 230
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE ';' . '(' condicion ')'  (34)

	'('  shift 240
	.  error


state 231
	encabezado_for2 : ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE ';' . '(' condicion ')'  (33)

	'('  shift 241
	.  error


state 232
	condicion : '(' bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones ')' .  (120)

	.  reduce 120


state 233
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_unico ELSE cuerpo_if_unico fin_if .  (101)

	.  reduce 101


state 234
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_unico ELSE cuerpo_if_bloque fin_if .  (103)

	.  reduce 103


state 235
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_bloque ELSE cuerpo_if_unico fin_if .  (104)

	.  reduce 104


state 236
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_bloque ELSE cuerpo_if_bloque fin_if .  (102)

	.  reduce 102


state 237
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE ';' '(' . condicion ')'  (32)

	error  shift 84
	ID  shift 51
	CONSTANTE  shift 52
	'('  shift 85
	'-'  shift 53
	.  error

	invocacion_funcion  goto 54
	condicion  goto 242
	expresion  goto 87
	termino  goto 56
	factor  goto 57


state 238
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE ';' . '(' condicion ')'  (31)

	'('  shift 243
	.  error


state 239
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down '(' condicion . ')'  (35)

	')'  shift 244
	.  error


state 240
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE ';' '(' . condicion ')'  (34)

	error  shift 84
	ID  shift 51
	CONSTANTE  shift 52
	'('  shift 85
	'-'  shift 53
	.  error

	invocacion_funcion  goto 54
	condicion  goto 245
	expresion  goto 87
	termino  goto 56
	factor  goto 57


state 241
	encabezado_for2 : ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE ';' '(' . condicion ')'  (33)

	error  shift 84
	ID  shift 51
	CONSTANTE  shift 52
	'('  shift 85
	'-'  shift 53
	.  error

	invocacion_funcion  goto 54
	condicion  goto 246
	expresion  goto 87
	termino  goto 56
	factor  goto 57


state 242
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE ';' '(' condicion . ')'  (32)

	')'  shift 247
	.  error


state 243
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE ';' '(' . condicion ')'  (31)

	error  shift 84
	ID  shift 51
	CONSTANTE  shift 52
	'('  shift 85
	'-'  shift 53
	.  error

	invocacion_funcion  goto 54
	condicion  goto 248
	expresion  goto 87
	termino  goto 56
	factor  goto 57


state 244
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down '(' condicion ')' .  (35)

	.  reduce 35


state 245
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE ';' '(' condicion . ')'  (34)

	')'  shift 249
	.  error


state 246
	encabezado_for2 : ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE ';' '(' condicion . ')'  (33)

	')'  shift 250
	.  error


state 247
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' CONSTANTE ';' '(' condicion ')' .  (32)

	.  reduce 32


state 248
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE ';' '(' condicion . ')'  (31)

	')'  shift 251
	.  error


state 249
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion up_down CONSTANTE ';' '(' condicion ')' .  (34)

	.  reduce 34


state 250
	encabezado_for2 : ID ASIGNACION CONSTANTE condicion ';' up_down CONSTANTE ';' '(' condicion ')' .  (33)

	.  reduce 33


state 251
	encabezado_for2 : ID ASIGNACION CONSTANTE ';' condicion ';' up_down CONSTANTE ';' '(' condicion ')' .  (31)

	.  reduce 31


State 46 contains 1 shift/reduce conflict.


39 terminals, 41 nonterminals
129 grammar rules, 252 states
