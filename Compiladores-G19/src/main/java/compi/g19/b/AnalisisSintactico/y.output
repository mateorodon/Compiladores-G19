   0  $accept : programa $end

   1  programa : ID BEGIN list_sentencias END

   2  list_sentencias : list_sentencias sentencia ';'
   3                  | sentencia ';'

   4  sentencia : sentencia_declarativa
   5            | sentencia_ejecutable

   6  sentencia_declarativa : tipo list_variables
   7                        | declaracion_funcion
   8                        | declaracion_tipo

   9  sentencia_ejecutable : asignacion
  10                       | invocacion_funcion
  11                       | bloque_if
  12                       | salida_mensaje
  13                       | sentencia_control

  14  sentencia_control : FOR '(' encabezado_for ')' sentencia_ejecutable ';'
  15                    | FOR '(' encabezado_for ')' BEGIN list_sentencias_ejecutables END

  16  encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' UP CONSTANTE
  17                 | ID ASIGNACION CONSTANTE ';' condicion ';' DOWN CONSTANTE
  18                 | ID ASIGNACION CONSTANTE ';' condicion ';' UP CONSTANTE ';' '(' condicion ')'
  19                 | ID ASIGNACION CONSTANTE ';' condicion ';' DOWN CONSTANTE ';' '(' condicion ')'

  20  asignacion : ID ASIGNACION expresion
  21             | ID '[' CONSTANTE ']' ASIGNACION expresion

  22  tipo : ULONGINT
  23       | SINGLE
  24       | ID

  25  list_variables : list_variables ',' ID
  26                 | ID

  27  declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN cuerpo_funcion END

  28  parametro : tipo ID

  29  cuerpo_funcion : list_sentencias
  30                 | list_sentencias RET '(' expresion ')'
  31                 | RET '(' expresion ')'

  32  expresion : expresion '+' termino
  33            | expresion '-' termino
  34            | termino

  35  termino : termino '*' factor
  36          | termino '/' factor
  37          | factor

  38  factor : ID
  39         | CONSTANTE
  40         | invocacion_funcion
  41         | ID '[' CONSTANTE ']'

  42  declaracion_tipo :
  43                   | TYPEDEF TRIPLE '<' tipo '>' ID

  44  invocacion_funcion : ID '(' expresion ')'
  45                     | ID '(' tipo expresion ')'

  46  bloque_if : IF '(' condicion ')' THEN bloque_sentencias ELSE bloque_sentencias END_IF
  47            | IF '(' condicion ')' THEN bloque_sentencias END_IF

  48  bloque_sentencias : sentencia_ejecutable ';'
  49                    | BEGIN list_sentencias_ejecutables END

  50  list_sentencias_ejecutables : list_sentencias_ejecutables sentencia_ejecutable ';'
  51                              | sentencia_ejecutable ';'

  52  comparacion : MAYORIGUAL
  53              | MENORIGUAL
  54              | DISTINTO
  55              | '='
  56              | '>'
  57              | '<'

  58  condicion : expresion comparacion expresion
  59            | '(' bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones ')'

  60  bloque_list_expresiones : list_expresiones ',' expresion

  61  list_expresiones : list_expresiones ',' expresion
  62                   | expresion

  63  salida_mensaje : OUTF '(' '{' CADENA '}' ')'
  64                 | OUTF '(' expresion ')'

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	.  error

	programa  goto 2


state 1
	programa : ID . BEGIN list_sentencias END  (1)

	BEGIN  shift 3
	.  error


state 2
	$accept : programa . $end  (0)

	$end  accept


state 3
	programa : ID BEGIN . list_sentencias END  (1)
	declaracion_tipo : .  (42)

	ID  shift 4
	IF  shift 5
	OUTF  shift 6
	TYPEDEF  shift 7
	ULONGINT  shift 8
	SINGLE  shift 9
	FOR  shift 10
	';'  reduce 42

	list_sentencias  goto 11
	sentencia  goto 12
	sentencia_declarativa  goto 13
	sentencia_ejecutable  goto 14
	tipo  goto 15
	declaracion_funcion  goto 16
	declaracion_tipo  goto 17
	asignacion  goto 18
	invocacion_funcion  goto 19
	bloque_if  goto 20
	salida_mensaje  goto 21
	sentencia_control  goto 22


state 4
	asignacion : ID . ASIGNACION expresion  (20)
	asignacion : ID . '[' CONSTANTE ']' ASIGNACION expresion  (21)
	tipo : ID .  (24)
	invocacion_funcion : ID . '(' expresion ')'  (44)
	invocacion_funcion : ID . '(' tipo expresion ')'  (45)

	ASIGNACION  shift 23
	'('  shift 24
	'['  shift 25
	ID  reduce 24
	FUN  reduce 24


state 5
	bloque_if : IF . '(' condicion ')' THEN bloque_sentencias ELSE bloque_sentencias END_IF  (46)
	bloque_if : IF . '(' condicion ')' THEN bloque_sentencias END_IF  (47)

	'('  shift 26
	.  error


state 6
	salida_mensaje : OUTF . '(' '{' CADENA '}' ')'  (63)
	salida_mensaje : OUTF . '(' expresion ')'  (64)

	'('  shift 27
	.  error


state 7
	declaracion_tipo : TYPEDEF . TRIPLE '<' tipo '>' ID  (43)

	TRIPLE  shift 28
	.  error


state 8
	tipo : ULONGINT .  (22)

	.  reduce 22


state 9
	tipo : SINGLE .  (23)

	.  reduce 23


state 10
	sentencia_control : FOR . '(' encabezado_for ')' sentencia_ejecutable ';'  (14)
	sentencia_control : FOR . '(' encabezado_for ')' BEGIN list_sentencias_ejecutables END  (15)

	'('  shift 29
	.  error


state 11
	programa : ID BEGIN list_sentencias . END  (1)
	list_sentencias : list_sentencias . sentencia ';'  (2)
	declaracion_tipo : .  (42)

	ID  shift 4
	IF  shift 5
	END  shift 30
	OUTF  shift 6
	TYPEDEF  shift 7
	ULONGINT  shift 8
	SINGLE  shift 9
	FOR  shift 10
	';'  reduce 42

	sentencia  goto 31
	sentencia_declarativa  goto 13
	sentencia_ejecutable  goto 14
	tipo  goto 15
	declaracion_funcion  goto 16
	declaracion_tipo  goto 17
	asignacion  goto 18
	invocacion_funcion  goto 19
	bloque_if  goto 20
	salida_mensaje  goto 21
	sentencia_control  goto 22


state 12
	list_sentencias : sentencia . ';'  (3)

	';'  shift 32
	.  error


state 13
	sentencia : sentencia_declarativa .  (4)

	.  reduce 4


state 14
	sentencia : sentencia_ejecutable .  (5)

	.  reduce 5


state 15
	sentencia_declarativa : tipo . list_variables  (6)
	declaracion_funcion : tipo . FUN ID '(' parametro ')' BEGIN cuerpo_funcion END  (27)

	ID  shift 33
	FUN  shift 34
	.  error

	list_variables  goto 35


state 16
	sentencia_declarativa : declaracion_funcion .  (7)

	.  reduce 7


state 17
	sentencia_declarativa : declaracion_tipo .  (8)

	.  reduce 8


state 18
	sentencia_ejecutable : asignacion .  (9)

	.  reduce 9


state 19
	sentencia_ejecutable : invocacion_funcion .  (10)

	.  reduce 10


state 20
	sentencia_ejecutable : bloque_if .  (11)

	.  reduce 11


state 21
	sentencia_ejecutable : salida_mensaje .  (12)

	.  reduce 12


state 22
	sentencia_ejecutable : sentencia_control .  (13)

	.  reduce 13


state 23
	asignacion : ID ASIGNACION . expresion  (20)

	ID  shift 36
	CONSTANTE  shift 37
	.  error

	invocacion_funcion  goto 38
	expresion  goto 39
	termino  goto 40
	factor  goto 41


state 24
	invocacion_funcion : ID '(' . expresion ')'  (44)
	invocacion_funcion : ID '(' . tipo expresion ')'  (45)

	ID  shift 42
	CONSTANTE  shift 37
	ULONGINT  shift 8
	SINGLE  shift 9
	.  error

	tipo  goto 43
	invocacion_funcion  goto 38
	expresion  goto 44
	termino  goto 40
	factor  goto 41


state 25
	asignacion : ID '[' . CONSTANTE ']' ASIGNACION expresion  (21)

	CONSTANTE  shift 45
	.  error


state 26
	bloque_if : IF '(' . condicion ')' THEN bloque_sentencias ELSE bloque_sentencias END_IF  (46)
	bloque_if : IF '(' . condicion ')' THEN bloque_sentencias END_IF  (47)

	ID  shift 36
	CONSTANTE  shift 37
	'('  shift 46
	.  error

	invocacion_funcion  goto 38
	condicion  goto 47
	expresion  goto 48
	termino  goto 40
	factor  goto 41


state 27
	salida_mensaje : OUTF '(' . '{' CADENA '}' ')'  (63)
	salida_mensaje : OUTF '(' . expresion ')'  (64)

	ID  shift 36
	CONSTANTE  shift 37
	'{'  shift 49
	.  error

	invocacion_funcion  goto 38
	expresion  goto 50
	termino  goto 40
	factor  goto 41


state 28
	declaracion_tipo : TYPEDEF TRIPLE . '<' tipo '>' ID  (43)

	'<'  shift 51
	.  error


state 29
	sentencia_control : FOR '(' . encabezado_for ')' sentencia_ejecutable ';'  (14)
	sentencia_control : FOR '(' . encabezado_for ')' BEGIN list_sentencias_ejecutables END  (15)

	ID  shift 52
	.  error

	encabezado_for  goto 53


state 30
	programa : ID BEGIN list_sentencias END .  (1)

	.  reduce 1


state 31
	list_sentencias : list_sentencias sentencia . ';'  (2)

	';'  shift 54
	.  error


state 32
	list_sentencias : sentencia ';' .  (3)

	.  reduce 3


state 33
	list_variables : ID .  (26)

	.  reduce 26


state 34
	declaracion_funcion : tipo FUN . ID '(' parametro ')' BEGIN cuerpo_funcion END  (27)

	ID  shift 55
	.  error


state 35
	sentencia_declarativa : tipo list_variables .  (6)
	list_variables : list_variables . ',' ID  (25)

	','  shift 56
	';'  reduce 6


state 36
	factor : ID .  (38)
	factor : ID . '[' CONSTANTE ']'  (41)
	invocacion_funcion : ID . '(' expresion ')'  (44)
	invocacion_funcion : ID . '(' tipo expresion ')'  (45)

	'('  shift 24
	'['  shift 57
	MAYORIGUAL  reduce 38
	MENORIGUAL  reduce 38
	DISTINTO  reduce 38
	';'  reduce 38
	')'  reduce 38
	','  reduce 38
	'+'  reduce 38
	'-'  reduce 38
	'*'  reduce 38
	'/'  reduce 38
	'<'  reduce 38
	'>'  reduce 38
	'='  reduce 38


state 37
	factor : CONSTANTE .  (39)

	.  reduce 39


state 38
	factor : invocacion_funcion .  (40)

	.  reduce 40


state 39
	asignacion : ID ASIGNACION expresion .  (20)
	expresion : expresion . '+' termino  (32)
	expresion : expresion . '-' termino  (33)

	'+'  shift 58
	'-'  shift 59
	';'  reduce 20


state 40
	expresion : termino .  (34)
	termino : termino . '*' factor  (35)
	termino : termino . '/' factor  (36)

	'*'  shift 60
	'/'  shift 61
	MAYORIGUAL  reduce 34
	MENORIGUAL  reduce 34
	DISTINTO  reduce 34
	';'  reduce 34
	')'  reduce 34
	','  reduce 34
	'+'  reduce 34
	'-'  reduce 34
	'<'  reduce 34
	'>'  reduce 34
	'='  reduce 34


state 41
	termino : factor .  (37)

	.  reduce 37


state 42
	tipo : ID .  (24)
	factor : ID .  (38)
	factor : ID . '[' CONSTANTE ']'  (41)
	invocacion_funcion : ID . '(' expresion ')'  (44)
	invocacion_funcion : ID . '(' tipo expresion ')'  (45)

	'('  shift 24
	'['  shift 57
	ID  reduce 24
	CONSTANTE  reduce 24
	')'  reduce 38
	'+'  reduce 38
	'-'  reduce 38
	'*'  reduce 38
	'/'  reduce 38


state 43
	invocacion_funcion : ID '(' tipo . expresion ')'  (45)

	ID  shift 36
	CONSTANTE  shift 37
	.  error

	invocacion_funcion  goto 38
	expresion  goto 62
	termino  goto 40
	factor  goto 41


state 44
	expresion : expresion . '+' termino  (32)
	expresion : expresion . '-' termino  (33)
	invocacion_funcion : ID '(' expresion . ')'  (44)

	')'  shift 63
	'+'  shift 58
	'-'  shift 59
	.  error


state 45
	asignacion : ID '[' CONSTANTE . ']' ASIGNACION expresion  (21)

	']'  shift 64
	.  error


state 46
	condicion : '(' . bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones ')'  (59)

	ID  shift 36
	CONSTANTE  shift 37
	.  error

	invocacion_funcion  goto 38
	expresion  goto 65
	termino  goto 40
	factor  goto 41
	bloque_list_expresiones  goto 66
	list_expresiones  goto 67


state 47
	bloque_if : IF '(' condicion . ')' THEN bloque_sentencias ELSE bloque_sentencias END_IF  (46)
	bloque_if : IF '(' condicion . ')' THEN bloque_sentencias END_IF  (47)

	')'  shift 68
	.  error


state 48
	expresion : expresion . '+' termino  (32)
	expresion : expresion . '-' termino  (33)
	condicion : expresion . comparacion expresion  (58)

	MAYORIGUAL  shift 69
	MENORIGUAL  shift 70
	DISTINTO  shift 71
	'+'  shift 58
	'-'  shift 59
	'<'  shift 72
	'>'  shift 73
	'='  shift 74
	.  error

	comparacion  goto 75


state 49
	salida_mensaje : OUTF '(' '{' . CADENA '}' ')'  (63)

	CADENA  shift 76
	.  error


state 50
	expresion : expresion . '+' termino  (32)
	expresion : expresion . '-' termino  (33)
	salida_mensaje : OUTF '(' expresion . ')'  (64)

	')'  shift 77
	'+'  shift 58
	'-'  shift 59
	.  error


state 51
	declaracion_tipo : TYPEDEF TRIPLE '<' . tipo '>' ID  (43)

	ID  shift 78
	ULONGINT  shift 8
	SINGLE  shift 9
	.  error

	tipo  goto 79


state 52
	encabezado_for : ID . ASIGNACION CONSTANTE ';' condicion ';' UP CONSTANTE  (16)
	encabezado_for : ID . ASIGNACION CONSTANTE ';' condicion ';' DOWN CONSTANTE  (17)
	encabezado_for : ID . ASIGNACION CONSTANTE ';' condicion ';' UP CONSTANTE ';' '(' condicion ')'  (18)
	encabezado_for : ID . ASIGNACION CONSTANTE ';' condicion ';' DOWN CONSTANTE ';' '(' condicion ')'  (19)

	ASIGNACION  shift 80
	.  error


state 53
	sentencia_control : FOR '(' encabezado_for . ')' sentencia_ejecutable ';'  (14)
	sentencia_control : FOR '(' encabezado_for . ')' BEGIN list_sentencias_ejecutables END  (15)

	')'  shift 81
	.  error


state 54
	list_sentencias : list_sentencias sentencia ';' .  (2)

	.  reduce 2


state 55
	declaracion_funcion : tipo FUN ID . '(' parametro ')' BEGIN cuerpo_funcion END  (27)

	'('  shift 82
	.  error


state 56
	list_variables : list_variables ',' . ID  (25)

	ID  shift 83
	.  error


state 57
	factor : ID '[' . CONSTANTE ']'  (41)

	CONSTANTE  shift 84
	.  error


state 58
	expresion : expresion '+' . termino  (32)

	ID  shift 36
	CONSTANTE  shift 37
	.  error

	invocacion_funcion  goto 38
	termino  goto 85
	factor  goto 41


state 59
	expresion : expresion '-' . termino  (33)

	ID  shift 36
	CONSTANTE  shift 37
	.  error

	invocacion_funcion  goto 38
	termino  goto 86
	factor  goto 41


state 60
	termino : termino '*' . factor  (35)

	ID  shift 36
	CONSTANTE  shift 37
	.  error

	invocacion_funcion  goto 38
	factor  goto 87


state 61
	termino : termino '/' . factor  (36)

	ID  shift 36
	CONSTANTE  shift 37
	.  error

	invocacion_funcion  goto 38
	factor  goto 88


state 62
	expresion : expresion . '+' termino  (32)
	expresion : expresion . '-' termino  (33)
	invocacion_funcion : ID '(' tipo expresion . ')'  (45)

	')'  shift 89
	'+'  shift 58
	'-'  shift 59
	.  error


state 63
	invocacion_funcion : ID '(' expresion ')' .  (44)

	.  reduce 44


state 64
	asignacion : ID '[' CONSTANTE ']' . ASIGNACION expresion  (21)

	ASIGNACION  shift 90
	.  error


state 65
	expresion : expresion . '+' termino  (32)
	expresion : expresion . '-' termino  (33)
	list_expresiones : expresion .  (62)

	'+'  shift 58
	'-'  shift 59
	','  reduce 62


state 66
	condicion : '(' bloque_list_expresiones . ')' comparacion '(' bloque_list_expresiones ')'  (59)

	')'  shift 91
	.  error


state 67
	bloque_list_expresiones : list_expresiones . ',' expresion  (60)
	list_expresiones : list_expresiones . ',' expresion  (61)

	','  shift 92
	.  error


state 68
	bloque_if : IF '(' condicion ')' . THEN bloque_sentencias ELSE bloque_sentencias END_IF  (46)
	bloque_if : IF '(' condicion ')' . THEN bloque_sentencias END_IF  (47)

	THEN  shift 93
	.  error


state 69
	comparacion : MAYORIGUAL .  (52)

	.  reduce 52


state 70
	comparacion : MENORIGUAL .  (53)

	.  reduce 53


state 71
	comparacion : DISTINTO .  (54)

	.  reduce 54


state 72
	comparacion : '<' .  (57)

	.  reduce 57


state 73
	comparacion : '>' .  (56)

	.  reduce 56


state 74
	comparacion : '=' .  (55)

	.  reduce 55


state 75
	condicion : expresion comparacion . expresion  (58)

	ID  shift 36
	CONSTANTE  shift 37
	.  error

	invocacion_funcion  goto 38
	expresion  goto 94
	termino  goto 40
	factor  goto 41


state 76
	salida_mensaje : OUTF '(' '{' CADENA . '}' ')'  (63)

	'}'  shift 95
	.  error


state 77
	salida_mensaje : OUTF '(' expresion ')' .  (64)

	.  reduce 64


state 78
	tipo : ID .  (24)

	.  reduce 24


state 79
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo . '>' ID  (43)

	'>'  shift 96
	.  error


state 80
	encabezado_for : ID ASIGNACION . CONSTANTE ';' condicion ';' UP CONSTANTE  (16)
	encabezado_for : ID ASIGNACION . CONSTANTE ';' condicion ';' DOWN CONSTANTE  (17)
	encabezado_for : ID ASIGNACION . CONSTANTE ';' condicion ';' UP CONSTANTE ';' '(' condicion ')'  (18)
	encabezado_for : ID ASIGNACION . CONSTANTE ';' condicion ';' DOWN CONSTANTE ';' '(' condicion ')'  (19)

	CONSTANTE  shift 97
	.  error


state 81
	sentencia_control : FOR '(' encabezado_for ')' . sentencia_ejecutable ';'  (14)
	sentencia_control : FOR '(' encabezado_for ')' . BEGIN list_sentencias_ejecutables END  (15)

	ID  shift 98
	IF  shift 5
	BEGIN  shift 99
	OUTF  shift 6
	FOR  shift 10
	.  error

	sentencia_ejecutable  goto 100
	asignacion  goto 18
	invocacion_funcion  goto 19
	bloque_if  goto 20
	salida_mensaje  goto 21
	sentencia_control  goto 22


state 82
	declaracion_funcion : tipo FUN ID '(' . parametro ')' BEGIN cuerpo_funcion END  (27)

	ID  shift 78
	ULONGINT  shift 8
	SINGLE  shift 9
	.  error

	tipo  goto 101
	parametro  goto 102


state 83
	list_variables : list_variables ',' ID .  (25)

	.  reduce 25


state 84
	factor : ID '[' CONSTANTE . ']'  (41)

	']'  shift 103
	.  error


state 85
	expresion : expresion '+' termino .  (32)
	termino : termino . '*' factor  (35)
	termino : termino . '/' factor  (36)

	'*'  shift 60
	'/'  shift 61
	MAYORIGUAL  reduce 32
	MENORIGUAL  reduce 32
	DISTINTO  reduce 32
	';'  reduce 32
	')'  reduce 32
	','  reduce 32
	'+'  reduce 32
	'-'  reduce 32
	'<'  reduce 32
	'>'  reduce 32
	'='  reduce 32


state 86
	expresion : expresion '-' termino .  (33)
	termino : termino . '*' factor  (35)
	termino : termino . '/' factor  (36)

	'*'  shift 60
	'/'  shift 61
	MAYORIGUAL  reduce 33
	MENORIGUAL  reduce 33
	DISTINTO  reduce 33
	';'  reduce 33
	')'  reduce 33
	','  reduce 33
	'+'  reduce 33
	'-'  reduce 33
	'<'  reduce 33
	'>'  reduce 33
	'='  reduce 33


state 87
	termino : termino '*' factor .  (35)

	.  reduce 35


state 88
	termino : termino '/' factor .  (36)

	.  reduce 36


state 89
	invocacion_funcion : ID '(' tipo expresion ')' .  (45)

	.  reduce 45


state 90
	asignacion : ID '[' CONSTANTE ']' ASIGNACION . expresion  (21)

	ID  shift 36
	CONSTANTE  shift 37
	.  error

	invocacion_funcion  goto 38
	expresion  goto 104
	termino  goto 40
	factor  goto 41


state 91
	condicion : '(' bloque_list_expresiones ')' . comparacion '(' bloque_list_expresiones ')'  (59)

	MAYORIGUAL  shift 69
	MENORIGUAL  shift 70
	DISTINTO  shift 71
	'<'  shift 72
	'>'  shift 73
	'='  shift 74
	.  error

	comparacion  goto 105


state 92
	bloque_list_expresiones : list_expresiones ',' . expresion  (60)
	list_expresiones : list_expresiones ',' . expresion  (61)

	ID  shift 36
	CONSTANTE  shift 37
	.  error

	invocacion_funcion  goto 38
	expresion  goto 106
	termino  goto 40
	factor  goto 41


state 93
	bloque_if : IF '(' condicion ')' THEN . bloque_sentencias ELSE bloque_sentencias END_IF  (46)
	bloque_if : IF '(' condicion ')' THEN . bloque_sentencias END_IF  (47)

	ID  shift 98
	IF  shift 5
	BEGIN  shift 107
	OUTF  shift 6
	FOR  shift 10
	.  error

	sentencia_ejecutable  goto 108
	asignacion  goto 18
	invocacion_funcion  goto 19
	bloque_if  goto 20
	salida_mensaje  goto 21
	sentencia_control  goto 22
	bloque_sentencias  goto 109


state 94
	expresion : expresion . '+' termino  (32)
	expresion : expresion . '-' termino  (33)
	condicion : expresion comparacion expresion .  (58)

	'+'  shift 58
	'-'  shift 59
	';'  reduce 58
	')'  reduce 58


state 95
	salida_mensaje : OUTF '(' '{' CADENA '}' . ')'  (63)

	')'  shift 110
	.  error


state 96
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo '>' . ID  (43)

	ID  shift 111
	.  error


state 97
	encabezado_for : ID ASIGNACION CONSTANTE . ';' condicion ';' UP CONSTANTE  (16)
	encabezado_for : ID ASIGNACION CONSTANTE . ';' condicion ';' DOWN CONSTANTE  (17)
	encabezado_for : ID ASIGNACION CONSTANTE . ';' condicion ';' UP CONSTANTE ';' '(' condicion ')'  (18)
	encabezado_for : ID ASIGNACION CONSTANTE . ';' condicion ';' DOWN CONSTANTE ';' '(' condicion ')'  (19)

	';'  shift 112
	.  error


state 98
	asignacion : ID . ASIGNACION expresion  (20)
	asignacion : ID . '[' CONSTANTE ']' ASIGNACION expresion  (21)
	invocacion_funcion : ID . '(' expresion ')'  (44)
	invocacion_funcion : ID . '(' tipo expresion ')'  (45)

	ASIGNACION  shift 23
	'('  shift 24
	'['  shift 25
	.  error


state 99
	sentencia_control : FOR '(' encabezado_for ')' BEGIN . list_sentencias_ejecutables END  (15)

	ID  shift 98
	IF  shift 5
	OUTF  shift 6
	FOR  shift 10
	.  error

	sentencia_ejecutable  goto 113
	asignacion  goto 18
	invocacion_funcion  goto 19
	bloque_if  goto 20
	salida_mensaje  goto 21
	sentencia_control  goto 22
	list_sentencias_ejecutables  goto 114


state 100
	sentencia_control : FOR '(' encabezado_for ')' sentencia_ejecutable . ';'  (14)

	';'  shift 115
	.  error


state 101
	parametro : tipo . ID  (28)

	ID  shift 116
	.  error


state 102
	declaracion_funcion : tipo FUN ID '(' parametro . ')' BEGIN cuerpo_funcion END  (27)

	')'  shift 117
	.  error


state 103
	factor : ID '[' CONSTANTE ']' .  (41)

	.  reduce 41


state 104
	asignacion : ID '[' CONSTANTE ']' ASIGNACION expresion .  (21)
	expresion : expresion . '+' termino  (32)
	expresion : expresion . '-' termino  (33)

	'+'  shift 58
	'-'  shift 59
	';'  reduce 21


state 105
	condicion : '(' bloque_list_expresiones ')' comparacion . '(' bloque_list_expresiones ')'  (59)

	'('  shift 118
	.  error


state 106
	expresion : expresion . '+' termino  (32)
	expresion : expresion . '-' termino  (33)
	bloque_list_expresiones : list_expresiones ',' expresion .  (60)
	list_expresiones : list_expresiones ',' expresion .  (61)

	'+'  shift 58
	'-'  shift 59
	')'  reduce 60
	','  reduce 61


state 107
	bloque_sentencias : BEGIN . list_sentencias_ejecutables END  (49)

	ID  shift 98
	IF  shift 5
	OUTF  shift 6
	FOR  shift 10
	.  error

	sentencia_ejecutable  goto 113
	asignacion  goto 18
	invocacion_funcion  goto 19
	bloque_if  goto 20
	salida_mensaje  goto 21
	sentencia_control  goto 22
	list_sentencias_ejecutables  goto 119


state 108
	bloque_sentencias : sentencia_ejecutable . ';'  (48)

	';'  shift 120
	.  error


state 109
	bloque_if : IF '(' condicion ')' THEN bloque_sentencias . ELSE bloque_sentencias END_IF  (46)
	bloque_if : IF '(' condicion ')' THEN bloque_sentencias . END_IF  (47)

	ELSE  shift 121
	END_IF  shift 122
	.  error


state 110
	salida_mensaje : OUTF '(' '{' CADENA '}' ')' .  (63)

	.  reduce 63


state 111
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo '>' ID .  (43)

	.  reduce 43


state 112
	encabezado_for : ID ASIGNACION CONSTANTE ';' . condicion ';' UP CONSTANTE  (16)
	encabezado_for : ID ASIGNACION CONSTANTE ';' . condicion ';' DOWN CONSTANTE  (17)
	encabezado_for : ID ASIGNACION CONSTANTE ';' . condicion ';' UP CONSTANTE ';' '(' condicion ')'  (18)
	encabezado_for : ID ASIGNACION CONSTANTE ';' . condicion ';' DOWN CONSTANTE ';' '(' condicion ')'  (19)

	ID  shift 36
	CONSTANTE  shift 37
	'('  shift 46
	.  error

	invocacion_funcion  goto 38
	condicion  goto 123
	expresion  goto 48
	termino  goto 40
	factor  goto 41


state 113
	list_sentencias_ejecutables : sentencia_ejecutable . ';'  (51)

	';'  shift 124
	.  error


state 114
	sentencia_control : FOR '(' encabezado_for ')' BEGIN list_sentencias_ejecutables . END  (15)
	list_sentencias_ejecutables : list_sentencias_ejecutables . sentencia_ejecutable ';'  (50)

	ID  shift 98
	IF  shift 5
	END  shift 125
	OUTF  shift 6
	FOR  shift 10
	.  error

	sentencia_ejecutable  goto 126
	asignacion  goto 18
	invocacion_funcion  goto 19
	bloque_if  goto 20
	salida_mensaje  goto 21
	sentencia_control  goto 22


state 115
	sentencia_control : FOR '(' encabezado_for ')' sentencia_ejecutable ';' .  (14)

	.  reduce 14


state 116
	parametro : tipo ID .  (28)

	.  reduce 28


state 117
	declaracion_funcion : tipo FUN ID '(' parametro ')' . BEGIN cuerpo_funcion END  (27)

	BEGIN  shift 127
	.  error


state 118
	condicion : '(' bloque_list_expresiones ')' comparacion '(' . bloque_list_expresiones ')'  (59)

	ID  shift 36
	CONSTANTE  shift 37
	.  error

	invocacion_funcion  goto 38
	expresion  goto 65
	termino  goto 40
	factor  goto 41
	bloque_list_expresiones  goto 128
	list_expresiones  goto 67


state 119
	bloque_sentencias : BEGIN list_sentencias_ejecutables . END  (49)
	list_sentencias_ejecutables : list_sentencias_ejecutables . sentencia_ejecutable ';'  (50)

	ID  shift 98
	IF  shift 5
	END  shift 129
	OUTF  shift 6
	FOR  shift 10
	.  error

	sentencia_ejecutable  goto 126
	asignacion  goto 18
	invocacion_funcion  goto 19
	bloque_if  goto 20
	salida_mensaje  goto 21
	sentencia_control  goto 22


state 120
	bloque_sentencias : sentencia_ejecutable ';' .  (48)

	.  reduce 48


state 121
	bloque_if : IF '(' condicion ')' THEN bloque_sentencias ELSE . bloque_sentencias END_IF  (46)

	ID  shift 98
	IF  shift 5
	BEGIN  shift 107
	OUTF  shift 6
	FOR  shift 10
	.  error

	sentencia_ejecutable  goto 108
	asignacion  goto 18
	invocacion_funcion  goto 19
	bloque_if  goto 20
	salida_mensaje  goto 21
	sentencia_control  goto 22
	bloque_sentencias  goto 130


state 122
	bloque_if : IF '(' condicion ')' THEN bloque_sentencias END_IF .  (47)

	.  reduce 47


state 123
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion . ';' UP CONSTANTE  (16)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion . ';' DOWN CONSTANTE  (17)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion . ';' UP CONSTANTE ';' '(' condicion ')'  (18)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion . ';' DOWN CONSTANTE ';' '(' condicion ')'  (19)

	';'  shift 131
	.  error


state 124
	list_sentencias_ejecutables : sentencia_ejecutable ';' .  (51)

	.  reduce 51


state 125
	sentencia_control : FOR '(' encabezado_for ')' BEGIN list_sentencias_ejecutables END .  (15)

	.  reduce 15


state 126
	list_sentencias_ejecutables : list_sentencias_ejecutables sentencia_ejecutable . ';'  (50)

	';'  shift 132
	.  error


state 127
	declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN . cuerpo_funcion END  (27)
	declaracion_tipo : .  (42)

	ID  shift 4
	IF  shift 5
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 133
	ULONGINT  shift 8
	SINGLE  shift 9
	FOR  shift 10
	';'  reduce 42

	list_sentencias  goto 134
	sentencia  goto 12
	sentencia_declarativa  goto 13
	sentencia_ejecutable  goto 14
	tipo  goto 15
	declaracion_funcion  goto 16
	declaracion_tipo  goto 17
	asignacion  goto 18
	invocacion_funcion  goto 19
	bloque_if  goto 20
	salida_mensaje  goto 21
	sentencia_control  goto 22
	cuerpo_funcion  goto 135


state 128
	condicion : '(' bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones . ')'  (59)

	')'  shift 136
	.  error


state 129
	bloque_sentencias : BEGIN list_sentencias_ejecutables END .  (49)

	.  reduce 49


state 130
	bloque_if : IF '(' condicion ')' THEN bloque_sentencias ELSE bloque_sentencias . END_IF  (46)

	END_IF  shift 137
	.  error


state 131
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' . UP CONSTANTE  (16)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' . DOWN CONSTANTE  (17)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' . UP CONSTANTE ';' '(' condicion ')'  (18)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' . DOWN CONSTANTE ';' '(' condicion ')'  (19)

	UP  shift 138
	DOWN  shift 139
	.  error


state 132
	list_sentencias_ejecutables : list_sentencias_ejecutables sentencia_ejecutable ';' .  (50)

	.  reduce 50


state 133
	cuerpo_funcion : RET . '(' expresion ')'  (31)

	'('  shift 140
	.  error


state 134
	list_sentencias : list_sentencias . sentencia ';'  (2)
	cuerpo_funcion : list_sentencias .  (29)
	cuerpo_funcion : list_sentencias . RET '(' expresion ')'  (30)
	declaracion_tipo : .  (42)

	ID  shift 4
	IF  shift 5
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 141
	ULONGINT  shift 8
	SINGLE  shift 9
	FOR  shift 10
	END  reduce 29
	';'  reduce 42

	sentencia  goto 31
	sentencia_declarativa  goto 13
	sentencia_ejecutable  goto 14
	tipo  goto 15
	declaracion_funcion  goto 16
	declaracion_tipo  goto 17
	asignacion  goto 18
	invocacion_funcion  goto 19
	bloque_if  goto 20
	salida_mensaje  goto 21
	sentencia_control  goto 22


state 135
	declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN cuerpo_funcion . END  (27)

	END  shift 142
	.  error


state 136
	condicion : '(' bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones ')' .  (59)

	.  reduce 59


state 137
	bloque_if : IF '(' condicion ')' THEN bloque_sentencias ELSE bloque_sentencias END_IF .  (46)

	.  reduce 46


state 138
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' UP . CONSTANTE  (16)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' UP . CONSTANTE ';' '(' condicion ')'  (18)

	CONSTANTE  shift 143
	.  error


state 139
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' DOWN . CONSTANTE  (17)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' DOWN . CONSTANTE ';' '(' condicion ')'  (19)

	CONSTANTE  shift 144
	.  error


state 140
	cuerpo_funcion : RET '(' . expresion ')'  (31)

	ID  shift 36
	CONSTANTE  shift 37
	.  error

	invocacion_funcion  goto 38
	expresion  goto 145
	termino  goto 40
	factor  goto 41


state 141
	cuerpo_funcion : list_sentencias RET . '(' expresion ')'  (30)

	'('  shift 146
	.  error


state 142
	declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN cuerpo_funcion END .  (27)

	.  reduce 27


state 143
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' UP CONSTANTE .  (16)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' UP CONSTANTE . ';' '(' condicion ')'  (18)

	';'  shift 147
	')'  reduce 16


state 144
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' DOWN CONSTANTE .  (17)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' DOWN CONSTANTE . ';' '(' condicion ')'  (19)

	';'  shift 148
	')'  reduce 17


state 145
	cuerpo_funcion : RET '(' expresion . ')'  (31)
	expresion : expresion . '+' termino  (32)
	expresion : expresion . '-' termino  (33)

	')'  shift 149
	'+'  shift 58
	'-'  shift 59
	.  error


state 146
	cuerpo_funcion : list_sentencias RET '(' . expresion ')'  (30)

	ID  shift 36
	CONSTANTE  shift 37
	.  error

	invocacion_funcion  goto 38
	expresion  goto 150
	termino  goto 40
	factor  goto 41


state 147
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' UP CONSTANTE ';' . '(' condicion ')'  (18)

	'('  shift 151
	.  error


state 148
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' DOWN CONSTANTE ';' . '(' condicion ')'  (19)

	'('  shift 152
	.  error


state 149
	cuerpo_funcion : RET '(' expresion ')' .  (31)

	.  reduce 31


state 150
	cuerpo_funcion : list_sentencias RET '(' expresion . ')'  (30)
	expresion : expresion . '+' termino  (32)
	expresion : expresion . '-' termino  (33)

	')'  shift 153
	'+'  shift 58
	'-'  shift 59
	.  error


state 151
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' UP CONSTANTE ';' '(' . condicion ')'  (18)

	ID  shift 36
	CONSTANTE  shift 37
	'('  shift 46
	.  error

	invocacion_funcion  goto 38
	condicion  goto 154
	expresion  goto 48
	termino  goto 40
	factor  goto 41


state 152
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' DOWN CONSTANTE ';' '(' . condicion ')'  (19)

	ID  shift 36
	CONSTANTE  shift 37
	'('  shift 46
	.  error

	invocacion_funcion  goto 38
	condicion  goto 155
	expresion  goto 48
	termino  goto 40
	factor  goto 41


state 153
	cuerpo_funcion : list_sentencias RET '(' expresion ')' .  (30)

	.  reduce 30


state 154
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' UP CONSTANTE ';' '(' condicion . ')'  (18)

	')'  shift 156
	.  error


state 155
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' DOWN CONSTANTE ';' '(' condicion . ')'  (19)

	')'  shift 157
	.  error


state 156
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' UP CONSTANTE ';' '(' condicion ')' .  (18)

	.  reduce 18


state 157
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' DOWN CONSTANTE ';' '(' condicion ')' .  (19)

	.  reduce 19


41 terminals, 27 nonterminals
65 grammar rules, 158 states
