   0  $accept : programa $end

   1  programa : ID BEGIN list_sentencias END
   2           | ID BEGIN END

   3  list_sentencias : list_sentencias sentencia ';'
   4                  | sentencia ';'

   5  sentencia : sentencia_declarativa
   6            | sentencia_ejecutable

   7  sentencia_declarativa : tipo list_variables
   8                        | declaracion_funcion
   9                        | declaracion_tipo

  10  sentencia_ejecutable : asignacion
  11                       | invocacion_funcion
  12                       | bloque_if
  13                       | salida_mensaje
  14                       | sentencia_control

  15  sentencia_control : FOR '(' encabezado_for ')' bloque_sentencias_ejecutables ';'

  16  encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' UP CONSTANTE
  17                 | ID ASIGNACION CONSTANTE ';' condicion ';' DOWN CONSTANTE
  18                 | ID ASIGNACION CONSTANTE ';' condicion ';' UP CONSTANTE ';' '(' condicion ')'
  19                 | ID ASIGNACION CONSTANTE ';' condicion ';' DOWN CONSTANTE ';' '(' condicion ')'

  20  asignacion : ID ASIGNACION expresion
  21             | ID '[' CONSTANTE ']' ASIGNACION expresion

  22  tipo : ULONGINT
  23       | SINGLE
  24       | ID

  25  tipo_base : ULONGINT
  26            | SINGLE

  27  list_variables : list_variables ',' ID
  28                 | ID

  29  declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN cuerpo_funcion END

  30  parametro : tipo ID

  31  cuerpo_funcion : list_sentencias
  32                 | list_sentencias RET '(' expresion ')'
  33                 | RET '(' expresion ')'

  34  expresion : expresion '+' termino
  35            | expresion '-' termino
  36            | termino

  37  termino : termino '*' factor
  38          | termino '/' factor
  39          | factor

  40  factor : ID
  41         | CONSTANTE
  42         | invocacion_funcion
  43         | ID '[' CONSTANTE ']'

  44  declaracion_tipo :
  45                   | TYPEDEF TRIPLE '<' tipo_base '>' ID

  46  invocacion_funcion : ID '(' expresion ')'
  47                     | ID '(' tipo_base '(' expresion ')' ')'

  48  bloque_if : IF '(' condicion ')' THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF
  49            | IF '(' condicion ')' THEN bloque_sentencias_ejecutables END_IF

  50  bloque_sentencias_ejecutables : sentencia_ejecutable ';'
  51                                | BEGIN list_sentencias_ejecutables END

  52  list_sentencias_ejecutables : list_sentencias_ejecutables sentencia_ejecutable ';'
  53                              | sentencia_ejecutable ';'

  54  comparacion : MAYORIGUAL
  55              | MENORIGUAL
  56              | DISTINTO
  57              | '='
  58              | '>'
  59              | '<'

  60  condicion : expresion comparacion expresion
  61            | '(' bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones ')'

  62  bloque_list_expresiones : list_expresiones ',' expresion

  63  list_expresiones : list_expresiones ',' expresion
  64                   | expresion

  65  salida_mensaje : OUTF '(' '{' CADENA '}' ')'
  66                 | OUTF '(' expresion ')'

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	.  error

	programa  goto 2


state 1
	programa : ID . BEGIN list_sentencias END  (1)
	programa : ID . BEGIN END  (2)

	BEGIN  shift 3
	.  error


state 2
	$accept : programa . $end  (0)

	$end  accept


state 3
	programa : ID BEGIN . list_sentencias END  (1)
	programa : ID BEGIN . END  (2)
	declaracion_tipo : .  (44)

	ID  shift 4
	IF  shift 5
	END  shift 6
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	';'  reduce 44

	list_sentencias  goto 12
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23


state 4
	asignacion : ID . ASIGNACION expresion  (20)
	asignacion : ID . '[' CONSTANTE ']' ASIGNACION expresion  (21)
	tipo : ID .  (24)
	invocacion_funcion : ID . '(' expresion ')'  (46)
	invocacion_funcion : ID . '(' tipo_base '(' expresion ')' ')'  (47)

	ASIGNACION  shift 24
	'('  shift 25
	'['  shift 26
	ID  reduce 24
	FUN  reduce 24


state 5
	bloque_if : IF . '(' condicion ')' THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF  (48)
	bloque_if : IF . '(' condicion ')' THEN bloque_sentencias_ejecutables END_IF  (49)

	'('  shift 27
	.  error


state 6
	programa : ID BEGIN END .  (2)

	.  reduce 2


state 7
	salida_mensaje : OUTF . '(' '{' CADENA '}' ')'  (65)
	salida_mensaje : OUTF . '(' expresion ')'  (66)

	'('  shift 28
	.  error


state 8
	declaracion_tipo : TYPEDEF . TRIPLE '<' tipo_base '>' ID  (45)

	TRIPLE  shift 29
	.  error


state 9
	tipo : ULONGINT .  (22)

	.  reduce 22


state 10
	tipo : SINGLE .  (23)

	.  reduce 23


state 11
	sentencia_control : FOR . '(' encabezado_for ')' bloque_sentencias_ejecutables ';'  (15)

	'('  shift 30
	.  error


state 12
	programa : ID BEGIN list_sentencias . END  (1)
	list_sentencias : list_sentencias . sentencia ';'  (3)
	declaracion_tipo : .  (44)

	ID  shift 4
	IF  shift 5
	END  shift 31
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	';'  reduce 44

	sentencia  goto 32
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23


state 13
	list_sentencias : sentencia . ';'  (4)

	';'  shift 33
	.  error


state 14
	sentencia : sentencia_declarativa .  (5)

	.  reduce 5


state 15
	sentencia : sentencia_ejecutable .  (6)

	.  reduce 6


state 16
	sentencia_declarativa : tipo . list_variables  (7)
	declaracion_funcion : tipo . FUN ID '(' parametro ')' BEGIN cuerpo_funcion END  (29)

	ID  shift 34
	FUN  shift 35
	.  error

	list_variables  goto 36


state 17
	sentencia_declarativa : declaracion_funcion .  (8)

	.  reduce 8


state 18
	sentencia_declarativa : declaracion_tipo .  (9)

	.  reduce 9


state 19
	sentencia_ejecutable : asignacion .  (10)

	.  reduce 10


state 20
	sentencia_ejecutable : invocacion_funcion .  (11)

	.  reduce 11


state 21
	sentencia_ejecutable : bloque_if .  (12)

	.  reduce 12


state 22
	sentencia_ejecutable : salida_mensaje .  (13)

	.  reduce 13


state 23
	sentencia_ejecutable : sentencia_control .  (14)

	.  reduce 14


state 24
	asignacion : ID ASIGNACION . expresion  (20)

	ID  shift 37
	CONSTANTE  shift 38
	.  error

	invocacion_funcion  goto 39
	expresion  goto 40
	termino  goto 41
	factor  goto 42


state 25
	invocacion_funcion : ID '(' . expresion ')'  (46)
	invocacion_funcion : ID '(' . tipo_base '(' expresion ')' ')'  (47)

	ID  shift 37
	CONSTANTE  shift 38
	ULONGINT  shift 43
	SINGLE  shift 44
	.  error

	invocacion_funcion  goto 39
	expresion  goto 45
	tipo_base  goto 46
	termino  goto 41
	factor  goto 42


state 26
	asignacion : ID '[' . CONSTANTE ']' ASIGNACION expresion  (21)

	CONSTANTE  shift 47
	.  error


state 27
	bloque_if : IF '(' . condicion ')' THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF  (48)
	bloque_if : IF '(' . condicion ')' THEN bloque_sentencias_ejecutables END_IF  (49)

	ID  shift 37
	CONSTANTE  shift 38
	'('  shift 48
	.  error

	invocacion_funcion  goto 39
	condicion  goto 49
	expresion  goto 50
	termino  goto 41
	factor  goto 42


state 28
	salida_mensaje : OUTF '(' . '{' CADENA '}' ')'  (65)
	salida_mensaje : OUTF '(' . expresion ')'  (66)

	ID  shift 37
	CONSTANTE  shift 38
	'{'  shift 51
	.  error

	invocacion_funcion  goto 39
	expresion  goto 52
	termino  goto 41
	factor  goto 42


state 29
	declaracion_tipo : TYPEDEF TRIPLE . '<' tipo_base '>' ID  (45)

	'<'  shift 53
	.  error


state 30
	sentencia_control : FOR '(' . encabezado_for ')' bloque_sentencias_ejecutables ';'  (15)

	ID  shift 54
	.  error

	encabezado_for  goto 55


state 31
	programa : ID BEGIN list_sentencias END .  (1)

	.  reduce 1


state 32
	list_sentencias : list_sentencias sentencia . ';'  (3)

	';'  shift 56
	.  error


state 33
	list_sentencias : sentencia ';' .  (4)

	.  reduce 4


state 34
	list_variables : ID .  (28)

	.  reduce 28


state 35
	declaracion_funcion : tipo FUN . ID '(' parametro ')' BEGIN cuerpo_funcion END  (29)

	ID  shift 57
	.  error


state 36
	sentencia_declarativa : tipo list_variables .  (7)
	list_variables : list_variables . ',' ID  (27)

	','  shift 58
	';'  reduce 7


state 37
	factor : ID .  (40)
	factor : ID . '[' CONSTANTE ']'  (43)
	invocacion_funcion : ID . '(' expresion ')'  (46)
	invocacion_funcion : ID . '(' tipo_base '(' expresion ')' ')'  (47)

	'('  shift 25
	'['  shift 59
	MAYORIGUAL  reduce 40
	MENORIGUAL  reduce 40
	DISTINTO  reduce 40
	';'  reduce 40
	')'  reduce 40
	','  reduce 40
	'+'  reduce 40
	'-'  reduce 40
	'*'  reduce 40
	'/'  reduce 40
	'<'  reduce 40
	'>'  reduce 40
	'='  reduce 40


state 38
	factor : CONSTANTE .  (41)

	.  reduce 41


state 39
	factor : invocacion_funcion .  (42)

	.  reduce 42


state 40
	asignacion : ID ASIGNACION expresion .  (20)
	expresion : expresion . '+' termino  (34)
	expresion : expresion . '-' termino  (35)

	'+'  shift 60
	'-'  shift 61
	';'  reduce 20


state 41
	expresion : termino .  (36)
	termino : termino . '*' factor  (37)
	termino : termino . '/' factor  (38)

	'*'  shift 62
	'/'  shift 63
	MAYORIGUAL  reduce 36
	MENORIGUAL  reduce 36
	DISTINTO  reduce 36
	';'  reduce 36
	')'  reduce 36
	','  reduce 36
	'+'  reduce 36
	'-'  reduce 36
	'<'  reduce 36
	'>'  reduce 36
	'='  reduce 36


state 42
	termino : factor .  (39)

	.  reduce 39


state 43
	tipo_base : ULONGINT .  (25)

	.  reduce 25


state 44
	tipo_base : SINGLE .  (26)

	.  reduce 26


state 45
	expresion : expresion . '+' termino  (34)
	expresion : expresion . '-' termino  (35)
	invocacion_funcion : ID '(' expresion . ')'  (46)

	')'  shift 64
	'+'  shift 60
	'-'  shift 61
	.  error


state 46
	invocacion_funcion : ID '(' tipo_base . '(' expresion ')' ')'  (47)

	'('  shift 65
	.  error


state 47
	asignacion : ID '[' CONSTANTE . ']' ASIGNACION expresion  (21)

	']'  shift 66
	.  error


state 48
	condicion : '(' . bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones ')'  (61)

	ID  shift 37
	CONSTANTE  shift 38
	.  error

	invocacion_funcion  goto 39
	expresion  goto 67
	termino  goto 41
	factor  goto 42
	bloque_list_expresiones  goto 68
	list_expresiones  goto 69


state 49
	bloque_if : IF '(' condicion . ')' THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF  (48)
	bloque_if : IF '(' condicion . ')' THEN bloque_sentencias_ejecutables END_IF  (49)

	')'  shift 70
	.  error


state 50
	expresion : expresion . '+' termino  (34)
	expresion : expresion . '-' termino  (35)
	condicion : expresion . comparacion expresion  (60)

	MAYORIGUAL  shift 71
	MENORIGUAL  shift 72
	DISTINTO  shift 73
	'+'  shift 60
	'-'  shift 61
	'<'  shift 74
	'>'  shift 75
	'='  shift 76
	.  error

	comparacion  goto 77


state 51
	salida_mensaje : OUTF '(' '{' . CADENA '}' ')'  (65)

	CADENA  shift 78
	.  error


state 52
	expresion : expresion . '+' termino  (34)
	expresion : expresion . '-' termino  (35)
	salida_mensaje : OUTF '(' expresion . ')'  (66)

	')'  shift 79
	'+'  shift 60
	'-'  shift 61
	.  error


state 53
	declaracion_tipo : TYPEDEF TRIPLE '<' . tipo_base '>' ID  (45)

	ULONGINT  shift 43
	SINGLE  shift 44
	.  error

	tipo_base  goto 80


state 54
	encabezado_for : ID . ASIGNACION CONSTANTE ';' condicion ';' UP CONSTANTE  (16)
	encabezado_for : ID . ASIGNACION CONSTANTE ';' condicion ';' DOWN CONSTANTE  (17)
	encabezado_for : ID . ASIGNACION CONSTANTE ';' condicion ';' UP CONSTANTE ';' '(' condicion ')'  (18)
	encabezado_for : ID . ASIGNACION CONSTANTE ';' condicion ';' DOWN CONSTANTE ';' '(' condicion ')'  (19)

	ASIGNACION  shift 81
	.  error


state 55
	sentencia_control : FOR '(' encabezado_for . ')' bloque_sentencias_ejecutables ';'  (15)

	')'  shift 82
	.  error


state 56
	list_sentencias : list_sentencias sentencia ';' .  (3)

	.  reduce 3


state 57
	declaracion_funcion : tipo FUN ID . '(' parametro ')' BEGIN cuerpo_funcion END  (29)

	'('  shift 83
	.  error


state 58
	list_variables : list_variables ',' . ID  (27)

	ID  shift 84
	.  error


state 59
	factor : ID '[' . CONSTANTE ']'  (43)

	CONSTANTE  shift 85
	.  error


state 60
	expresion : expresion '+' . termino  (34)

	ID  shift 37
	CONSTANTE  shift 38
	.  error

	invocacion_funcion  goto 39
	termino  goto 86
	factor  goto 42


state 61
	expresion : expresion '-' . termino  (35)

	ID  shift 37
	CONSTANTE  shift 38
	.  error

	invocacion_funcion  goto 39
	termino  goto 87
	factor  goto 42


state 62
	termino : termino '*' . factor  (37)

	ID  shift 37
	CONSTANTE  shift 38
	.  error

	invocacion_funcion  goto 39
	factor  goto 88


state 63
	termino : termino '/' . factor  (38)

	ID  shift 37
	CONSTANTE  shift 38
	.  error

	invocacion_funcion  goto 39
	factor  goto 89


state 64
	invocacion_funcion : ID '(' expresion ')' .  (46)

	.  reduce 46


state 65
	invocacion_funcion : ID '(' tipo_base '(' . expresion ')' ')'  (47)

	ID  shift 37
	CONSTANTE  shift 38
	.  error

	invocacion_funcion  goto 39
	expresion  goto 90
	termino  goto 41
	factor  goto 42


state 66
	asignacion : ID '[' CONSTANTE ']' . ASIGNACION expresion  (21)

	ASIGNACION  shift 91
	.  error


state 67
	expresion : expresion . '+' termino  (34)
	expresion : expresion . '-' termino  (35)
	list_expresiones : expresion .  (64)

	'+'  shift 60
	'-'  shift 61
	','  reduce 64


state 68
	condicion : '(' bloque_list_expresiones . ')' comparacion '(' bloque_list_expresiones ')'  (61)

	')'  shift 92
	.  error


state 69
	bloque_list_expresiones : list_expresiones . ',' expresion  (62)
	list_expresiones : list_expresiones . ',' expresion  (63)

	','  shift 93
	.  error


state 70
	bloque_if : IF '(' condicion ')' . THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF  (48)
	bloque_if : IF '(' condicion ')' . THEN bloque_sentencias_ejecutables END_IF  (49)

	THEN  shift 94
	.  error


state 71
	comparacion : MAYORIGUAL .  (54)

	.  reduce 54


state 72
	comparacion : MENORIGUAL .  (55)

	.  reduce 55


state 73
	comparacion : DISTINTO .  (56)

	.  reduce 56


state 74
	comparacion : '<' .  (59)

	.  reduce 59


state 75
	comparacion : '>' .  (58)

	.  reduce 58


state 76
	comparacion : '=' .  (57)

	.  reduce 57


state 77
	condicion : expresion comparacion . expresion  (60)

	ID  shift 37
	CONSTANTE  shift 38
	.  error

	invocacion_funcion  goto 39
	expresion  goto 95
	termino  goto 41
	factor  goto 42


state 78
	salida_mensaje : OUTF '(' '{' CADENA . '}' ')'  (65)

	'}'  shift 96
	.  error


state 79
	salida_mensaje : OUTF '(' expresion ')' .  (66)

	.  reduce 66


state 80
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base . '>' ID  (45)

	'>'  shift 97
	.  error


state 81
	encabezado_for : ID ASIGNACION . CONSTANTE ';' condicion ';' UP CONSTANTE  (16)
	encabezado_for : ID ASIGNACION . CONSTANTE ';' condicion ';' DOWN CONSTANTE  (17)
	encabezado_for : ID ASIGNACION . CONSTANTE ';' condicion ';' UP CONSTANTE ';' '(' condicion ')'  (18)
	encabezado_for : ID ASIGNACION . CONSTANTE ';' condicion ';' DOWN CONSTANTE ';' '(' condicion ')'  (19)

	CONSTANTE  shift 98
	.  error


state 82
	sentencia_control : FOR '(' encabezado_for ')' . bloque_sentencias_ejecutables ';'  (15)

	ID  shift 99
	IF  shift 5
	BEGIN  shift 100
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 101
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 102


state 83
	declaracion_funcion : tipo FUN ID '(' . parametro ')' BEGIN cuerpo_funcion END  (29)

	ID  shift 103
	ULONGINT  shift 9
	SINGLE  shift 10
	.  error

	tipo  goto 104
	parametro  goto 105


state 84
	list_variables : list_variables ',' ID .  (27)

	.  reduce 27


state 85
	factor : ID '[' CONSTANTE . ']'  (43)

	']'  shift 106
	.  error


state 86
	expresion : expresion '+' termino .  (34)
	termino : termino . '*' factor  (37)
	termino : termino . '/' factor  (38)

	'*'  shift 62
	'/'  shift 63
	MAYORIGUAL  reduce 34
	MENORIGUAL  reduce 34
	DISTINTO  reduce 34
	';'  reduce 34
	')'  reduce 34
	','  reduce 34
	'+'  reduce 34
	'-'  reduce 34
	'<'  reduce 34
	'>'  reduce 34
	'='  reduce 34


state 87
	expresion : expresion '-' termino .  (35)
	termino : termino . '*' factor  (37)
	termino : termino . '/' factor  (38)

	'*'  shift 62
	'/'  shift 63
	MAYORIGUAL  reduce 35
	MENORIGUAL  reduce 35
	DISTINTO  reduce 35
	';'  reduce 35
	')'  reduce 35
	','  reduce 35
	'+'  reduce 35
	'-'  reduce 35
	'<'  reduce 35
	'>'  reduce 35
	'='  reduce 35


state 88
	termino : termino '*' factor .  (37)

	.  reduce 37


state 89
	termino : termino '/' factor .  (38)

	.  reduce 38


state 90
	expresion : expresion . '+' termino  (34)
	expresion : expresion . '-' termino  (35)
	invocacion_funcion : ID '(' tipo_base '(' expresion . ')' ')'  (47)

	')'  shift 107
	'+'  shift 60
	'-'  shift 61
	.  error


state 91
	asignacion : ID '[' CONSTANTE ']' ASIGNACION . expresion  (21)

	ID  shift 37
	CONSTANTE  shift 38
	.  error

	invocacion_funcion  goto 39
	expresion  goto 108
	termino  goto 41
	factor  goto 42


state 92
	condicion : '(' bloque_list_expresiones ')' . comparacion '(' bloque_list_expresiones ')'  (61)

	MAYORIGUAL  shift 71
	MENORIGUAL  shift 72
	DISTINTO  shift 73
	'<'  shift 74
	'>'  shift 75
	'='  shift 76
	.  error

	comparacion  goto 109


state 93
	bloque_list_expresiones : list_expresiones ',' . expresion  (62)
	list_expresiones : list_expresiones ',' . expresion  (63)

	ID  shift 37
	CONSTANTE  shift 38
	.  error

	invocacion_funcion  goto 39
	expresion  goto 110
	termino  goto 41
	factor  goto 42


state 94
	bloque_if : IF '(' condicion ')' THEN . bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF  (48)
	bloque_if : IF '(' condicion ')' THEN . bloque_sentencias_ejecutables END_IF  (49)

	ID  shift 99
	IF  shift 5
	BEGIN  shift 100
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 101
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 111


state 95
	expresion : expresion . '+' termino  (34)
	expresion : expresion . '-' termino  (35)
	condicion : expresion comparacion expresion .  (60)

	'+'  shift 60
	'-'  shift 61
	';'  reduce 60
	')'  reduce 60


state 96
	salida_mensaje : OUTF '(' '{' CADENA '}' . ')'  (65)

	')'  shift 112
	.  error


state 97
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' . ID  (45)

	ID  shift 113
	.  error


state 98
	encabezado_for : ID ASIGNACION CONSTANTE . ';' condicion ';' UP CONSTANTE  (16)
	encabezado_for : ID ASIGNACION CONSTANTE . ';' condicion ';' DOWN CONSTANTE  (17)
	encabezado_for : ID ASIGNACION CONSTANTE . ';' condicion ';' UP CONSTANTE ';' '(' condicion ')'  (18)
	encabezado_for : ID ASIGNACION CONSTANTE . ';' condicion ';' DOWN CONSTANTE ';' '(' condicion ')'  (19)

	';'  shift 114
	.  error


state 99
	asignacion : ID . ASIGNACION expresion  (20)
	asignacion : ID . '[' CONSTANTE ']' ASIGNACION expresion  (21)
	invocacion_funcion : ID . '(' expresion ')'  (46)
	invocacion_funcion : ID . '(' tipo_base '(' expresion ')' ')'  (47)

	ASIGNACION  shift 24
	'('  shift 25
	'['  shift 26
	.  error


state 100
	bloque_sentencias_ejecutables : BEGIN . list_sentencias_ejecutables END  (51)

	ID  shift 99
	IF  shift 5
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 115
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	list_sentencias_ejecutables  goto 116


state 101
	bloque_sentencias_ejecutables : sentencia_ejecutable . ';'  (50)

	';'  shift 117
	.  error


state 102
	sentencia_control : FOR '(' encabezado_for ')' bloque_sentencias_ejecutables . ';'  (15)

	';'  shift 118
	.  error


state 103
	tipo : ID .  (24)

	.  reduce 24


state 104
	parametro : tipo . ID  (30)

	ID  shift 119
	.  error


state 105
	declaracion_funcion : tipo FUN ID '(' parametro . ')' BEGIN cuerpo_funcion END  (29)

	')'  shift 120
	.  error


state 106
	factor : ID '[' CONSTANTE ']' .  (43)

	.  reduce 43


state 107
	invocacion_funcion : ID '(' tipo_base '(' expresion ')' . ')'  (47)

	')'  shift 121
	.  error


state 108
	asignacion : ID '[' CONSTANTE ']' ASIGNACION expresion .  (21)
	expresion : expresion . '+' termino  (34)
	expresion : expresion . '-' termino  (35)

	'+'  shift 60
	'-'  shift 61
	';'  reduce 21


state 109
	condicion : '(' bloque_list_expresiones ')' comparacion . '(' bloque_list_expresiones ')'  (61)

	'('  shift 122
	.  error


state 110
	expresion : expresion . '+' termino  (34)
	expresion : expresion . '-' termino  (35)
	bloque_list_expresiones : list_expresiones ',' expresion .  (62)
	list_expresiones : list_expresiones ',' expresion .  (63)

	'+'  shift 60
	'-'  shift 61
	')'  reduce 62
	','  reduce 63


state 111
	bloque_if : IF '(' condicion ')' THEN bloque_sentencias_ejecutables . ELSE bloque_sentencias_ejecutables END_IF  (48)
	bloque_if : IF '(' condicion ')' THEN bloque_sentencias_ejecutables . END_IF  (49)

	ELSE  shift 123
	END_IF  shift 124
	.  error


state 112
	salida_mensaje : OUTF '(' '{' CADENA '}' ')' .  (65)

	.  reduce 65


state 113
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' ID .  (45)

	.  reduce 45


state 114
	encabezado_for : ID ASIGNACION CONSTANTE ';' . condicion ';' UP CONSTANTE  (16)
	encabezado_for : ID ASIGNACION CONSTANTE ';' . condicion ';' DOWN CONSTANTE  (17)
	encabezado_for : ID ASIGNACION CONSTANTE ';' . condicion ';' UP CONSTANTE ';' '(' condicion ')'  (18)
	encabezado_for : ID ASIGNACION CONSTANTE ';' . condicion ';' DOWN CONSTANTE ';' '(' condicion ')'  (19)

	ID  shift 37
	CONSTANTE  shift 38
	'('  shift 48
	.  error

	invocacion_funcion  goto 39
	condicion  goto 125
	expresion  goto 50
	termino  goto 41
	factor  goto 42


state 115
	list_sentencias_ejecutables : sentencia_ejecutable . ';'  (53)

	';'  shift 126
	.  error


state 116
	bloque_sentencias_ejecutables : BEGIN list_sentencias_ejecutables . END  (51)
	list_sentencias_ejecutables : list_sentencias_ejecutables . sentencia_ejecutable ';'  (52)

	ID  shift 99
	IF  shift 5
	END  shift 127
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 128
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23


state 117
	bloque_sentencias_ejecutables : sentencia_ejecutable ';' .  (50)

	.  reduce 50


state 118
	sentencia_control : FOR '(' encabezado_for ')' bloque_sentencias_ejecutables ';' .  (15)

	.  reduce 15


state 119
	parametro : tipo ID .  (30)

	.  reduce 30


state 120
	declaracion_funcion : tipo FUN ID '(' parametro ')' . BEGIN cuerpo_funcion END  (29)

	BEGIN  shift 129
	.  error


state 121
	invocacion_funcion : ID '(' tipo_base '(' expresion ')' ')' .  (47)

	.  reduce 47


state 122
	condicion : '(' bloque_list_expresiones ')' comparacion '(' . bloque_list_expresiones ')'  (61)

	ID  shift 37
	CONSTANTE  shift 38
	.  error

	invocacion_funcion  goto 39
	expresion  goto 67
	termino  goto 41
	factor  goto 42
	bloque_list_expresiones  goto 130
	list_expresiones  goto 69


state 123
	bloque_if : IF '(' condicion ')' THEN bloque_sentencias_ejecutables ELSE . bloque_sentencias_ejecutables END_IF  (48)

	ID  shift 99
	IF  shift 5
	BEGIN  shift 100
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 101
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 131


state 124
	bloque_if : IF '(' condicion ')' THEN bloque_sentencias_ejecutables END_IF .  (49)

	.  reduce 49


state 125
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion . ';' UP CONSTANTE  (16)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion . ';' DOWN CONSTANTE  (17)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion . ';' UP CONSTANTE ';' '(' condicion ')'  (18)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion . ';' DOWN CONSTANTE ';' '(' condicion ')'  (19)

	';'  shift 132
	.  error


state 126
	list_sentencias_ejecutables : sentencia_ejecutable ';' .  (53)

	.  reduce 53


state 127
	bloque_sentencias_ejecutables : BEGIN list_sentencias_ejecutables END .  (51)

	.  reduce 51


state 128
	list_sentencias_ejecutables : list_sentencias_ejecutables sentencia_ejecutable . ';'  (52)

	';'  shift 133
	.  error


state 129
	declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN . cuerpo_funcion END  (29)
	declaracion_tipo : .  (44)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 134
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	';'  reduce 44

	list_sentencias  goto 135
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	cuerpo_funcion  goto 136


state 130
	condicion : '(' bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones . ')'  (61)

	')'  shift 137
	.  error


state 131
	bloque_if : IF '(' condicion ')' THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables . END_IF  (48)

	END_IF  shift 138
	.  error


state 132
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' . UP CONSTANTE  (16)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' . DOWN CONSTANTE  (17)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' . UP CONSTANTE ';' '(' condicion ')'  (18)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' . DOWN CONSTANTE ';' '(' condicion ')'  (19)

	UP  shift 139
	DOWN  shift 140
	.  error


state 133
	list_sentencias_ejecutables : list_sentencias_ejecutables sentencia_ejecutable ';' .  (52)

	.  reduce 52


state 134
	cuerpo_funcion : RET . '(' expresion ')'  (33)

	'('  shift 141
	.  error


state 135
	list_sentencias : list_sentencias . sentencia ';'  (3)
	cuerpo_funcion : list_sentencias .  (31)
	cuerpo_funcion : list_sentencias . RET '(' expresion ')'  (32)
	declaracion_tipo : .  (44)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 142
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	END  reduce 31
	';'  reduce 44

	sentencia  goto 32
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23


state 136
	declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN cuerpo_funcion . END  (29)

	END  shift 143
	.  error


state 137
	condicion : '(' bloque_list_expresiones ')' comparacion '(' bloque_list_expresiones ')' .  (61)

	.  reduce 61


state 138
	bloque_if : IF '(' condicion ')' THEN bloque_sentencias_ejecutables ELSE bloque_sentencias_ejecutables END_IF .  (48)

	.  reduce 48


state 139
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' UP . CONSTANTE  (16)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' UP . CONSTANTE ';' '(' condicion ')'  (18)

	CONSTANTE  shift 144
	.  error


state 140
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' DOWN . CONSTANTE  (17)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' DOWN . CONSTANTE ';' '(' condicion ')'  (19)

	CONSTANTE  shift 145
	.  error


state 141
	cuerpo_funcion : RET '(' . expresion ')'  (33)

	ID  shift 37
	CONSTANTE  shift 38
	.  error

	invocacion_funcion  goto 39
	expresion  goto 146
	termino  goto 41
	factor  goto 42


state 142
	cuerpo_funcion : list_sentencias RET . '(' expresion ')'  (32)

	'('  shift 147
	.  error


state 143
	declaracion_funcion : tipo FUN ID '(' parametro ')' BEGIN cuerpo_funcion END .  (29)

	.  reduce 29


state 144
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' UP CONSTANTE .  (16)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' UP CONSTANTE . ';' '(' condicion ')'  (18)

	';'  shift 148
	')'  reduce 16


state 145
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' DOWN CONSTANTE .  (17)
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' DOWN CONSTANTE . ';' '(' condicion ')'  (19)

	';'  shift 149
	')'  reduce 17


state 146
	cuerpo_funcion : RET '(' expresion . ')'  (33)
	expresion : expresion . '+' termino  (34)
	expresion : expresion . '-' termino  (35)

	')'  shift 150
	'+'  shift 60
	'-'  shift 61
	.  error


state 147
	cuerpo_funcion : list_sentencias RET '(' . expresion ')'  (32)

	ID  shift 37
	CONSTANTE  shift 38
	.  error

	invocacion_funcion  goto 39
	expresion  goto 151
	termino  goto 41
	factor  goto 42


state 148
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' UP CONSTANTE ';' . '(' condicion ')'  (18)

	'('  shift 152
	.  error


state 149
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' DOWN CONSTANTE ';' . '(' condicion ')'  (19)

	'('  shift 153
	.  error


state 150
	cuerpo_funcion : RET '(' expresion ')' .  (33)

	.  reduce 33


state 151
	cuerpo_funcion : list_sentencias RET '(' expresion . ')'  (32)
	expresion : expresion . '+' termino  (34)
	expresion : expresion . '-' termino  (35)

	')'  shift 154
	'+'  shift 60
	'-'  shift 61
	.  error


state 152
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' UP CONSTANTE ';' '(' . condicion ')'  (18)

	ID  shift 37
	CONSTANTE  shift 38
	'('  shift 48
	.  error

	invocacion_funcion  goto 39
	condicion  goto 155
	expresion  goto 50
	termino  goto 41
	factor  goto 42


state 153
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' DOWN CONSTANTE ';' '(' . condicion ')'  (19)

	ID  shift 37
	CONSTANTE  shift 38
	'('  shift 48
	.  error

	invocacion_funcion  goto 39
	condicion  goto 156
	expresion  goto 50
	termino  goto 41
	factor  goto 42


state 154
	cuerpo_funcion : list_sentencias RET '(' expresion ')' .  (32)

	.  reduce 32


state 155
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' UP CONSTANTE ';' '(' condicion . ')'  (18)

	')'  shift 157
	.  error


state 156
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' DOWN CONSTANTE ';' '(' condicion . ')'  (19)

	')'  shift 158
	.  error


state 157
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' UP CONSTANTE ';' '(' condicion ')' .  (18)

	.  reduce 18


state 158
	encabezado_for : ID ASIGNACION CONSTANTE ';' condicion ';' DOWN CONSTANTE ';' '(' condicion ')' .  (19)

	.  reduce 19


41 terminals, 28 nonterminals
67 grammar rules, 159 states
