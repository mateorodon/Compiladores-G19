   0  $accept : programa $end

   1  programa : ID BEGIN list_sentencias END
   2           | BEGIN list_sentencias END
   3           | ID BEGIN list_sentencias
   4           | ID list_sentencias END
   5           | ID list_sentencias

   6  list_sentencias : list_sentencias sentencia
   7                  | sentencia

   8  sentencia : sentencia_declarativa ';'
   9            | sentencia_ejecutable ';'
  10            | sentencia_ejecutable
  11            | sentencia_declarativa

  12  sentencia_declarativa : tipo list_variables
  13                        | declaracion_funcion
  14                        | declaracion_tipo

  15  sentencia_ejecutable : asignacion
  16                       | invocacion_funcion
  17                       | bloque_if
  18                       | salida_mensaje
  19                       | sentencia_control

  20  sentencia_control : FOR '(' encabezado_for ')' bloque_sentencias_ejecutables
  21                    | FOR '(' encabezado_for ')' error
  22                    | FOR encabezado_for ')' bloque_sentencias_ejecutables
  23                    | FOR '(' encabezado_for bloque_sentencias_ejecutables

  24  encabezado_for : encabezado_for1
  25                 | encabezado_for2

  26  encabezado_for1 : asignacion_for ';' condicion ';' up_down CONSTANTE
  27                  | asignacion_for ';' condicion ';' CONSTANTE
  28                  | asignacion_for condicion ';' up_down CONSTANTE
  29                  | asignacion_for ';' condicion up_down CONSTANTE
  30                  | asignacion_for ';' condicion ';' up_down

  31  encabezado_for2 : asignacion_for ';' condicion ';' up_down CONSTANTE ';' '(' condicion ')'
  32                  | asignacion_for ';' condicion ';' CONSTANTE ';' '(' condicion ')'
  33                  | asignacion_for condicion ';' up_down CONSTANTE ';' '(' condicion ')'
  34                  | asignacion_for ';' condicion up_down CONSTANTE ';' '(' condicion ')'
  35                  | asignacion_for ';' condicion ';' up_down '(' condicion ')'

  36  asignacion_for : ID ASIGNACION CONSTANTE

  37  up_down : UP
  38          | DOWN

  39  asignacion : ID ASIGNACION expresion
  40             | ID '[' CONSTANTE ']' ASIGNACION expresion
  41             | ID ASIGNACION error

  42  tipo : tipo_base
  43       | ID

  44  tipo_base : ULONGINT
  45            | SINGLE

  46  list_variables : list_variables ',' ID
  47                 | list_variables ID
  48                 | ID

  49  encabezado_funcion : tipo FUN ID
  50                     | tipo FUN

  51  $$1 :

  52  declaracion_funcion : encabezado_funcion '(' parametro ')' BEGIN cuerpo_funcion $$1 END
  53                      | encabezado_funcion '(' bloque_list_parametro ')' BEGIN cuerpo_funcion END
  54                      | encabezado_funcion '(' ')' BEGIN cuerpo_funcion END

  55  parametro : tipo ID
  56            | ID

  57  bloque_list_parametro : list_parametro ',' parametro

  58  list_parametro : parametro
  59                 | list_parametro ',' parametro

  60  cuerpo_funcion : list_sentencias_funcion sentencia_return ';'
  61                 | list_sentencias_funcion
  62                 | sentencia_return ';'
  63                 |

  64  list_sentencias_funcion : list_sentencias_funcion sentencia
  65                          | sentencia

  66  sentencia_return : RET '(' expresion ')'

  67  expresion : expresion '+' termino
  68            | expresion '-' termino
  69            | termino
  70            | expresion '+' error
  71            | expresion '-' error

  72  termino : termino '*' factor
  73          | termino '/' factor
  74          | factor
  75          | termino '*' error
  76          | termino '/' error

  77  factor : ID
  78         | CONSTANTE
  79         | invocacion_funcion
  80         | ID '[' CONSTANTE ']'
  81         | '-' ID
  82         | '-' CONSTANTE
  83         | '-' ID '[' CONSTANTE ']'

  84  declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' ID
  85                   | TYPEDEF TRIPLE '<' tipo_base '>' error
  86                   | TYPEDEF TRIPLE tipo_base '>' ID
  87                   | TYPEDEF TRIPLE '<' tipo_base ID
  88                   | TYPEDEF TRIPLE tipo_base ID
  89                   | TYPEDEF '<' tipo_base '>' ID

  90  invocacion_funcion : ID '(' expresion ')'
  91                     | ID '(' bloque_list_expresiones ')'
  92                     | ID '(' ')'
  93                     | ID '(' tipo_base '(' expresion ')' ')'

  94  fin_if : END_IF
  95         | error

  96  bloque_sentencias_ejecutables : sentencia_ejecutable ';'
  97                                | BEGIN list_sentencias_ejecutables END
  98                                | BEGIN error

  99  encabezado_if : IF

 100  bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_unico fin_if
 101            | encabezado_if '(' condicion ')' THEN cuerpo_if_bloque fin_if
 102            | encabezado_if '(' condicion ')' THEN cuerpo_if_unico ELSE cuerpo_if_unico fin_if
 103            | encabezado_if '(' condicion ')' THEN cuerpo_if_bloque ELSE cuerpo_if_bloque fin_if
 104            | encabezado_if '(' condicion ')' THEN cuerpo_if_unico ELSE cuerpo_if_bloque fin_if
 105            | encabezado_if '(' condicion ')' THEN cuerpo_if_bloque ELSE cuerpo_if_unico fin_if
 106            | encabezado_if '(' condicion ')' cuerpo_if_bloque ELSE cuerpo_if_unico fin_if
 107            | encabezado_if '(' condicion ')' THEN cuerpo_if_bloque cuerpo_if_unico fin_if
 108            | encabezado_if '(' condicion ')' cuerpo_if_bloque ELSE cuerpo_if_unico

 109  cuerpo_if_unico : sentencia_ejecutable ';'
 110                  | sentencia_return ';'
 111                  | sentencia_return error

 112  cuerpo_if_bloque : BEGIN list_sentencias_ejecutables END
 113                   | BEGIN list_sentencias_ejecutables sentencia_return END
 114                   | BEGIN error
 115                   | list_sentencias_ejecutables END

 116  list_sentencias_ejecutables : list_sentencias_ejecutables sentencia_ejecutable ';'
 117                              | sentencia_ejecutable ';'

 118  comparacion : MAYORIGUAL
 119              | MENORIGUAL
 120              | DISTINTO
 121              | '='
 122              | '>'
 123              | '<'

 124  condicion : expresion comparacion expresion

 125  $$2 :

 126  $$3 :

 127  $$4 :

 128  $$5 :

 129  condicion : '(' $$2 bloque_list_expresiones $$3 ')' comparacion '(' $$4 bloque_list_expresiones $$5 ')'
 130            | error

 131  bloque_list_expresiones : list_expresiones ',' expresion

 132  list_expresiones : list_expresiones ',' expresion
 133                   | expresion
 134                   | error

 135  salida_mensaje : OUTF '(' CADENA ')'
 136                 | OUTF '(' expresion ')'
 137                 | OUTF '(' error ')'
 138                 | OUTF '(' ')'

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	BEGIN  shift 2
	.  error

	programa  goto 3


state 1
	programa : ID . BEGIN list_sentencias END  (1)
	programa : ID . BEGIN list_sentencias  (3)
	programa : ID . list_sentencias END  (4)
	programa : ID . list_sentencias  (5)

	ID  shift 4
	IF  shift 5
	BEGIN  shift 6
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	.  error

	list_sentencias  goto 12
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	encabezado_funcion  goto 25
	encabezado_if  goto 26


state 2
	programa : BEGIN . list_sentencias END  (2)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	.  error

	list_sentencias  goto 27
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	encabezado_funcion  goto 25
	encabezado_if  goto 26


state 3
	$accept : programa . $end  (0)

	$end  accept


state 4
	asignacion : ID . ASIGNACION expresion  (39)
	asignacion : ID . '[' CONSTANTE ']' ASIGNACION expresion  (40)
	asignacion : ID . ASIGNACION error  (41)
	tipo : ID .  (43)
	invocacion_funcion : ID . '(' expresion ')'  (90)
	invocacion_funcion : ID . '(' bloque_list_expresiones ')'  (91)
	invocacion_funcion : ID . '(' ')'  (92)
	invocacion_funcion : ID . '(' tipo_base '(' expresion ')' ')'  (93)

	ASIGNACION  shift 28
	'('  shift 29
	'['  shift 30
	ID  reduce 43
	FUN  reduce 43


state 5
	encabezado_if : IF .  (99)

	.  reduce 99


state 6
	programa : ID BEGIN . list_sentencias END  (1)
	programa : ID BEGIN . list_sentencias  (3)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	.  error

	list_sentencias  goto 31
	sentencia  goto 13
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	encabezado_funcion  goto 25
	encabezado_if  goto 26


state 7
	salida_mensaje : OUTF . '(' CADENA ')'  (135)
	salida_mensaje : OUTF . '(' expresion ')'  (136)
	salida_mensaje : OUTF . '(' error ')'  (137)
	salida_mensaje : OUTF . '(' ')'  (138)

	'('  shift 32
	.  error


state 8
	declaracion_tipo : TYPEDEF . TRIPLE '<' tipo_base '>' ID  (84)
	declaracion_tipo : TYPEDEF . TRIPLE '<' tipo_base '>' error  (85)
	declaracion_tipo : TYPEDEF . TRIPLE tipo_base '>' ID  (86)
	declaracion_tipo : TYPEDEF . TRIPLE '<' tipo_base ID  (87)
	declaracion_tipo : TYPEDEF . TRIPLE tipo_base ID  (88)
	declaracion_tipo : TYPEDEF . '<' tipo_base '>' ID  (89)

	TRIPLE  shift 33
	'<'  shift 34
	.  error


state 9
	tipo_base : ULONGINT .  (44)

	.  reduce 44


state 10
	tipo_base : SINGLE .  (45)

	.  reduce 45


state 11
	sentencia_control : FOR . '(' encabezado_for ')' bloque_sentencias_ejecutables  (20)
	sentencia_control : FOR . '(' encabezado_for ')' error  (21)
	sentencia_control : FOR . encabezado_for ')' bloque_sentencias_ejecutables  (22)
	sentencia_control : FOR . '(' encabezado_for bloque_sentencias_ejecutables  (23)

	ID  shift 35
	'('  shift 36
	.  error

	encabezado_for  goto 37
	encabezado_for1  goto 38
	encabezado_for2  goto 39
	asignacion_for  goto 40


state 12
	programa : ID list_sentencias . END  (4)
	programa : ID list_sentencias .  (5)
	list_sentencias : list_sentencias . sentencia  (6)

	ID  shift 4
	IF  shift 5
	END  shift 41
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	$end  reduce 5

	sentencia  goto 42
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	encabezado_funcion  goto 25
	encabezado_if  goto 26


state 13
	list_sentencias : sentencia .  (7)

	.  reduce 7


state 14
	sentencia : sentencia_declarativa . ';'  (8)
	sentencia : sentencia_declarativa .  (11)

	';'  shift 43
	$end  reduce 11
	ID  reduce 11
	IF  reduce 11
	END  reduce 11
	OUTF  reduce 11
	TYPEDEF  reduce 11
	RET  reduce 11
	ULONGINT  reduce 11
	SINGLE  reduce 11
	FOR  reduce 11


state 15
	sentencia : sentencia_ejecutable . ';'  (9)
	sentencia : sentencia_ejecutable .  (10)

	';'  shift 44
	$end  reduce 10
	ID  reduce 10
	IF  reduce 10
	END  reduce 10
	OUTF  reduce 10
	TYPEDEF  reduce 10
	RET  reduce 10
	ULONGINT  reduce 10
	SINGLE  reduce 10
	FOR  reduce 10


state 16
	sentencia_declarativa : tipo . list_variables  (12)
	encabezado_funcion : tipo . FUN ID  (49)
	encabezado_funcion : tipo . FUN  (50)

	ID  shift 45
	FUN  shift 46
	.  error

	list_variables  goto 47


state 17
	sentencia_declarativa : declaracion_funcion .  (13)

	.  reduce 13


state 18
	sentencia_declarativa : declaracion_tipo .  (14)

	.  reduce 14


state 19
	sentencia_ejecutable : asignacion .  (15)

	.  reduce 15


state 20
	sentencia_ejecutable : invocacion_funcion .  (16)

	.  reduce 16


state 21
	sentencia_ejecutable : bloque_if .  (17)

	.  reduce 17


state 22
	sentencia_ejecutable : salida_mensaje .  (18)

	.  reduce 18


state 23
	sentencia_ejecutable : sentencia_control .  (19)

	.  reduce 19


state 24
	tipo : tipo_base .  (42)

	.  reduce 42


state 25
	declaracion_funcion : encabezado_funcion . '(' parametro ')' BEGIN cuerpo_funcion $$1 END  (52)
	declaracion_funcion : encabezado_funcion . '(' bloque_list_parametro ')' BEGIN cuerpo_funcion END  (53)
	declaracion_funcion : encabezado_funcion . '(' ')' BEGIN cuerpo_funcion END  (54)

	'('  shift 48
	.  error


state 26
	bloque_if : encabezado_if . '(' condicion ')' THEN cuerpo_if_unico fin_if  (100)
	bloque_if : encabezado_if . '(' condicion ')' THEN cuerpo_if_bloque fin_if  (101)
	bloque_if : encabezado_if . '(' condicion ')' THEN cuerpo_if_unico ELSE cuerpo_if_unico fin_if  (102)
	bloque_if : encabezado_if . '(' condicion ')' THEN cuerpo_if_bloque ELSE cuerpo_if_bloque fin_if  (103)
	bloque_if : encabezado_if . '(' condicion ')' THEN cuerpo_if_unico ELSE cuerpo_if_bloque fin_if  (104)
	bloque_if : encabezado_if . '(' condicion ')' THEN cuerpo_if_bloque ELSE cuerpo_if_unico fin_if  (105)
	bloque_if : encabezado_if . '(' condicion ')' cuerpo_if_bloque ELSE cuerpo_if_unico fin_if  (106)
	bloque_if : encabezado_if . '(' condicion ')' THEN cuerpo_if_bloque cuerpo_if_unico fin_if  (107)
	bloque_if : encabezado_if . '(' condicion ')' cuerpo_if_bloque ELSE cuerpo_if_unico  (108)

	'('  shift 49
	.  error


state 27
	programa : BEGIN list_sentencias . END  (2)
	list_sentencias : list_sentencias . sentencia  (6)

	ID  shift 4
	IF  shift 5
	END  shift 50
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	.  error

	sentencia  goto 42
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	encabezado_funcion  goto 25
	encabezado_if  goto 26


state 28
	asignacion : ID ASIGNACION . expresion  (39)
	asignacion : ID ASIGNACION . error  (41)

	error  shift 51
	ID  shift 52
	CONSTANTE  shift 53
	'-'  shift 54
	.  error

	invocacion_funcion  goto 55
	expresion  goto 56
	termino  goto 57
	factor  goto 58


state 29
	invocacion_funcion : ID '(' . expresion ')'  (90)
	invocacion_funcion : ID '(' . bloque_list_expresiones ')'  (91)
	invocacion_funcion : ID '(' . ')'  (92)
	invocacion_funcion : ID '(' . tipo_base '(' expresion ')' ')'  (93)

	error  shift 59
	ID  shift 52
	CONSTANTE  shift 53
	ULONGINT  shift 9
	SINGLE  shift 10
	')'  shift 60
	'-'  shift 54
	.  error

	invocacion_funcion  goto 55
	expresion  goto 61
	tipo_base  goto 62
	termino  goto 57
	factor  goto 58
	bloque_list_expresiones  goto 63
	list_expresiones  goto 64


state 30
	asignacion : ID '[' . CONSTANTE ']' ASIGNACION expresion  (40)

	CONSTANTE  shift 65
	.  error


state 31
	programa : ID BEGIN list_sentencias . END  (1)
	programa : ID BEGIN list_sentencias .  (3)
	list_sentencias : list_sentencias . sentencia  (6)

	ID  shift 4
	IF  shift 5
	END  shift 66
	OUTF  shift 7
	TYPEDEF  shift 8
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	$end  reduce 3

	sentencia  goto 42
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	encabezado_funcion  goto 25
	encabezado_if  goto 26


state 32
	salida_mensaje : OUTF '(' . CADENA ')'  (135)
	salida_mensaje : OUTF '(' . expresion ')'  (136)
	salida_mensaje : OUTF '(' . error ')'  (137)
	salida_mensaje : OUTF '(' . ')'  (138)

	error  shift 67
	ID  shift 52
	CONSTANTE  shift 53
	CADENA  shift 68
	')'  shift 69
	'-'  shift 54
	.  error

	invocacion_funcion  goto 55
	expresion  goto 70
	termino  goto 57
	factor  goto 58


state 33
	declaracion_tipo : TYPEDEF TRIPLE . '<' tipo_base '>' ID  (84)
	declaracion_tipo : TYPEDEF TRIPLE . '<' tipo_base '>' error  (85)
	declaracion_tipo : TYPEDEF TRIPLE . tipo_base '>' ID  (86)
	declaracion_tipo : TYPEDEF TRIPLE . '<' tipo_base ID  (87)
	declaracion_tipo : TYPEDEF TRIPLE . tipo_base ID  (88)

	ULONGINT  shift 9
	SINGLE  shift 10
	'<'  shift 71
	.  error

	tipo_base  goto 72


state 34
	declaracion_tipo : TYPEDEF '<' . tipo_base '>' ID  (89)

	ULONGINT  shift 9
	SINGLE  shift 10
	.  error

	tipo_base  goto 73


state 35
	asignacion_for : ID . ASIGNACION CONSTANTE  (36)

	ASIGNACION  shift 74
	.  error


state 36
	sentencia_control : FOR '(' . encabezado_for ')' bloque_sentencias_ejecutables  (20)
	sentencia_control : FOR '(' . encabezado_for ')' error  (21)
	sentencia_control : FOR '(' . encabezado_for bloque_sentencias_ejecutables  (23)

	ID  shift 35
	.  error

	encabezado_for  goto 75
	encabezado_for1  goto 38
	encabezado_for2  goto 39
	asignacion_for  goto 40


state 37
	sentencia_control : FOR encabezado_for . ')' bloque_sentencias_ejecutables  (22)

	')'  shift 76
	.  error


state 38
	encabezado_for : encabezado_for1 .  (24)

	.  reduce 24


state 39
	encabezado_for : encabezado_for2 .  (25)

	.  reduce 25


state 40
	encabezado_for1 : asignacion_for . ';' condicion ';' up_down CONSTANTE  (26)
	encabezado_for1 : asignacion_for . ';' condicion ';' CONSTANTE  (27)
	encabezado_for1 : asignacion_for . condicion ';' up_down CONSTANTE  (28)
	encabezado_for1 : asignacion_for . ';' condicion up_down CONSTANTE  (29)
	encabezado_for1 : asignacion_for . ';' condicion ';' up_down  (30)
	encabezado_for2 : asignacion_for . ';' condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (31)
	encabezado_for2 : asignacion_for . ';' condicion ';' CONSTANTE ';' '(' condicion ')'  (32)
	encabezado_for2 : asignacion_for . condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (33)
	encabezado_for2 : asignacion_for . ';' condicion up_down CONSTANTE ';' '(' condicion ')'  (34)
	encabezado_for2 : asignacion_for . ';' condicion ';' up_down '(' condicion ')'  (35)

	error  shift 77
	ID  shift 52
	CONSTANTE  shift 53
	';'  shift 78
	'('  shift 79
	'-'  shift 54
	.  error

	invocacion_funcion  goto 55
	condicion  goto 80
	expresion  goto 81
	termino  goto 57
	factor  goto 58


state 41
	programa : ID list_sentencias END .  (4)

	.  reduce 4


state 42
	list_sentencias : list_sentencias sentencia .  (6)

	.  reduce 6


state 43
	sentencia : sentencia_declarativa ';' .  (8)

	.  reduce 8


state 44
	sentencia : sentencia_ejecutable ';' .  (9)

	.  reduce 9


state 45
	list_variables : ID .  (48)

	.  reduce 48


state 46
	encabezado_funcion : tipo FUN . ID  (49)
	encabezado_funcion : tipo FUN .  (50)

	ID  shift 82
	'('  reduce 50


47: shift/reduce conflict (shift 83, reduce 12) on ID
state 47
	sentencia_declarativa : tipo list_variables .  (12)
	list_variables : list_variables . ',' ID  (46)
	list_variables : list_variables . ID  (47)

	ID  shift 83
	','  shift 84
	$end  reduce 12
	IF  reduce 12
	END  reduce 12
	OUTF  reduce 12
	TYPEDEF  reduce 12
	RET  reduce 12
	ULONGINT  reduce 12
	SINGLE  reduce 12
	FOR  reduce 12
	';'  reduce 12


state 48
	declaracion_funcion : encabezado_funcion '(' . parametro ')' BEGIN cuerpo_funcion $$1 END  (52)
	declaracion_funcion : encabezado_funcion '(' . bloque_list_parametro ')' BEGIN cuerpo_funcion END  (53)
	declaracion_funcion : encabezado_funcion '(' . ')' BEGIN cuerpo_funcion END  (54)

	ID  shift 85
	ULONGINT  shift 9
	SINGLE  shift 10
	')'  shift 86
	.  error

	tipo  goto 87
	tipo_base  goto 24
	parametro  goto 88
	bloque_list_parametro  goto 89
	list_parametro  goto 90


state 49
	bloque_if : encabezado_if '(' . condicion ')' THEN cuerpo_if_unico fin_if  (100)
	bloque_if : encabezado_if '(' . condicion ')' THEN cuerpo_if_bloque fin_if  (101)
	bloque_if : encabezado_if '(' . condicion ')' THEN cuerpo_if_unico ELSE cuerpo_if_unico fin_if  (102)
	bloque_if : encabezado_if '(' . condicion ')' THEN cuerpo_if_bloque ELSE cuerpo_if_bloque fin_if  (103)
	bloque_if : encabezado_if '(' . condicion ')' THEN cuerpo_if_unico ELSE cuerpo_if_bloque fin_if  (104)
	bloque_if : encabezado_if '(' . condicion ')' THEN cuerpo_if_bloque ELSE cuerpo_if_unico fin_if  (105)
	bloque_if : encabezado_if '(' . condicion ')' cuerpo_if_bloque ELSE cuerpo_if_unico fin_if  (106)
	bloque_if : encabezado_if '(' . condicion ')' THEN cuerpo_if_bloque cuerpo_if_unico fin_if  (107)
	bloque_if : encabezado_if '(' . condicion ')' cuerpo_if_bloque ELSE cuerpo_if_unico  (108)

	error  shift 77
	ID  shift 52
	CONSTANTE  shift 53
	'('  shift 79
	'-'  shift 54
	.  error

	invocacion_funcion  goto 55
	condicion  goto 91
	expresion  goto 81
	termino  goto 57
	factor  goto 58


state 50
	programa : BEGIN list_sentencias END .  (2)

	.  reduce 2


state 51
	asignacion : ID ASIGNACION error .  (41)

	.  reduce 41


state 52
	factor : ID .  (77)
	factor : ID . '[' CONSTANTE ']'  (80)
	invocacion_funcion : ID . '(' expresion ')'  (90)
	invocacion_funcion : ID . '(' bloque_list_expresiones ')'  (91)
	invocacion_funcion : ID . '(' ')'  (92)
	invocacion_funcion : ID . '(' tipo_base '(' expresion ')' ')'  (93)

	'('  shift 29
	'['  shift 92
	$end  reduce 77
	ID  reduce 77
	MAYORIGUAL  reduce 77
	MENORIGUAL  reduce 77
	DISTINTO  reduce 77
	IF  reduce 77
	END  reduce 77
	OUTF  reduce 77
	TYPEDEF  reduce 77
	RET  reduce 77
	ULONGINT  reduce 77
	SINGLE  reduce 77
	FOR  reduce 77
	UP  reduce 77
	DOWN  reduce 77
	','  reduce 77
	';'  reduce 77
	')'  reduce 77
	'+'  reduce 77
	'-'  reduce 77
	'*'  reduce 77
	'/'  reduce 77
	'<'  reduce 77
	'>'  reduce 77
	'='  reduce 77


state 53
	factor : CONSTANTE .  (78)

	.  reduce 78


state 54
	factor : '-' . ID  (81)
	factor : '-' . CONSTANTE  (82)
	factor : '-' . ID '[' CONSTANTE ']'  (83)

	ID  shift 93
	CONSTANTE  shift 94
	.  error


state 55
	factor : invocacion_funcion .  (79)

	.  reduce 79


state 56
	asignacion : ID ASIGNACION expresion .  (39)
	expresion : expresion . '+' termino  (67)
	expresion : expresion . '-' termino  (68)
	expresion : expresion . '+' error  (70)
	expresion : expresion . '-' error  (71)

	'+'  shift 95
	'-'  shift 96
	$end  reduce 39
	ID  reduce 39
	IF  reduce 39
	END  reduce 39
	OUTF  reduce 39
	TYPEDEF  reduce 39
	RET  reduce 39
	ULONGINT  reduce 39
	SINGLE  reduce 39
	FOR  reduce 39
	';'  reduce 39


state 57
	expresion : termino .  (69)
	termino : termino . '*' factor  (72)
	termino : termino . '/' factor  (73)
	termino : termino . '*' error  (75)
	termino : termino . '/' error  (76)

	'*'  shift 97
	'/'  shift 98
	$end  reduce 69
	ID  reduce 69
	MAYORIGUAL  reduce 69
	MENORIGUAL  reduce 69
	DISTINTO  reduce 69
	IF  reduce 69
	END  reduce 69
	OUTF  reduce 69
	TYPEDEF  reduce 69
	RET  reduce 69
	ULONGINT  reduce 69
	SINGLE  reduce 69
	FOR  reduce 69
	UP  reduce 69
	DOWN  reduce 69
	','  reduce 69
	';'  reduce 69
	')'  reduce 69
	'+'  reduce 69
	'-'  reduce 69
	'<'  reduce 69
	'>'  reduce 69
	'='  reduce 69


state 58
	termino : factor .  (74)

	.  reduce 74


state 59
	list_expresiones : error .  (134)

	.  reduce 134


state 60
	invocacion_funcion : ID '(' ')' .  (92)

	.  reduce 92


state 61
	expresion : expresion . '+' termino  (67)
	expresion : expresion . '-' termino  (68)
	expresion : expresion . '+' error  (70)
	expresion : expresion . '-' error  (71)
	invocacion_funcion : ID '(' expresion . ')'  (90)
	list_expresiones : expresion .  (133)

	')'  shift 99
	'+'  shift 95
	'-'  shift 96
	','  reduce 133


state 62
	invocacion_funcion : ID '(' tipo_base . '(' expresion ')' ')'  (93)

	'('  shift 100
	.  error


state 63
	invocacion_funcion : ID '(' bloque_list_expresiones . ')'  (91)

	')'  shift 101
	.  error


state 64
	bloque_list_expresiones : list_expresiones . ',' expresion  (131)
	list_expresiones : list_expresiones . ',' expresion  (132)

	','  shift 102
	.  error


state 65
	asignacion : ID '[' CONSTANTE . ']' ASIGNACION expresion  (40)

	']'  shift 103
	.  error


state 66
	programa : ID BEGIN list_sentencias END .  (1)

	.  reduce 1


state 67
	salida_mensaje : OUTF '(' error . ')'  (137)

	')'  shift 104
	.  error


state 68
	salida_mensaje : OUTF '(' CADENA . ')'  (135)

	')'  shift 105
	.  error


state 69
	salida_mensaje : OUTF '(' ')' .  (138)

	.  reduce 138


state 70
	expresion : expresion . '+' termino  (67)
	expresion : expresion . '-' termino  (68)
	expresion : expresion . '+' error  (70)
	expresion : expresion . '-' error  (71)
	salida_mensaje : OUTF '(' expresion . ')'  (136)

	')'  shift 106
	'+'  shift 95
	'-'  shift 96
	.  error


state 71
	declaracion_tipo : TYPEDEF TRIPLE '<' . tipo_base '>' ID  (84)
	declaracion_tipo : TYPEDEF TRIPLE '<' . tipo_base '>' error  (85)
	declaracion_tipo : TYPEDEF TRIPLE '<' . tipo_base ID  (87)

	ULONGINT  shift 9
	SINGLE  shift 10
	.  error

	tipo_base  goto 107


state 72
	declaracion_tipo : TYPEDEF TRIPLE tipo_base . '>' ID  (86)
	declaracion_tipo : TYPEDEF TRIPLE tipo_base . ID  (88)

	ID  shift 108
	'>'  shift 109
	.  error


state 73
	declaracion_tipo : TYPEDEF '<' tipo_base . '>' ID  (89)

	'>'  shift 110
	.  error


state 74
	asignacion_for : ID ASIGNACION . CONSTANTE  (36)

	CONSTANTE  shift 111
	.  error


state 75
	sentencia_control : FOR '(' encabezado_for . ')' bloque_sentencias_ejecutables  (20)
	sentencia_control : FOR '(' encabezado_for . ')' error  (21)
	sentencia_control : FOR '(' encabezado_for . bloque_sentencias_ejecutables  (23)

	ID  shift 112
	IF  shift 5
	BEGIN  shift 113
	OUTF  shift 7
	FOR  shift 11
	')'  shift 114
	.  error

	sentencia_ejecutable  goto 115
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 116
	encabezado_if  goto 26


state 76
	sentencia_control : FOR encabezado_for ')' . bloque_sentencias_ejecutables  (22)

	ID  shift 112
	IF  shift 5
	BEGIN  shift 113
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 115
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 117
	encabezado_if  goto 26


state 77
	condicion : error .  (130)

	.  reduce 130


state 78
	encabezado_for1 : asignacion_for ';' . condicion ';' up_down CONSTANTE  (26)
	encabezado_for1 : asignacion_for ';' . condicion ';' CONSTANTE  (27)
	encabezado_for1 : asignacion_for ';' . condicion up_down CONSTANTE  (29)
	encabezado_for1 : asignacion_for ';' . condicion ';' up_down  (30)
	encabezado_for2 : asignacion_for ';' . condicion ';' up_down CONSTANTE ';' '(' condicion ')'  (31)
	encabezado_for2 : asignacion_for ';' . condicion ';' CONSTANTE ';' '(' condicion ')'  (32)
	encabezado_for2 : asignacion_for ';' . condicion up_down CONSTANTE ';' '(' condicion ')'  (34)
	encabezado_for2 : asignacion_for ';' . condicion ';' up_down '(' condicion ')'  (35)

	error  shift 77
	ID  shift 52
	CONSTANTE  shift 53
	'('  shift 79
	'-'  shift 54
	.  error

	invocacion_funcion  goto 55
	condicion  goto 118
	expresion  goto 81
	termino  goto 57
	factor  goto 58


state 79
	condicion : '(' . $$2 bloque_list_expresiones $$3 ')' comparacion '(' $$4 bloque_list_expresiones $$5 ')'  (129)
	$$2 : .  (125)

	.  reduce 125

	$$2  goto 119


state 80
	encabezado_for1 : asignacion_for condicion . ';' up_down CONSTANTE  (28)
	encabezado_for2 : asignacion_for condicion . ';' up_down CONSTANTE ';' '(' condicion ')'  (33)

	';'  shift 120
	.  error


state 81
	expresion : expresion . '+' termino  (67)
	expresion : expresion . '-' termino  (68)
	expresion : expresion . '+' error  (70)
	expresion : expresion . '-' error  (71)
	condicion : expresion . comparacion expresion  (124)

	MAYORIGUAL  shift 121
	MENORIGUAL  shift 122
	DISTINTO  shift 123
	'+'  shift 95
	'-'  shift 96
	'<'  shift 124
	'>'  shift 125
	'='  shift 126
	.  error

	comparacion  goto 127


state 82
	encabezado_funcion : tipo FUN ID .  (49)

	.  reduce 49


state 83
	list_variables : list_variables ID .  (47)

	.  reduce 47


state 84
	list_variables : list_variables ',' . ID  (46)

	ID  shift 128
	.  error


state 85
	tipo : ID .  (43)
	parametro : ID .  (56)

	ID  reduce 43
	','  reduce 56
	')'  reduce 56


state 86
	declaracion_funcion : encabezado_funcion '(' ')' . BEGIN cuerpo_funcion END  (54)

	BEGIN  shift 129
	.  error


state 87
	parametro : tipo . ID  (55)

	ID  shift 130
	.  error


state 88
	declaracion_funcion : encabezado_funcion '(' parametro . ')' BEGIN cuerpo_funcion $$1 END  (52)
	list_parametro : parametro .  (58)

	')'  shift 131
	','  reduce 58


state 89
	declaracion_funcion : encabezado_funcion '(' bloque_list_parametro . ')' BEGIN cuerpo_funcion END  (53)

	')'  shift 132
	.  error


state 90
	bloque_list_parametro : list_parametro . ',' parametro  (57)
	list_parametro : list_parametro . ',' parametro  (59)

	','  shift 133
	.  error


state 91
	bloque_if : encabezado_if '(' condicion . ')' THEN cuerpo_if_unico fin_if  (100)
	bloque_if : encabezado_if '(' condicion . ')' THEN cuerpo_if_bloque fin_if  (101)
	bloque_if : encabezado_if '(' condicion . ')' THEN cuerpo_if_unico ELSE cuerpo_if_unico fin_if  (102)
	bloque_if : encabezado_if '(' condicion . ')' THEN cuerpo_if_bloque ELSE cuerpo_if_bloque fin_if  (103)
	bloque_if : encabezado_if '(' condicion . ')' THEN cuerpo_if_unico ELSE cuerpo_if_bloque fin_if  (104)
	bloque_if : encabezado_if '(' condicion . ')' THEN cuerpo_if_bloque ELSE cuerpo_if_unico fin_if  (105)
	bloque_if : encabezado_if '(' condicion . ')' cuerpo_if_bloque ELSE cuerpo_if_unico fin_if  (106)
	bloque_if : encabezado_if '(' condicion . ')' THEN cuerpo_if_bloque cuerpo_if_unico fin_if  (107)
	bloque_if : encabezado_if '(' condicion . ')' cuerpo_if_bloque ELSE cuerpo_if_unico  (108)

	')'  shift 134
	.  error


state 92
	factor : ID '[' . CONSTANTE ']'  (80)

	CONSTANTE  shift 135
	.  error


state 93
	factor : '-' ID .  (81)
	factor : '-' ID . '[' CONSTANTE ']'  (83)

	'['  shift 136
	$end  reduce 81
	ID  reduce 81
	MAYORIGUAL  reduce 81
	MENORIGUAL  reduce 81
	DISTINTO  reduce 81
	IF  reduce 81
	END  reduce 81
	OUTF  reduce 81
	TYPEDEF  reduce 81
	RET  reduce 81
	ULONGINT  reduce 81
	SINGLE  reduce 81
	FOR  reduce 81
	UP  reduce 81
	DOWN  reduce 81
	','  reduce 81
	';'  reduce 81
	')'  reduce 81
	'+'  reduce 81
	'-'  reduce 81
	'*'  reduce 81
	'/'  reduce 81
	'<'  reduce 81
	'>'  reduce 81
	'='  reduce 81


state 94
	factor : '-' CONSTANTE .  (82)

	.  reduce 82


state 95
	expresion : expresion '+' . termino  (67)
	expresion : expresion '+' . error  (70)

	error  shift 137
	ID  shift 52
	CONSTANTE  shift 53
	'-'  shift 54
	.  error

	invocacion_funcion  goto 55
	termino  goto 138
	factor  goto 58


state 96
	expresion : expresion '-' . termino  (68)
	expresion : expresion '-' . error  (71)

	error  shift 139
	ID  shift 52
	CONSTANTE  shift 53
	'-'  shift 54
	.  error

	invocacion_funcion  goto 55
	termino  goto 140
	factor  goto 58


state 97
	termino : termino '*' . factor  (72)
	termino : termino '*' . error  (75)

	error  shift 141
	ID  shift 52
	CONSTANTE  shift 53
	'-'  shift 54
	.  error

	invocacion_funcion  goto 55
	factor  goto 142


state 98
	termino : termino '/' . factor  (73)
	termino : termino '/' . error  (76)

	error  shift 143
	ID  shift 52
	CONSTANTE  shift 53
	'-'  shift 54
	.  error

	invocacion_funcion  goto 55
	factor  goto 144


state 99
	invocacion_funcion : ID '(' expresion ')' .  (90)

	.  reduce 90


state 100
	invocacion_funcion : ID '(' tipo_base '(' . expresion ')' ')'  (93)

	ID  shift 52
	CONSTANTE  shift 53
	'-'  shift 54
	.  error

	invocacion_funcion  goto 55
	expresion  goto 145
	termino  goto 57
	factor  goto 58


state 101
	invocacion_funcion : ID '(' bloque_list_expresiones ')' .  (91)

	.  reduce 91


state 102
	bloque_list_expresiones : list_expresiones ',' . expresion  (131)
	list_expresiones : list_expresiones ',' . expresion  (132)

	ID  shift 52
	CONSTANTE  shift 53
	'-'  shift 54
	.  error

	invocacion_funcion  goto 55
	expresion  goto 146
	termino  goto 57
	factor  goto 58


state 103
	asignacion : ID '[' CONSTANTE ']' . ASIGNACION expresion  (40)

	ASIGNACION  shift 147
	.  error


state 104
	salida_mensaje : OUTF '(' error ')' .  (137)

	.  reduce 137


state 105
	salida_mensaje : OUTF '(' CADENA ')' .  (135)

	.  reduce 135


state 106
	salida_mensaje : OUTF '(' expresion ')' .  (136)

	.  reduce 136


state 107
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base . '>' ID  (84)
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base . '>' error  (85)
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base . ID  (87)

	ID  shift 148
	'>'  shift 149
	.  error


state 108
	declaracion_tipo : TYPEDEF TRIPLE tipo_base ID .  (88)

	.  reduce 88


state 109
	declaracion_tipo : TYPEDEF TRIPLE tipo_base '>' . ID  (86)

	ID  shift 150
	.  error


state 110
	declaracion_tipo : TYPEDEF '<' tipo_base '>' . ID  (89)

	ID  shift 151
	.  error


state 111
	asignacion_for : ID ASIGNACION CONSTANTE .  (36)

	.  reduce 36


state 112
	asignacion : ID . ASIGNACION expresion  (39)
	asignacion : ID . '[' CONSTANTE ']' ASIGNACION expresion  (40)
	asignacion : ID . ASIGNACION error  (41)
	invocacion_funcion : ID . '(' expresion ')'  (90)
	invocacion_funcion : ID . '(' bloque_list_expresiones ')'  (91)
	invocacion_funcion : ID . '(' ')'  (92)
	invocacion_funcion : ID . '(' tipo_base '(' expresion ')' ')'  (93)

	ASIGNACION  shift 28
	'('  shift 29
	'['  shift 30
	.  error


state 113
	bloque_sentencias_ejecutables : BEGIN . list_sentencias_ejecutables END  (97)
	bloque_sentencias_ejecutables : BEGIN . error  (98)

	error  shift 152
	ID  shift 112
	IF  shift 5
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 153
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	list_sentencias_ejecutables  goto 154
	encabezado_if  goto 26


state 114
	sentencia_control : FOR '(' encabezado_for ')' . bloque_sentencias_ejecutables  (20)
	sentencia_control : FOR '(' encabezado_for ')' . error  (21)

	error  shift 155
	ID  shift 112
	IF  shift 5
	BEGIN  shift 113
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 115
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	bloque_sentencias_ejecutables  goto 156
	encabezado_if  goto 26


state 115
	bloque_sentencias_ejecutables : sentencia_ejecutable . ';'  (96)

	';'  shift 157
	.  error


state 116
	sentencia_control : FOR '(' encabezado_for bloque_sentencias_ejecutables .  (23)

	.  reduce 23


state 117
	sentencia_control : FOR encabezado_for ')' bloque_sentencias_ejecutables .  (22)

	.  reduce 22


state 118
	encabezado_for1 : asignacion_for ';' condicion . ';' up_down CONSTANTE  (26)
	encabezado_for1 : asignacion_for ';' condicion . ';' CONSTANTE  (27)
	encabezado_for1 : asignacion_for ';' condicion . up_down CONSTANTE  (29)
	encabezado_for1 : asignacion_for ';' condicion . ';' up_down  (30)
	encabezado_for2 : asignacion_for ';' condicion . ';' up_down CONSTANTE ';' '(' condicion ')'  (31)
	encabezado_for2 : asignacion_for ';' condicion . ';' CONSTANTE ';' '(' condicion ')'  (32)
	encabezado_for2 : asignacion_for ';' condicion . up_down CONSTANTE ';' '(' condicion ')'  (34)
	encabezado_for2 : asignacion_for ';' condicion . ';' up_down '(' condicion ')'  (35)

	UP  shift 158
	DOWN  shift 159
	';'  shift 160
	.  error

	up_down  goto 161


state 119
	condicion : '(' $$2 . bloque_list_expresiones $$3 ')' comparacion '(' $$4 bloque_list_expresiones $$5 ')'  (129)

	error  shift 59
	ID  shift 52
	CONSTANTE  shift 53
	'-'  shift 54
	.  error

	invocacion_funcion  goto 55
	expresion  goto 162
	termino  goto 57
	factor  goto 58
	bloque_list_expresiones  goto 163
	list_expresiones  goto 64


state 120
	encabezado_for1 : asignacion_for condicion ';' . up_down CONSTANTE  (28)
	encabezado_for2 : asignacion_for condicion ';' . up_down CONSTANTE ';' '(' condicion ')'  (33)

	UP  shift 158
	DOWN  shift 159
	.  error

	up_down  goto 164


state 121
	comparacion : MAYORIGUAL .  (118)

	.  reduce 118


state 122
	comparacion : MENORIGUAL .  (119)

	.  reduce 119


state 123
	comparacion : DISTINTO .  (120)

	.  reduce 120


state 124
	comparacion : '<' .  (123)

	.  reduce 123


state 125
	comparacion : '>' .  (122)

	.  reduce 122


state 126
	comparacion : '=' .  (121)

	.  reduce 121


state 127
	condicion : expresion comparacion . expresion  (124)

	ID  shift 52
	CONSTANTE  shift 53
	'-'  shift 54
	.  error

	invocacion_funcion  goto 55
	expresion  goto 165
	termino  goto 57
	factor  goto 58


state 128
	list_variables : list_variables ',' ID .  (46)

	.  reduce 46


state 129
	declaracion_funcion : encabezado_funcion '(' ')' BEGIN . cuerpo_funcion END  (54)
	cuerpo_funcion : .  (63)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 166
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	END  reduce 63

	sentencia  goto 167
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	encabezado_funcion  goto 25
	cuerpo_funcion  goto 168
	list_sentencias_funcion  goto 169
	sentencia_return  goto 170
	encabezado_if  goto 26


state 130
	parametro : tipo ID .  (55)

	.  reduce 55


state 131
	declaracion_funcion : encabezado_funcion '(' parametro ')' . BEGIN cuerpo_funcion $$1 END  (52)

	BEGIN  shift 171
	.  error


state 132
	declaracion_funcion : encabezado_funcion '(' bloque_list_parametro ')' . BEGIN cuerpo_funcion END  (53)

	BEGIN  shift 172
	.  error


state 133
	bloque_list_parametro : list_parametro ',' . parametro  (57)
	list_parametro : list_parametro ',' . parametro  (59)

	ID  shift 85
	ULONGINT  shift 9
	SINGLE  shift 10
	.  error

	tipo  goto 87
	tipo_base  goto 24
	parametro  goto 173


state 134
	bloque_if : encabezado_if '(' condicion ')' . THEN cuerpo_if_unico fin_if  (100)
	bloque_if : encabezado_if '(' condicion ')' . THEN cuerpo_if_bloque fin_if  (101)
	bloque_if : encabezado_if '(' condicion ')' . THEN cuerpo_if_unico ELSE cuerpo_if_unico fin_if  (102)
	bloque_if : encabezado_if '(' condicion ')' . THEN cuerpo_if_bloque ELSE cuerpo_if_bloque fin_if  (103)
	bloque_if : encabezado_if '(' condicion ')' . THEN cuerpo_if_unico ELSE cuerpo_if_bloque fin_if  (104)
	bloque_if : encabezado_if '(' condicion ')' . THEN cuerpo_if_bloque ELSE cuerpo_if_unico fin_if  (105)
	bloque_if : encabezado_if '(' condicion ')' . cuerpo_if_bloque ELSE cuerpo_if_unico fin_if  (106)
	bloque_if : encabezado_if '(' condicion ')' . THEN cuerpo_if_bloque cuerpo_if_unico fin_if  (107)
	bloque_if : encabezado_if '(' condicion ')' . cuerpo_if_bloque ELSE cuerpo_if_unico  (108)

	ID  shift 112
	IF  shift 5
	THEN  shift 174
	BEGIN  shift 175
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 153
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	list_sentencias_ejecutables  goto 176
	encabezado_if  goto 26
	cuerpo_if_bloque  goto 177


state 135
	factor : ID '[' CONSTANTE . ']'  (80)

	']'  shift 178
	.  error


state 136
	factor : '-' ID '[' . CONSTANTE ']'  (83)

	CONSTANTE  shift 179
	.  error


state 137
	expresion : expresion '+' error .  (70)

	.  reduce 70


state 138
	expresion : expresion '+' termino .  (67)
	termino : termino . '*' factor  (72)
	termino : termino . '/' factor  (73)
	termino : termino . '*' error  (75)
	termino : termino . '/' error  (76)

	'*'  shift 97
	'/'  shift 98
	$end  reduce 67
	ID  reduce 67
	MAYORIGUAL  reduce 67
	MENORIGUAL  reduce 67
	DISTINTO  reduce 67
	IF  reduce 67
	END  reduce 67
	OUTF  reduce 67
	TYPEDEF  reduce 67
	RET  reduce 67
	ULONGINT  reduce 67
	SINGLE  reduce 67
	FOR  reduce 67
	UP  reduce 67
	DOWN  reduce 67
	','  reduce 67
	';'  reduce 67
	')'  reduce 67
	'+'  reduce 67
	'-'  reduce 67
	'<'  reduce 67
	'>'  reduce 67
	'='  reduce 67


state 139
	expresion : expresion '-' error .  (71)

	.  reduce 71


state 140
	expresion : expresion '-' termino .  (68)
	termino : termino . '*' factor  (72)
	termino : termino . '/' factor  (73)
	termino : termino . '*' error  (75)
	termino : termino . '/' error  (76)

	'*'  shift 97
	'/'  shift 98
	$end  reduce 68
	ID  reduce 68
	MAYORIGUAL  reduce 68
	MENORIGUAL  reduce 68
	DISTINTO  reduce 68
	IF  reduce 68
	END  reduce 68
	OUTF  reduce 68
	TYPEDEF  reduce 68
	RET  reduce 68
	ULONGINT  reduce 68
	SINGLE  reduce 68
	FOR  reduce 68
	UP  reduce 68
	DOWN  reduce 68
	','  reduce 68
	';'  reduce 68
	')'  reduce 68
	'+'  reduce 68
	'-'  reduce 68
	'<'  reduce 68
	'>'  reduce 68
	'='  reduce 68


state 141
	termino : termino '*' error .  (75)

	.  reduce 75


state 142
	termino : termino '*' factor .  (72)

	.  reduce 72


state 143
	termino : termino '/' error .  (76)

	.  reduce 76


state 144
	termino : termino '/' factor .  (73)

	.  reduce 73


state 145
	expresion : expresion . '+' termino  (67)
	expresion : expresion . '-' termino  (68)
	expresion : expresion . '+' error  (70)
	expresion : expresion . '-' error  (71)
	invocacion_funcion : ID '(' tipo_base '(' expresion . ')' ')'  (93)

	')'  shift 180
	'+'  shift 95
	'-'  shift 96
	.  error


state 146
	expresion : expresion . '+' termino  (67)
	expresion : expresion . '-' termino  (68)
	expresion : expresion . '+' error  (70)
	expresion : expresion . '-' error  (71)
	bloque_list_expresiones : list_expresiones ',' expresion .  (131)
	list_expresiones : list_expresiones ',' expresion .  (132)

	'+'  shift 95
	'-'  shift 96
	','  reduce 132
	')'  reduce 131


state 147
	asignacion : ID '[' CONSTANTE ']' ASIGNACION . expresion  (40)

	ID  shift 52
	CONSTANTE  shift 53
	'-'  shift 54
	.  error

	invocacion_funcion  goto 55
	expresion  goto 181
	termino  goto 57
	factor  goto 58


state 148
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base ID .  (87)

	.  reduce 87


state 149
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' . ID  (84)
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' . error  (85)

	error  shift 182
	ID  shift 183
	.  error


state 150
	declaracion_tipo : TYPEDEF TRIPLE tipo_base '>' ID .  (86)

	.  reduce 86


state 151
	declaracion_tipo : TYPEDEF '<' tipo_base '>' ID .  (89)

	.  reduce 89


state 152
	bloque_sentencias_ejecutables : BEGIN error .  (98)

	.  reduce 98


state 153
	list_sentencias_ejecutables : sentencia_ejecutable . ';'  (117)

	';'  shift 184
	.  error


state 154
	bloque_sentencias_ejecutables : BEGIN list_sentencias_ejecutables . END  (97)
	list_sentencias_ejecutables : list_sentencias_ejecutables . sentencia_ejecutable ';'  (116)

	ID  shift 112
	IF  shift 5
	END  shift 185
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 186
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	encabezado_if  goto 26


state 155
	sentencia_control : FOR '(' encabezado_for ')' error .  (21)

	.  reduce 21


state 156
	sentencia_control : FOR '(' encabezado_for ')' bloque_sentencias_ejecutables .  (20)

	.  reduce 20


state 157
	bloque_sentencias_ejecutables : sentencia_ejecutable ';' .  (96)

	.  reduce 96


state 158
	up_down : UP .  (37)

	.  reduce 37


state 159
	up_down : DOWN .  (38)

	.  reduce 38


state 160
	encabezado_for1 : asignacion_for ';' condicion ';' . up_down CONSTANTE  (26)
	encabezado_for1 : asignacion_for ';' condicion ';' . CONSTANTE  (27)
	encabezado_for1 : asignacion_for ';' condicion ';' . up_down  (30)
	encabezado_for2 : asignacion_for ';' condicion ';' . up_down CONSTANTE ';' '(' condicion ')'  (31)
	encabezado_for2 : asignacion_for ';' condicion ';' . CONSTANTE ';' '(' condicion ')'  (32)
	encabezado_for2 : asignacion_for ';' condicion ';' . up_down '(' condicion ')'  (35)

	CONSTANTE  shift 187
	UP  shift 158
	DOWN  shift 159
	.  error

	up_down  goto 188


state 161
	encabezado_for1 : asignacion_for ';' condicion up_down . CONSTANTE  (29)
	encabezado_for2 : asignacion_for ';' condicion up_down . CONSTANTE ';' '(' condicion ')'  (34)

	CONSTANTE  shift 189
	.  error


state 162
	expresion : expresion . '+' termino  (67)
	expresion : expresion . '-' termino  (68)
	expresion : expresion . '+' error  (70)
	expresion : expresion . '-' error  (71)
	list_expresiones : expresion .  (133)

	'+'  shift 95
	'-'  shift 96
	','  reduce 133


state 163
	condicion : '(' $$2 bloque_list_expresiones . $$3 ')' comparacion '(' $$4 bloque_list_expresiones $$5 ')'  (129)
	$$3 : .  (126)

	.  reduce 126

	$$3  goto 190


state 164
	encabezado_for1 : asignacion_for condicion ';' up_down . CONSTANTE  (28)
	encabezado_for2 : asignacion_for condicion ';' up_down . CONSTANTE ';' '(' condicion ')'  (33)

	CONSTANTE  shift 191
	.  error


state 165
	expresion : expresion . '+' termino  (67)
	expresion : expresion . '-' termino  (68)
	expresion : expresion . '+' error  (70)
	expresion : expresion . '-' error  (71)
	condicion : expresion comparacion expresion .  (124)

	'+'  shift 95
	'-'  shift 96
	UP  reduce 124
	DOWN  reduce 124
	';'  reduce 124
	')'  reduce 124


state 166
	sentencia_return : RET . '(' expresion ')'  (66)

	'('  shift 192
	.  error


state 167
	list_sentencias_funcion : sentencia .  (65)

	.  reduce 65


state 168
	declaracion_funcion : encabezado_funcion '(' ')' BEGIN cuerpo_funcion . END  (54)

	END  shift 193
	.  error


state 169
	cuerpo_funcion : list_sentencias_funcion . sentencia_return ';'  (60)
	cuerpo_funcion : list_sentencias_funcion .  (61)
	list_sentencias_funcion : list_sentencias_funcion . sentencia  (64)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 166
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	END  reduce 61

	sentencia  goto 194
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	encabezado_funcion  goto 25
	sentencia_return  goto 195
	encabezado_if  goto 26


state 170
	cuerpo_funcion : sentencia_return . ';'  (62)

	';'  shift 196
	.  error


state 171
	declaracion_funcion : encabezado_funcion '(' parametro ')' BEGIN . cuerpo_funcion $$1 END  (52)
	cuerpo_funcion : .  (63)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 166
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	END  reduce 63

	sentencia  goto 167
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	encabezado_funcion  goto 25
	cuerpo_funcion  goto 197
	list_sentencias_funcion  goto 169
	sentencia_return  goto 170
	encabezado_if  goto 26


state 172
	declaracion_funcion : encabezado_funcion '(' bloque_list_parametro ')' BEGIN . cuerpo_funcion END  (53)
	cuerpo_funcion : .  (63)

	ID  shift 4
	IF  shift 5
	OUTF  shift 7
	TYPEDEF  shift 8
	RET  shift 166
	ULONGINT  shift 9
	SINGLE  shift 10
	FOR  shift 11
	END  reduce 63

	sentencia  goto 167
	sentencia_declarativa  goto 14
	sentencia_ejecutable  goto 15
	tipo  goto 16
	declaracion_funcion  goto 17
	declaracion_tipo  goto 18
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	tipo_base  goto 24
	encabezado_funcion  goto 25
	cuerpo_funcion  goto 198
	list_sentencias_funcion  goto 169
	sentencia_return  goto 170
	encabezado_if  goto 26


state 173
	bloque_list_parametro : list_parametro ',' parametro .  (57)
	list_parametro : list_parametro ',' parametro .  (59)

	','  reduce 59
	')'  reduce 57


state 174
	bloque_if : encabezado_if '(' condicion ')' THEN . cuerpo_if_unico fin_if  (100)
	bloque_if : encabezado_if '(' condicion ')' THEN . cuerpo_if_bloque fin_if  (101)
	bloque_if : encabezado_if '(' condicion ')' THEN . cuerpo_if_unico ELSE cuerpo_if_unico fin_if  (102)
	bloque_if : encabezado_if '(' condicion ')' THEN . cuerpo_if_bloque ELSE cuerpo_if_bloque fin_if  (103)
	bloque_if : encabezado_if '(' condicion ')' THEN . cuerpo_if_unico ELSE cuerpo_if_bloque fin_if  (104)
	bloque_if : encabezado_if '(' condicion ')' THEN . cuerpo_if_bloque ELSE cuerpo_if_unico fin_if  (105)
	bloque_if : encabezado_if '(' condicion ')' THEN . cuerpo_if_bloque cuerpo_if_unico fin_if  (107)

	ID  shift 112
	IF  shift 5
	BEGIN  shift 175
	OUTF  shift 7
	RET  shift 166
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 199
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	sentencia_return  goto 200
	list_sentencias_ejecutables  goto 176
	encabezado_if  goto 26
	cuerpo_if_unico  goto 201
	cuerpo_if_bloque  goto 202


state 175
	cuerpo_if_bloque : BEGIN . list_sentencias_ejecutables END  (112)
	cuerpo_if_bloque : BEGIN . list_sentencias_ejecutables sentencia_return END  (113)
	cuerpo_if_bloque : BEGIN . error  (114)

	error  shift 203
	ID  shift 112
	IF  shift 5
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 153
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	list_sentencias_ejecutables  goto 204
	encabezado_if  goto 26


state 176
	cuerpo_if_bloque : list_sentencias_ejecutables . END  (115)
	list_sentencias_ejecutables : list_sentencias_ejecutables . sentencia_ejecutable ';'  (116)

	ID  shift 112
	IF  shift 5
	END  shift 205
	OUTF  shift 7
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 186
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	encabezado_if  goto 26


state 177
	bloque_if : encabezado_if '(' condicion ')' cuerpo_if_bloque . ELSE cuerpo_if_unico fin_if  (106)
	bloque_if : encabezado_if '(' condicion ')' cuerpo_if_bloque . ELSE cuerpo_if_unico  (108)

	ELSE  shift 206
	.  error


state 178
	factor : ID '[' CONSTANTE ']' .  (80)

	.  reduce 80


state 179
	factor : '-' ID '[' CONSTANTE . ']'  (83)

	']'  shift 207
	.  error


state 180
	invocacion_funcion : ID '(' tipo_base '(' expresion ')' . ')'  (93)

	')'  shift 208
	.  error


state 181
	asignacion : ID '[' CONSTANTE ']' ASIGNACION expresion .  (40)
	expresion : expresion . '+' termino  (67)
	expresion : expresion . '-' termino  (68)
	expresion : expresion . '+' error  (70)
	expresion : expresion . '-' error  (71)

	'+'  shift 95
	'-'  shift 96
	$end  reduce 40
	ID  reduce 40
	IF  reduce 40
	END  reduce 40
	OUTF  reduce 40
	TYPEDEF  reduce 40
	RET  reduce 40
	ULONGINT  reduce 40
	SINGLE  reduce 40
	FOR  reduce 40
	';'  reduce 40


state 182
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' error .  (85)

	.  reduce 85


state 183
	declaracion_tipo : TYPEDEF TRIPLE '<' tipo_base '>' ID .  (84)

	.  reduce 84


state 184
	list_sentencias_ejecutables : sentencia_ejecutable ';' .  (117)

	.  reduce 117


state 185
	bloque_sentencias_ejecutables : BEGIN list_sentencias_ejecutables END .  (97)

	.  reduce 97


state 186
	list_sentencias_ejecutables : list_sentencias_ejecutables sentencia_ejecutable . ';'  (116)

	';'  shift 209
	.  error


state 187
	encabezado_for1 : asignacion_for ';' condicion ';' CONSTANTE .  (27)
	encabezado_for2 : asignacion_for ';' condicion ';' CONSTANTE . ';' '(' condicion ')'  (32)

	';'  shift 210
	ID  reduce 27
	IF  reduce 27
	BEGIN  reduce 27
	OUTF  reduce 27
	FOR  reduce 27
	')'  reduce 27


state 188
	encabezado_for1 : asignacion_for ';' condicion ';' up_down . CONSTANTE  (26)
	encabezado_for1 : asignacion_for ';' condicion ';' up_down .  (30)
	encabezado_for2 : asignacion_for ';' condicion ';' up_down . CONSTANTE ';' '(' condicion ')'  (31)
	encabezado_for2 : asignacion_for ';' condicion ';' up_down . '(' condicion ')'  (35)

	CONSTANTE  shift 211
	'('  shift 212
	ID  reduce 30
	IF  reduce 30
	BEGIN  reduce 30
	OUTF  reduce 30
	FOR  reduce 30
	')'  reduce 30


state 189
	encabezado_for1 : asignacion_for ';' condicion up_down CONSTANTE .  (29)
	encabezado_for2 : asignacion_for ';' condicion up_down CONSTANTE . ';' '(' condicion ')'  (34)

	';'  shift 213
	ID  reduce 29
	IF  reduce 29
	BEGIN  reduce 29
	OUTF  reduce 29
	FOR  reduce 29
	')'  reduce 29


state 190
	condicion : '(' $$2 bloque_list_expresiones $$3 . ')' comparacion '(' $$4 bloque_list_expresiones $$5 ')'  (129)

	')'  shift 214
	.  error


state 191
	encabezado_for1 : asignacion_for condicion ';' up_down CONSTANTE .  (28)
	encabezado_for2 : asignacion_for condicion ';' up_down CONSTANTE . ';' '(' condicion ')'  (33)

	';'  shift 215
	ID  reduce 28
	IF  reduce 28
	BEGIN  reduce 28
	OUTF  reduce 28
	FOR  reduce 28
	')'  reduce 28


state 192
	sentencia_return : RET '(' . expresion ')'  (66)

	ID  shift 52
	CONSTANTE  shift 53
	'-'  shift 54
	.  error

	invocacion_funcion  goto 55
	expresion  goto 216
	termino  goto 57
	factor  goto 58


state 193
	declaracion_funcion : encabezado_funcion '(' ')' BEGIN cuerpo_funcion END .  (54)

	.  reduce 54


state 194
	list_sentencias_funcion : list_sentencias_funcion sentencia .  (64)

	.  reduce 64


state 195
	cuerpo_funcion : list_sentencias_funcion sentencia_return . ';'  (60)

	';'  shift 217
	.  error


state 196
	cuerpo_funcion : sentencia_return ';' .  (62)

	.  reduce 62


state 197
	declaracion_funcion : encabezado_funcion '(' parametro ')' BEGIN cuerpo_funcion . $$1 END  (52)
	$$1 : .  (51)

	.  reduce 51

	$$1  goto 218


state 198
	declaracion_funcion : encabezado_funcion '(' bloque_list_parametro ')' BEGIN cuerpo_funcion . END  (53)

	END  shift 219
	.  error


state 199
	cuerpo_if_unico : sentencia_ejecutable . ';'  (109)
	list_sentencias_ejecutables : sentencia_ejecutable . ';'  (117)

	';'  shift 220
	.  error


state 200
	cuerpo_if_unico : sentencia_return . ';'  (110)
	cuerpo_if_unico : sentencia_return . error  (111)

	error  shift 221
	';'  shift 222
	.  error


state 201
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_unico . fin_if  (100)
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_unico . ELSE cuerpo_if_unico fin_if  (102)
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_unico . ELSE cuerpo_if_bloque fin_if  (104)

	error  shift 223
	ELSE  shift 224
	END_IF  shift 225
	.  error

	fin_if  goto 226


state 202
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_bloque . fin_if  (101)
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_bloque . ELSE cuerpo_if_bloque fin_if  (103)
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_bloque . ELSE cuerpo_if_unico fin_if  (105)
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_bloque . cuerpo_if_unico fin_if  (107)

	error  shift 223
	ID  shift 112
	IF  shift 5
	ELSE  shift 227
	END_IF  shift 225
	OUTF  shift 7
	RET  shift 166
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 228
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	sentencia_return  goto 200
	fin_if  goto 229
	encabezado_if  goto 26
	cuerpo_if_unico  goto 230


state 203
	cuerpo_if_bloque : BEGIN error .  (114)

	.  reduce 114


state 204
	cuerpo_if_bloque : BEGIN list_sentencias_ejecutables . END  (112)
	cuerpo_if_bloque : BEGIN list_sentencias_ejecutables . sentencia_return END  (113)
	list_sentencias_ejecutables : list_sentencias_ejecutables . sentencia_ejecutable ';'  (116)

	ID  shift 112
	IF  shift 5
	END  shift 231
	OUTF  shift 7
	RET  shift 166
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 186
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	sentencia_return  goto 232
	encabezado_if  goto 26


state 205
	cuerpo_if_bloque : list_sentencias_ejecutables END .  (115)

	.  reduce 115


state 206
	bloque_if : encabezado_if '(' condicion ')' cuerpo_if_bloque ELSE . cuerpo_if_unico fin_if  (106)
	bloque_if : encabezado_if '(' condicion ')' cuerpo_if_bloque ELSE . cuerpo_if_unico  (108)

	ID  shift 112
	IF  shift 5
	OUTF  shift 7
	RET  shift 166
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 228
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	sentencia_return  goto 200
	encabezado_if  goto 26
	cuerpo_if_unico  goto 233


state 207
	factor : '-' ID '[' CONSTANTE ']' .  (83)

	.  reduce 83


state 208
	invocacion_funcion : ID '(' tipo_base '(' expresion ')' ')' .  (93)

	.  reduce 93


state 209
	list_sentencias_ejecutables : list_sentencias_ejecutables sentencia_ejecutable ';' .  (116)

	.  reduce 116


state 210
	encabezado_for2 : asignacion_for ';' condicion ';' CONSTANTE ';' . '(' condicion ')'  (32)

	'('  shift 234
	.  error


state 211
	encabezado_for1 : asignacion_for ';' condicion ';' up_down CONSTANTE .  (26)
	encabezado_for2 : asignacion_for ';' condicion ';' up_down CONSTANTE . ';' '(' condicion ')'  (31)

	';'  shift 235
	ID  reduce 26
	IF  reduce 26
	BEGIN  reduce 26
	OUTF  reduce 26
	FOR  reduce 26
	')'  reduce 26


state 212
	encabezado_for2 : asignacion_for ';' condicion ';' up_down '(' . condicion ')'  (35)

	error  shift 77
	ID  shift 52
	CONSTANTE  shift 53
	'('  shift 79
	'-'  shift 54
	.  error

	invocacion_funcion  goto 55
	condicion  goto 236
	expresion  goto 81
	termino  goto 57
	factor  goto 58


state 213
	encabezado_for2 : asignacion_for ';' condicion up_down CONSTANTE ';' . '(' condicion ')'  (34)

	'('  shift 237
	.  error


state 214
	condicion : '(' $$2 bloque_list_expresiones $$3 ')' . comparacion '(' $$4 bloque_list_expresiones $$5 ')'  (129)

	MAYORIGUAL  shift 121
	MENORIGUAL  shift 122
	DISTINTO  shift 123
	'<'  shift 124
	'>'  shift 125
	'='  shift 126
	.  error

	comparacion  goto 238


state 215
	encabezado_for2 : asignacion_for condicion ';' up_down CONSTANTE ';' . '(' condicion ')'  (33)

	'('  shift 239
	.  error


state 216
	sentencia_return : RET '(' expresion . ')'  (66)
	expresion : expresion . '+' termino  (67)
	expresion : expresion . '-' termino  (68)
	expresion : expresion . '+' error  (70)
	expresion : expresion . '-' error  (71)

	')'  shift 240
	'+'  shift 95
	'-'  shift 96
	.  error


state 217
	cuerpo_funcion : list_sentencias_funcion sentencia_return ';' .  (60)

	.  reduce 60


state 218
	declaracion_funcion : encabezado_funcion '(' parametro ')' BEGIN cuerpo_funcion $$1 . END  (52)

	END  shift 241
	.  error


state 219
	declaracion_funcion : encabezado_funcion '(' bloque_list_parametro ')' BEGIN cuerpo_funcion END .  (53)

	.  reduce 53


state 220
	cuerpo_if_unico : sentencia_ejecutable ';' .  (109)
	list_sentencias_ejecutables : sentencia_ejecutable ';' .  (117)

	error  reduce 109
	ID  reduce 117
	IF  reduce 117
	ELSE  reduce 109
	END  reduce 117
	END_IF  reduce 109
	OUTF  reduce 117
	FOR  reduce 117


state 221
	cuerpo_if_unico : sentencia_return error .  (111)

	.  reduce 111


state 222
	cuerpo_if_unico : sentencia_return ';' .  (110)

	.  reduce 110


state 223
	fin_if : error .  (95)

	.  reduce 95


state 224
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_unico ELSE . cuerpo_if_unico fin_if  (102)
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_unico ELSE . cuerpo_if_bloque fin_if  (104)

	ID  shift 112
	IF  shift 5
	BEGIN  shift 175
	OUTF  shift 7
	RET  shift 166
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 199
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	sentencia_return  goto 200
	list_sentencias_ejecutables  goto 176
	encabezado_if  goto 26
	cuerpo_if_unico  goto 242
	cuerpo_if_bloque  goto 243


state 225
	fin_if : END_IF .  (94)

	.  reduce 94


state 226
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_unico fin_if .  (100)

	.  reduce 100


state 227
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_bloque ELSE . cuerpo_if_bloque fin_if  (103)
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_bloque ELSE . cuerpo_if_unico fin_if  (105)

	ID  shift 112
	IF  shift 5
	BEGIN  shift 175
	OUTF  shift 7
	RET  shift 166
	FOR  shift 11
	.  error

	sentencia_ejecutable  goto 199
	asignacion  goto 19
	invocacion_funcion  goto 20
	bloque_if  goto 21
	salida_mensaje  goto 22
	sentencia_control  goto 23
	sentencia_return  goto 200
	list_sentencias_ejecutables  goto 176
	encabezado_if  goto 26
	cuerpo_if_unico  goto 244
	cuerpo_if_bloque  goto 245


state 228
	cuerpo_if_unico : sentencia_ejecutable . ';'  (109)

	';'  shift 246
	.  error


state 229
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_bloque fin_if .  (101)

	.  reduce 101


state 230
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_bloque cuerpo_if_unico . fin_if  (107)

	error  shift 223
	END_IF  shift 225
	.  error

	fin_if  goto 247


state 231
	cuerpo_if_bloque : BEGIN list_sentencias_ejecutables END .  (112)

	.  reduce 112


state 232
	cuerpo_if_bloque : BEGIN list_sentencias_ejecutables sentencia_return . END  (113)

	END  shift 248
	.  error


state 233
	bloque_if : encabezado_if '(' condicion ')' cuerpo_if_bloque ELSE cuerpo_if_unico . fin_if  (106)
	bloque_if : encabezado_if '(' condicion ')' cuerpo_if_bloque ELSE cuerpo_if_unico .  (108)

	error  shift 223
	END_IF  shift 225
	$end  reduce 108
	ID  reduce 108
	IF  reduce 108
	END  reduce 108
	OUTF  reduce 108
	TYPEDEF  reduce 108
	RET  reduce 108
	ULONGINT  reduce 108
	SINGLE  reduce 108
	FOR  reduce 108
	';'  reduce 108

	fin_if  goto 249


state 234
	encabezado_for2 : asignacion_for ';' condicion ';' CONSTANTE ';' '(' . condicion ')'  (32)

	error  shift 77
	ID  shift 52
	CONSTANTE  shift 53
	'('  shift 79
	'-'  shift 54
	.  error

	invocacion_funcion  goto 55
	condicion  goto 250
	expresion  goto 81
	termino  goto 57
	factor  goto 58


state 235
	encabezado_for2 : asignacion_for ';' condicion ';' up_down CONSTANTE ';' . '(' condicion ')'  (31)

	'('  shift 251
	.  error


state 236
	encabezado_for2 : asignacion_for ';' condicion ';' up_down '(' condicion . ')'  (35)

	')'  shift 252
	.  error


state 237
	encabezado_for2 : asignacion_for ';' condicion up_down CONSTANTE ';' '(' . condicion ')'  (34)

	error  shift 77
	ID  shift 52
	CONSTANTE  shift 53
	'('  shift 79
	'-'  shift 54
	.  error

	invocacion_funcion  goto 55
	condicion  goto 253
	expresion  goto 81
	termino  goto 57
	factor  goto 58


state 238
	condicion : '(' $$2 bloque_list_expresiones $$3 ')' comparacion . '(' $$4 bloque_list_expresiones $$5 ')'  (129)

	'('  shift 254
	.  error


state 239
	encabezado_for2 : asignacion_for condicion ';' up_down CONSTANTE ';' '(' . condicion ')'  (33)

	error  shift 77
	ID  shift 52
	CONSTANTE  shift 53
	'('  shift 79
	'-'  shift 54
	.  error

	invocacion_funcion  goto 55
	condicion  goto 255
	expresion  goto 81
	termino  goto 57
	factor  goto 58


state 240
	sentencia_return : RET '(' expresion ')' .  (66)

	.  reduce 66


state 241
	declaracion_funcion : encabezado_funcion '(' parametro ')' BEGIN cuerpo_funcion $$1 END .  (52)

	.  reduce 52


state 242
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_unico ELSE cuerpo_if_unico . fin_if  (102)

	error  shift 223
	END_IF  shift 225
	.  error

	fin_if  goto 256


state 243
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_unico ELSE cuerpo_if_bloque . fin_if  (104)

	error  shift 223
	END_IF  shift 225
	.  error

	fin_if  goto 257


state 244
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_bloque ELSE cuerpo_if_unico . fin_if  (105)

	error  shift 223
	END_IF  shift 225
	.  error

	fin_if  goto 258


state 245
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_bloque ELSE cuerpo_if_bloque . fin_if  (103)

	error  shift 223
	END_IF  shift 225
	.  error

	fin_if  goto 259


state 246
	cuerpo_if_unico : sentencia_ejecutable ';' .  (109)

	.  reduce 109


state 247
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_bloque cuerpo_if_unico fin_if .  (107)

	.  reduce 107


state 248
	cuerpo_if_bloque : BEGIN list_sentencias_ejecutables sentencia_return END .  (113)

	.  reduce 113


state 249
	bloque_if : encabezado_if '(' condicion ')' cuerpo_if_bloque ELSE cuerpo_if_unico fin_if .  (106)

	.  reduce 106


state 250
	encabezado_for2 : asignacion_for ';' condicion ';' CONSTANTE ';' '(' condicion . ')'  (32)

	')'  shift 260
	.  error


state 251
	encabezado_for2 : asignacion_for ';' condicion ';' up_down CONSTANTE ';' '(' . condicion ')'  (31)

	error  shift 77
	ID  shift 52
	CONSTANTE  shift 53
	'('  shift 79
	'-'  shift 54
	.  error

	invocacion_funcion  goto 55
	condicion  goto 261
	expresion  goto 81
	termino  goto 57
	factor  goto 58


state 252
	encabezado_for2 : asignacion_for ';' condicion ';' up_down '(' condicion ')' .  (35)

	.  reduce 35


state 253
	encabezado_for2 : asignacion_for ';' condicion up_down CONSTANTE ';' '(' condicion . ')'  (34)

	')'  shift 262
	.  error


state 254
	condicion : '(' $$2 bloque_list_expresiones $$3 ')' comparacion '(' . $$4 bloque_list_expresiones $$5 ')'  (129)
	$$4 : .  (127)

	.  reduce 127

	$$4  goto 263


state 255
	encabezado_for2 : asignacion_for condicion ';' up_down CONSTANTE ';' '(' condicion . ')'  (33)

	')'  shift 264
	.  error


state 256
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_unico ELSE cuerpo_if_unico fin_if .  (102)

	.  reduce 102


state 257
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_unico ELSE cuerpo_if_bloque fin_if .  (104)

	.  reduce 104


state 258
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_bloque ELSE cuerpo_if_unico fin_if .  (105)

	.  reduce 105


state 259
	bloque_if : encabezado_if '(' condicion ')' THEN cuerpo_if_bloque ELSE cuerpo_if_bloque fin_if .  (103)

	.  reduce 103


state 260
	encabezado_for2 : asignacion_for ';' condicion ';' CONSTANTE ';' '(' condicion ')' .  (32)

	.  reduce 32


state 261
	encabezado_for2 : asignacion_for ';' condicion ';' up_down CONSTANTE ';' '(' condicion . ')'  (31)

	')'  shift 265
	.  error


state 262
	encabezado_for2 : asignacion_for ';' condicion up_down CONSTANTE ';' '(' condicion ')' .  (34)

	.  reduce 34


state 263
	condicion : '(' $$2 bloque_list_expresiones $$3 ')' comparacion '(' $$4 . bloque_list_expresiones $$5 ')'  (129)

	error  shift 59
	ID  shift 52
	CONSTANTE  shift 53
	'-'  shift 54
	.  error

	invocacion_funcion  goto 55
	expresion  goto 162
	termino  goto 57
	factor  goto 58
	bloque_list_expresiones  goto 266
	list_expresiones  goto 64


state 264
	encabezado_for2 : asignacion_for condicion ';' up_down CONSTANTE ';' '(' condicion ')' .  (33)

	.  reduce 33


state 265
	encabezado_for2 : asignacion_for ';' condicion ';' up_down CONSTANTE ';' '(' condicion ')' .  (31)

	.  reduce 31


state 266
	condicion : '(' $$2 bloque_list_expresiones $$3 ')' comparacion '(' $$4 bloque_list_expresiones . $$5 ')'  (129)
	$$5 : .  (128)

	.  reduce 128

	$$5  goto 267


state 267
	condicion : '(' $$2 bloque_list_expresiones $$3 ')' comparacion '(' $$4 bloque_list_expresiones $$5 . ')'  (129)

	')'  shift 268
	.  error


state 268
	condicion : '(' $$2 bloque_list_expresiones $$3 ')' comparacion '(' $$4 bloque_list_expresiones $$5 ')' .  (129)

	.  reduce 129


State 47 contains 1 shift/reduce conflict.


39 terminals, 46 nonterminals
139 grammar rules, 269 states
